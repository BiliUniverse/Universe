// @generated by protobuf-ts 2.8.2 with parameter output_javascript
// @generated from protobuf file "bilibili/pagination/pagination.proto" (package "bilibili.pagination", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * 分页信息
 *
 * @generated from protobuf message bilibili.pagination.FeedPagination
 */
export interface FeedPagination {
    /**
     * @generated from protobuf field: int32 page_size = 1;
     */
    pageSize: number;
    /**
     * @generated from protobuf field: string offset = 2;
     */
    offset: string;
    /**
     * @generated from protobuf field: bool is_refresh = 3;
     */
    isRefresh: boolean;
}
/**
 * 分页信息
 *
 * @generated from protobuf message bilibili.pagination.FeedPaginationReply
 */
export interface FeedPaginationReply {
    /**
     * @generated from protobuf field: string next_offset = 1;
     */
    nextOffset: string;
    /**
     * @generated from protobuf field: string prev_offset = 2;
     */
    prevOffset: string;
    /**
     * @generated from protobuf field: string last_read_offset = 3;
     */
    lastReadOffset: string;
}
/**
 * 分页信息
 *
 * @generated from protobuf message bilibili.pagination.Pagination
 */
export interface Pagination {
    /**
     * @generated from protobuf field: int32 page_size = 1;
     */
    pageSize: number;
    /**
     * @generated from protobuf field: string next = 2;
     */
    next: string;
}
/**
 * 分页信息
 *
 * @generated from protobuf message bilibili.pagination.PaginationReply
 */
export interface PaginationReply {
    /**
     * @generated from protobuf field: string next = 1;
     */
    next: string;
    /**
     * @generated from protobuf field: string prev = 2;
     */
    prev: string;
}
declare class FeedPagination$Type extends MessageType<FeedPagination> {
    constructor();
    create(value?: PartialMessage<FeedPagination>): FeedPagination;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FeedPagination): FeedPagination;
    internalBinaryWrite(message: FeedPagination, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message bilibili.pagination.FeedPagination
 */
export declare const FeedPagination: FeedPagination$Type;
declare class FeedPaginationReply$Type extends MessageType<FeedPaginationReply> {
    constructor();
    create(value?: PartialMessage<FeedPaginationReply>): FeedPaginationReply;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FeedPaginationReply): FeedPaginationReply;
    internalBinaryWrite(message: FeedPaginationReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message bilibili.pagination.FeedPaginationReply
 */
export declare const FeedPaginationReply: FeedPaginationReply$Type;
declare class Pagination$Type extends MessageType<Pagination> {
    constructor();
    create(value?: PartialMessage<Pagination>): Pagination;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Pagination): Pagination;
    internalBinaryWrite(message: Pagination, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message bilibili.pagination.Pagination
 */
export declare const Pagination: Pagination$Type;
declare class PaginationReply$Type extends MessageType<PaginationReply> {
    constructor();
    create(value?: PartialMessage<PaginationReply>): PaginationReply;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PaginationReply): PaginationReply;
    internalBinaryWrite(message: PaginationReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message bilibili.pagination.PaginationReply
 */
export declare const PaginationReply: PaginationReply$Type;
export {};
