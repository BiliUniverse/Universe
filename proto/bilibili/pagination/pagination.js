// @generated by protobuf-ts 2.8.2 with parameter output_javascript
// @generated from protobuf file "bilibili/pagination/pagination.proto" (package "bilibili.pagination", syntax proto3)
// tslint:disable
import { WireType } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
// @generated message type with reflection information, may provide speed optimized methods
class FeedPagination$Type extends MessageType {
    constructor() {
        super("bilibili.pagination.FeedPagination", [
            { no: 1, name: "page_size", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "offset", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "is_refresh", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value) {
        const message = { pageSize: 0, offset: "", isRefresh: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 page_size */ 1:
                    message.pageSize = reader.int32();
                    break;
                case /* string offset */ 2:
                    message.offset = reader.string();
                    break;
                case /* bool is_refresh */ 3:
                    message.isRefresh = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 page_size = 1; */
        if (message.pageSize !== 0)
            writer.tag(1, WireType.Varint).int32(message.pageSize);
        /* string offset = 2; */
        if (message.offset !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.offset);
        /* bool is_refresh = 3; */
        if (message.isRefresh !== false)
            writer.tag(3, WireType.Varint).bool(message.isRefresh);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.pagination.FeedPagination
 */
export const FeedPagination = new FeedPagination$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FeedPaginationReply$Type extends MessageType {
    constructor() {
        super("bilibili.pagination.FeedPaginationReply", [
            { no: 1, name: "next_offset", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "prev_offset", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "last_read_offset", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { nextOffset: "", prevOffset: "", lastReadOffset: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string next_offset */ 1:
                    message.nextOffset = reader.string();
                    break;
                case /* string prev_offset */ 2:
                    message.prevOffset = reader.string();
                    break;
                case /* string last_read_offset */ 3:
                    message.lastReadOffset = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string next_offset = 1; */
        if (message.nextOffset !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.nextOffset);
        /* string prev_offset = 2; */
        if (message.prevOffset !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.prevOffset);
        /* string last_read_offset = 3; */
        if (message.lastReadOffset !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.lastReadOffset);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.pagination.FeedPaginationReply
 */
export const FeedPaginationReply = new FeedPaginationReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Pagination$Type extends MessageType {
    constructor() {
        super("bilibili.pagination.Pagination", [
            { no: 1, name: "page_size", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "next", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { pageSize: 0, next: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 page_size */ 1:
                    message.pageSize = reader.int32();
                    break;
                case /* string next */ 2:
                    message.next = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 page_size = 1; */
        if (message.pageSize !== 0)
            writer.tag(1, WireType.Varint).int32(message.pageSize);
        /* string next = 2; */
        if (message.next !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.next);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.pagination.Pagination
 */
export const Pagination = new Pagination$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PaginationReply$Type extends MessageType {
    constructor() {
        super("bilibili.pagination.PaginationReply", [
            { no: 1, name: "next", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "prev", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { next: "", prev: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string next */ 1:
                    message.next = reader.string();
                    break;
                case /* string prev */ 2:
                    message.prev = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string next = 1; */
        if (message.next !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.next);
        /* string prev = 2; */
        if (message.prev !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.prev);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.pagination.PaginationReply
 */
export const PaginationReply = new PaginationReply$Type();
