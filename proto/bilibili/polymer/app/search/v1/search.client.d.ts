// @generated by protobuf-ts 2.8.2 with parameter output_javascript
// @generated from protobuf file "bilibili/polymer/app/search/v1/search.proto" (package "bilibili.polymer.app.search.v1", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import type { SearchComicResponse } from "./search";
import type { SearchComicRequest } from "./search";
import type { SearchByTypeResponse } from "./search";
import type { SearchByTypeRequest } from "./search";
import type { SearchAllResponse } from "./search";
import type { SearchAllRequest } from "./search";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service bilibili.polymer.app.search.v1.Search
 */
export interface ISearchClient {
    /**
     * 搜索所有类型结果
     *
     * @generated from protobuf rpc: SearchAll(bilibili.polymer.app.search.v1.SearchAllRequest) returns (bilibili.polymer.app.search.v1.SearchAllResponse);
     */
    searchAll(input: SearchAllRequest, options?: RpcOptions): UnaryCall<SearchAllRequest, SearchAllResponse>;
    /**
     * 搜索指定类型结果
     *
     * @generated from protobuf rpc: SearchByType(bilibili.polymer.app.search.v1.SearchByTypeRequest) returns (bilibili.polymer.app.search.v1.SearchByTypeResponse);
     */
    searchByType(input: SearchByTypeRequest, options?: RpcOptions): UnaryCall<SearchByTypeRequest, SearchByTypeResponse>;
    /**
     * @generated from protobuf rpc: SearchComic(bilibili.polymer.app.search.v1.SearchComicRequest) returns (bilibili.polymer.app.search.v1.SearchComicResponse);
     */
    searchComic(input: SearchComicRequest, options?: RpcOptions): UnaryCall<SearchComicRequest, SearchComicResponse>;
}
/**
 * @generated from protobuf service bilibili.polymer.app.search.v1.Search
 */
export declare class SearchClient implements ISearchClient, ServiceInfo {
    private readonly _transport;
    typeName: any;
    methods: any;
    options: any;
    constructor(_transport: RpcTransport);
    /**
     * 搜索所有类型结果
     *
     * @generated from protobuf rpc: SearchAll(bilibili.polymer.app.search.v1.SearchAllRequest) returns (bilibili.polymer.app.search.v1.SearchAllResponse);
     */
    searchAll(input: SearchAllRequest, options?: RpcOptions): UnaryCall<SearchAllRequest, SearchAllResponse>;
    /**
     * 搜索指定类型结果
     *
     * @generated from protobuf rpc: SearchByType(bilibili.polymer.app.search.v1.SearchByTypeRequest) returns (bilibili.polymer.app.search.v1.SearchByTypeResponse);
     */
    searchByType(input: SearchByTypeRequest, options?: RpcOptions): UnaryCall<SearchByTypeRequest, SearchByTypeResponse>;
    /**
     * @generated from protobuf rpc: SearchComic(bilibili.polymer.app.search.v1.SearchComicRequest) returns (bilibili.polymer.app.search.v1.SearchComicResponse);
     */
    searchComic(input: SearchComicRequest, options?: RpcOptions): UnaryCall<SearchComicRequest, SearchComicResponse>;
}
