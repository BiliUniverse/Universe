// @generated by protobuf-ts 2.8.2 with parameter output_javascript
// @generated from protobuf file "bilibili/polymer/app/search/v1/search.proto" (package "bilibili.polymer.app.search.v1", syntax proto3)
// tslint:disable
// @generated by protobuf-ts 2.8.2 with parameter output_javascript
// @generated from protobuf file "bilibili/polymer/app/search/v1/search.proto" (package "bilibili.polymer.app.search.v1", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { WireType } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { PaginationReply } from "../../../../pagination/pagination";
import { PlayerArgs as PlayerArgs$ } from "../../../../app/archive/middleware/v1/preload";
import { Pagination } from "../../../../pagination/pagination";
/**
 * @generated from protobuf enum bilibili.polymer.app.search.v1.CategorySort
 */
export var CategorySort;
(function (CategorySort) {
    /**
     * @generated from protobuf enum value: CATEGORY_SORT_DEFAULT = 0;
     */
    CategorySort[CategorySort["DEFAULT"] = 0] = "DEFAULT";
    /**
     * @generated from protobuf enum value: CATEGORY_SORT_PUBLISH_TIME = 1;
     */
    CategorySort[CategorySort["PUBLISH_TIME"] = 1] = "PUBLISH_TIME";
    /**
     * @generated from protobuf enum value: CATEGORY_SORT_CLICK_COUNT = 2;
     */
    CategorySort[CategorySort["CLICK_COUNT"] = 2] = "CLICK_COUNT";
    /**
     * @generated from protobuf enum value: CATEGORY_SORT_COMMENT_COUNT = 3;
     */
    CategorySort[CategorySort["COMMENT_COUNT"] = 3] = "COMMENT_COUNT";
    /**
     * @generated from protobuf enum value: CATEGORY_SORT_LIKE_COUNT = 4;
     */
    CategorySort[CategorySort["LIKE_COUNT"] = 4] = "LIKE_COUNT";
})(CategorySort || (CategorySort = {}));
/**
 * @generated from protobuf enum bilibili.polymer.app.search.v1.Sort
 */
export var Sort;
(function (Sort) {
    /**
     * @generated from protobuf enum value: SORT_DEFAULT = 0;
     */
    Sort[Sort["DEFAULT"] = 0] = "DEFAULT";
    /**
     * @generated from protobuf enum value: SORT_VIEW_COUNT = 1;
     */
    Sort[Sort["VIEW_COUNT"] = 1] = "VIEW_COUNT";
    /**
     * @generated from protobuf enum value: SORT_PUBLISH_TIME = 2;
     */
    Sort[Sort["PUBLISH_TIME"] = 2] = "PUBLISH_TIME";
    /**
     * @generated from protobuf enum value: SORT_DANMAKU_COUNT = 3;
     */
    Sort[Sort["DANMAKU_COUNT"] = 3] = "DANMAKU_COUNT";
})(Sort || (Sort = {}));
/**
 * @generated from protobuf enum bilibili.polymer.app.search.v1.UserSort
 */
export var UserSort;
(function (UserSort) {
    /**
     * @generated from protobuf enum value: USER_SORT_DEFAULT = 0;
     */
    UserSort[UserSort["DEFAULT"] = 0] = "DEFAULT";
    /**
     * @generated from protobuf enum value: USER_SORT_FANS_DESCEND = 1;
     */
    UserSort[UserSort["FANS_DESCEND"] = 1] = "FANS_DESCEND";
    /**
     * @generated from protobuf enum value: USER_SORT_FANS_ASCEND = 2;
     */
    UserSort[UserSort["FANS_ASCEND"] = 2] = "FANS_ASCEND";
    /**
     * @generated from protobuf enum value: USER_SORT_LEVEL_DESCEND = 3;
     */
    UserSort[UserSort["LEVEL_DESCEND"] = 3] = "LEVEL_DESCEND";
    /**
     * @generated from protobuf enum value: USER_SORT_LEVEL_ASCEND = 4;
     */
    UserSort[UserSort["LEVEL_ASCEND"] = 4] = "LEVEL_ASCEND";
})(UserSort || (UserSort = {}));
/**
 * @generated from protobuf enum bilibili.polymer.app.search.v1.UserType
 */
export var UserType;
(function (UserType) {
    /**
     * @generated from protobuf enum value: ALL = 0;
     */
    UserType[UserType["ALL"] = 0] = "ALL";
    /**
     * @generated from protobuf enum value: UP = 1;
     */
    UserType[UserType["UP"] = 1] = "UP";
    /**
     * @generated from protobuf enum value: NORMAL_USER = 2;
     */
    UserType[UserType["NORMAL_USER"] = 2] = "NORMAL_USER";
    /**
     * @generated from protobuf enum value: AUTHENTICATED_USER = 3;
     */
    UserType[UserType["AUTHENTICATED_USER"] = 3] = "AUTHENTICATED_USER";
})(UserType || (UserType = {}));
// @generated message type with reflection information, may provide speed optimized methods
class Args$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.Args", [
            { no: 1, name: "online", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "rname", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "room_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "tname", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "up_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 6, name: "up_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "rid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 8, name: "tid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 9, name: "aid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { online: 0, rname: "", roomId: 0n, tname: "", upId: 0n, upName: "", rid: 0n, tid: 0n, aid: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 online */ 1:
                    message.online = reader.int32();
                    break;
                case /* string rname */ 2:
                    message.rname = reader.string();
                    break;
                case /* int64 room_id */ 3:
                    message.roomId = reader.int64().toBigInt();
                    break;
                case /* string tname */ 4:
                    message.tname = reader.string();
                    break;
                case /* int64 up_id */ 5:
                    message.upId = reader.int64().toBigInt();
                    break;
                case /* string up_name */ 6:
                    message.upName = reader.string();
                    break;
                case /* int64 rid */ 7:
                    message.rid = reader.int64().toBigInt();
                    break;
                case /* int64 tid */ 8:
                    message.tid = reader.int64().toBigInt();
                    break;
                case /* int64 aid */ 9:
                    message.aid = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 online = 1; */
        if (message.online !== 0)
            writer.tag(1, WireType.Varint).int32(message.online);
        /* string rname = 2; */
        if (message.rname !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.rname);
        /* int64 room_id = 3; */
        if (message.roomId !== 0n)
            writer.tag(3, WireType.Varint).int64(message.roomId);
        /* string tname = 4; */
        if (message.tname !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.tname);
        /* int64 up_id = 5; */
        if (message.upId !== 0n)
            writer.tag(5, WireType.Varint).int64(message.upId);
        /* string up_name = 6; */
        if (message.upName !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.upName);
        /* int64 rid = 7; */
        if (message.rid !== 0n)
            writer.tag(7, WireType.Varint).int64(message.rid);
        /* int64 tid = 8; */
        if (message.tid !== 0n)
            writer.tag(8, WireType.Varint).int64(message.tid);
        /* int64 aid = 9; */
        if (message.aid !== 0n)
            writer.tag(9, WireType.Varint).int64(message.aid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.Args
 */
export const Args = new Args$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Avatar$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.Avatar", [
            { no: 1, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "event", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "event_v2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "up_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 6, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "face_nft_new", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "nft_face_icon", kind: "message", T: () => NftFaceIcon }
        ]);
    }
    create(value) {
        const message = { cover: "", event: "", eventV2: "", text: "", upId: 0n, uri: "", faceNftNew: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string cover */ 1:
                    message.cover = reader.string();
                    break;
                case /* string event */ 2:
                    message.event = reader.string();
                    break;
                case /* string event_v2 */ 3:
                    message.eventV2 = reader.string();
                    break;
                case /* string text */ 4:
                    message.text = reader.string();
                    break;
                case /* int64 up_id */ 5:
                    message.upId = reader.int64().toBigInt();
                    break;
                case /* string uri */ 6:
                    message.uri = reader.string();
                    break;
                case /* int32 face_nft_new */ 7:
                    message.faceNftNew = reader.int32();
                    break;
                case /* bilibili.polymer.app.search.v1.NftFaceIcon nft_face_icon */ 8:
                    message.nftFaceIcon = NftFaceIcon.internalBinaryRead(reader, reader.uint32(), options, message.nftFaceIcon);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string cover = 1; */
        if (message.cover !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.cover);
        /* string event = 2; */
        if (message.event !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.event);
        /* string event_v2 = 3; */
        if (message.eventV2 !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.eventV2);
        /* string text = 4; */
        if (message.text !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.text);
        /* int64 up_id = 5; */
        if (message.upId !== 0n)
            writer.tag(5, WireType.Varint).int64(message.upId);
        /* string uri = 6; */
        if (message.uri !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.uri);
        /* int32 face_nft_new = 7; */
        if (message.faceNftNew !== 0)
            writer.tag(7, WireType.Varint).int32(message.faceNftNew);
        /* bilibili.polymer.app.search.v1.NftFaceIcon nft_face_icon = 8; */
        if (message.nftFaceIcon)
            NftFaceIcon.internalBinaryWrite(message.nftFaceIcon, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.Avatar
 */
export const Avatar = new Avatar$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvItem$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.AvItem", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "ctime_label", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "duration", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "play", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 7, name: "danmaku", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 8, name: "ctime", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 9, name: "goto", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "param", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "position", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 12, name: "ctime_label_v2", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "", uri: "", ctimeLabel: "", duration: "", play: 0, danmaku: 0n, ctime: 0, goto: "", param: "", position: 0, ctimeLabelV2: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* string uri */ 3:
                    message.uri = reader.string();
                    break;
                case /* string ctime_label */ 4:
                    message.ctimeLabel = reader.string();
                    break;
                case /* string duration */ 5:
                    message.duration = reader.string();
                    break;
                case /* int32 play */ 6:
                    message.play = reader.int32();
                    break;
                case /* int64 danmaku */ 7:
                    message.danmaku = reader.int64().toBigInt();
                    break;
                case /* int32 ctime */ 8:
                    message.ctime = reader.int32();
                    break;
                case /* string goto */ 9:
                    message.goto = reader.string();
                    break;
                case /* string param */ 10:
                    message.param = reader.string();
                    break;
                case /* int32 position */ 11:
                    message.position = reader.int32();
                    break;
                case /* string ctime_label_v2 */ 12:
                    message.ctimeLabelV2 = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* string uri = 3; */
        if (message.uri !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.uri);
        /* string ctime_label = 4; */
        if (message.ctimeLabel !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.ctimeLabel);
        /* string duration = 5; */
        if (message.duration !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.duration);
        /* int32 play = 6; */
        if (message.play !== 0)
            writer.tag(6, WireType.Varint).int32(message.play);
        /* int64 danmaku = 7; */
        if (message.danmaku !== 0n)
            writer.tag(7, WireType.Varint).int64(message.danmaku);
        /* int32 ctime = 8; */
        if (message.ctime !== 0)
            writer.tag(8, WireType.Varint).int32(message.ctime);
        /* string goto = 9; */
        if (message.goto !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.goto);
        /* string param = 10; */
        if (message.param !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.param);
        /* int32 position = 11; */
        if (message.position !== 0)
            writer.tag(11, WireType.Varint).int32(message.position);
        /* string ctime_label_v2 = 12; */
        if (message.ctimeLabelV2 !== "")
            writer.tag(12, WireType.LengthDelimited).string(message.ctimeLabelV2);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.AvItem
 */
export const AvItem = new AvItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Background$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.Background", [
            { no: 1, name: "show", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "bg_pic_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "fg_pic_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { show: 0, bgPicUrl: "", fgPicUrl: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 show */ 1:
                    message.show = reader.int32();
                    break;
                case /* string bg_pic_url */ 2:
                    message.bgPicUrl = reader.string();
                    break;
                case /* string fg_pic_url */ 3:
                    message.fgPicUrl = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 show = 1; */
        if (message.show !== 0)
            writer.tag(1, WireType.Varint).int32(message.show);
        /* string bg_pic_url = 2; */
        if (message.bgPicUrl !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.bgPicUrl);
        /* string fg_pic_url = 3; */
        if (message.fgPicUrl !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.fgPicUrl);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.Background
 */
export const Background = new Background$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Badge$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.Badge", [
            { no: 1, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "bg_cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { text: "", bgCover: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string text */ 1:
                    message.text = reader.string();
                    break;
                case /* string bg_cover */ 2:
                    message.bgCover = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string text = 1; */
        if (message.text !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.text);
        /* string bg_cover = 2; */
        if (message.bgCover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.bgCover);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.Badge
 */
export const Badge = new Badge$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Badge2$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.Badge2", [
            { no: 1, name: "bg_cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { bgCover: "", text: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string bg_cover */ 1:
                    message.bgCover = reader.string();
                    break;
                case /* string text */ 2:
                    message.text = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string bg_cover = 1; */
        if (message.bgCover !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.bgCover);
        /* string text = 2; */
        if (message.text !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.text);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.Badge2
 */
export const Badge2 = new Badge2$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BottomButton$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.BottomButton", [
            { no: 1, name: "desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "link", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { desc: "", link: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string desc */ 1:
                    message.desc = reader.string();
                    break;
                case /* string link */ 2:
                    message.link = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string desc = 1; */
        if (message.desc !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.desc);
        /* string link = 2; */
        if (message.link !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.link);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.BottomButton
 */
export const BottomButton = new BottomButton$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BrandADAccount$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.BrandADAccount", [
            { no: 1, name: "param", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "goto", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "mid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "face", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "sign", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "relation", kind: "message", T: () => Relation },
            { no: 8, name: "roomid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 9, name: "live_status", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 10, name: "live_link", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "official_verify", kind: "message", T: () => OfficialVerify },
            { no: 12, name: "vip", kind: "message", T: () => VipInfo },
            { no: 13, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 14, name: "face_nft_new", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { param: "", goto: "", mid: 0n, name: "", face: "", sign: "", roomid: 0n, liveStatus: 0n, liveLink: "", uri: "", faceNftNew: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string param */ 1:
                    message.param = reader.string();
                    break;
                case /* string goto */ 2:
                    message.goto = reader.string();
                    break;
                case /* int64 mid */ 3:
                    message.mid = reader.int64().toBigInt();
                    break;
                case /* string name */ 4:
                    message.name = reader.string();
                    break;
                case /* string face */ 5:
                    message.face = reader.string();
                    break;
                case /* string sign */ 6:
                    message.sign = reader.string();
                    break;
                case /* bilibili.polymer.app.search.v1.Relation relation */ 7:
                    message.relation = Relation.internalBinaryRead(reader, reader.uint32(), options, message.relation);
                    break;
                case /* int64 roomid */ 8:
                    message.roomid = reader.int64().toBigInt();
                    break;
                case /* int64 live_status */ 9:
                    message.liveStatus = reader.int64().toBigInt();
                    break;
                case /* string live_link */ 10:
                    message.liveLink = reader.string();
                    break;
                case /* bilibili.polymer.app.search.v1.OfficialVerify official_verify */ 11:
                    message.officialVerify = OfficialVerify.internalBinaryRead(reader, reader.uint32(), options, message.officialVerify);
                    break;
                case /* bilibili.polymer.app.search.v1.VipInfo vip */ 12:
                    message.vip = VipInfo.internalBinaryRead(reader, reader.uint32(), options, message.vip);
                    break;
                case /* string uri */ 13:
                    message.uri = reader.string();
                    break;
                case /* int32 face_nft_new */ 14:
                    message.faceNftNew = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string param = 1; */
        if (message.param !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.param);
        /* string goto = 2; */
        if (message.goto !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.goto);
        /* int64 mid = 3; */
        if (message.mid !== 0n)
            writer.tag(3, WireType.Varint).int64(message.mid);
        /* string name = 4; */
        if (message.name !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.name);
        /* string face = 5; */
        if (message.face !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.face);
        /* string sign = 6; */
        if (message.sign !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.sign);
        /* bilibili.polymer.app.search.v1.Relation relation = 7; */
        if (message.relation)
            Relation.internalBinaryWrite(message.relation, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* int64 roomid = 8; */
        if (message.roomid !== 0n)
            writer.tag(8, WireType.Varint).int64(message.roomid);
        /* int64 live_status = 9; */
        if (message.liveStatus !== 0n)
            writer.tag(9, WireType.Varint).int64(message.liveStatus);
        /* string live_link = 10; */
        if (message.liveLink !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.liveLink);
        /* bilibili.polymer.app.search.v1.OfficialVerify official_verify = 11; */
        if (message.officialVerify)
            OfficialVerify.internalBinaryWrite(message.officialVerify, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.VipInfo vip = 12; */
        if (message.vip)
            VipInfo.internalBinaryWrite(message.vip, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        /* string uri = 13; */
        if (message.uri !== "")
            writer.tag(13, WireType.LengthDelimited).string(message.uri);
        /* int32 face_nft_new = 14; */
        if (message.faceNftNew !== 0)
            writer.tag(14, WireType.Varint).int32(message.faceNftNew);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.BrandADAccount
 */
export const BrandADAccount = new BrandADAccount$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BrandADArc$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.BrandADArc", [
            { no: 1, name: "param", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "goto", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "aid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "play", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 5, name: "reply", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 6, name: "duration", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "author", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { param: "", goto: "", aid: 0n, play: 0n, reply: 0n, duration: "", author: "", title: "", uri: "", cover: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string param */ 1:
                    message.param = reader.string();
                    break;
                case /* string goto */ 2:
                    message.goto = reader.string();
                    break;
                case /* int64 aid */ 3:
                    message.aid = reader.int64().toBigInt();
                    break;
                case /* int64 play */ 4:
                    message.play = reader.int64().toBigInt();
                    break;
                case /* int64 reply */ 5:
                    message.reply = reader.int64().toBigInt();
                    break;
                case /* string duration */ 6:
                    message.duration = reader.string();
                    break;
                case /* string author */ 7:
                    message.author = reader.string();
                    break;
                case /* string title */ 8:
                    message.title = reader.string();
                    break;
                case /* string uri */ 9:
                    message.uri = reader.string();
                    break;
                case /* string cover */ 10:
                    message.cover = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string param = 1; */
        if (message.param !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.param);
        /* string goto = 2; */
        if (message.goto !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.goto);
        /* int64 aid = 3; */
        if (message.aid !== 0n)
            writer.tag(3, WireType.Varint).int64(message.aid);
        /* int64 play = 4; */
        if (message.play !== 0n)
            writer.tag(4, WireType.Varint).int64(message.play);
        /* int64 reply = 5; */
        if (message.reply !== 0n)
            writer.tag(5, WireType.Varint).int64(message.reply);
        /* string duration = 6; */
        if (message.duration !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.duration);
        /* string author = 7; */
        if (message.author !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.author);
        /* string title = 8; */
        if (message.title !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.title);
        /* string uri = 9; */
        if (message.uri !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.uri);
        /* string cover = 10; */
        if (message.cover !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.cover);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.BrandADArc
 */
export const BrandADArc = new BrandADArc$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Button$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.Button", [
            { no: 1, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "param", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "event", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "selected", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 7, name: "event_v2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "relation", kind: "message", T: () => Relation }
        ]);
    }
    create(value) {
        const message = { text: "", param: "", uri: "", event: "", selected: 0, type: 0, eventV2: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string text */ 1:
                    message.text = reader.string();
                    break;
                case /* string param */ 2:
                    message.param = reader.string();
                    break;
                case /* string uri */ 3:
                    message.uri = reader.string();
                    break;
                case /* string event */ 4:
                    message.event = reader.string();
                    break;
                case /* int32 selected */ 5:
                    message.selected = reader.int32();
                    break;
                case /* int32 type */ 6:
                    message.type = reader.int32();
                    break;
                case /* string event_v2 */ 7:
                    message.eventV2 = reader.string();
                    break;
                case /* bilibili.polymer.app.search.v1.Relation relation */ 8:
                    message.relation = Relation.internalBinaryRead(reader, reader.uint32(), options, message.relation);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string text = 1; */
        if (message.text !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.text);
        /* string param = 2; */
        if (message.param !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.param);
        /* string uri = 3; */
        if (message.uri !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.uri);
        /* string event = 4; */
        if (message.event !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.event);
        /* int32 selected = 5; */
        if (message.selected !== 0)
            writer.tag(5, WireType.Varint).int32(message.selected);
        /* int32 type = 6; */
        if (message.type !== 0)
            writer.tag(6, WireType.Varint).int32(message.type);
        /* string event_v2 = 7; */
        if (message.eventV2 !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.eventV2);
        /* bilibili.polymer.app.search.v1.Relation relation = 8; */
        if (message.relation)
            Relation.internalBinaryWrite(message.relation, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.Button
 */
export const Button = new Button$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ButtonMeta$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.ButtonMeta", [
            { no: 1, name: "icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "button_status", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "toast", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { icon: "", text: "", buttonStatus: "", toast: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string icon */ 1:
                    message.icon = reader.string();
                    break;
                case /* string text */ 2:
                    message.text = reader.string();
                    break;
                case /* string button_status */ 3:
                    message.buttonStatus = reader.string();
                    break;
                case /* string toast */ 4:
                    message.toast = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string icon = 1; */
        if (message.icon !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.icon);
        /* string text = 2; */
        if (message.text !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.text);
        /* string button_status = 3; */
        if (message.buttonStatus !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.buttonStatus);
        /* string toast = 4; */
        if (message.toast !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.toast);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.ButtonMeta
 */
export const ButtonMeta = new ButtonMeta$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CardBusinessBadge$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.CardBusinessBadge", [
            { no: 1, name: "goto_icon", kind: "message", T: () => GotoIcon },
            { no: 2, name: "badge_style", kind: "message", T: () => ReasonStyle }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.polymer.app.search.v1.GotoIcon goto_icon */ 1:
                    message.gotoIcon = GotoIcon.internalBinaryRead(reader, reader.uint32(), options, message.gotoIcon);
                    break;
                case /* bilibili.polymer.app.search.v1.ReasonStyle badge_style */ 2:
                    message.badgeStyle = ReasonStyle.internalBinaryRead(reader, reader.uint32(), options, message.badgeStyle);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.polymer.app.search.v1.GotoIcon goto_icon = 1; */
        if (message.gotoIcon)
            GotoIcon.internalBinaryWrite(message.gotoIcon, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.ReasonStyle badge_style = 2; */
        if (message.badgeStyle)
            ReasonStyle.internalBinaryWrite(message.badgeStyle, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.CardBusinessBadge
 */
export const CardBusinessBadge = new CardBusinessBadge$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChannelLabel$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.ChannelLabel", [
            { no: 1, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { text: "", uri: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string text */ 1:
                    message.text = reader.string();
                    break;
                case /* string uri */ 2:
                    message.uri = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string text = 1; */
        if (message.text !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.text);
        /* string uri = 2; */
        if (message.uri !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.uri);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.ChannelLabel
 */
export const ChannelLabel = new ChannelLabel$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChannelMixedItem$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.ChannelMixedItem", [
            { no: 1, name: "id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "cover_left_icon1", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "cover_left_text1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "goto", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "param", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "badge", kind: "message", T: () => Badge2 }
        ]);
    }
    create(value) {
        const message = { id: 0n, coverLeftIcon1: 0, coverLeftText1: "", cover: "", goto: "", param: "", uri: "", title: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 id */ 1:
                    message.id = reader.int64().toBigInt();
                    break;
                case /* int32 cover_left_icon1 */ 2:
                    message.coverLeftIcon1 = reader.int32();
                    break;
                case /* string cover_left_text1 */ 3:
                    message.coverLeftText1 = reader.string();
                    break;
                case /* string cover */ 4:
                    message.cover = reader.string();
                    break;
                case /* string goto */ 5:
                    message.goto = reader.string();
                    break;
                case /* string param */ 6:
                    message.param = reader.string();
                    break;
                case /* string uri */ 7:
                    message.uri = reader.string();
                    break;
                case /* string title */ 8:
                    message.title = reader.string();
                    break;
                case /* bilibili.polymer.app.search.v1.Badge2 badge */ 9:
                    message.badge = Badge2.internalBinaryRead(reader, reader.uint32(), options, message.badge);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 id = 1; */
        if (message.id !== 0n)
            writer.tag(1, WireType.Varint).int64(message.id);
        /* int32 cover_left_icon1 = 2; */
        if (message.coverLeftIcon1 !== 0)
            writer.tag(2, WireType.Varint).int32(message.coverLeftIcon1);
        /* string cover_left_text1 = 3; */
        if (message.coverLeftText1 !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.coverLeftText1);
        /* string cover = 4; */
        if (message.cover !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.cover);
        /* string goto = 5; */
        if (message.goto !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.goto);
        /* string param = 6; */
        if (message.param !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.param);
        /* string uri = 7; */
        if (message.uri !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.uri);
        /* string title = 8; */
        if (message.title !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.title);
        /* bilibili.polymer.app.search.v1.Badge2 badge = 9; */
        if (message.badge)
            Badge2.internalBinaryWrite(message.badge, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.ChannelMixedItem
 */
export const ChannelMixedItem = new ChannelMixedItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CheckMore$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.CheckMore", [
            { no: 1, name: "content", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { content: "", uri: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string content */ 1:
                    message.content = reader.string();
                    break;
                case /* string uri */ 2:
                    message.uri = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string content = 1; */
        if (message.content !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.content);
        /* string uri = 2; */
        if (message.uri !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.uri);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.CheckMore
 */
export const CheckMore = new CheckMore$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CloudGameParams$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.CloudGameParams", [
            { no: 1, name: "source_from", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "scene", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { sourceFrom: 0n, scene: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 source_from */ 1:
                    message.sourceFrom = reader.int64().toBigInt();
                    break;
                case /* string scene */ 2:
                    message.scene = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 source_from = 1; */
        if (message.sourceFrom !== 0n)
            writer.tag(1, WireType.Varint).int64(message.sourceFrom);
        /* string scene = 2; */
        if (message.scene !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.scene);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.CloudGameParams
 */
export const CloudGameParams = new CloudGameParams$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DetailsRelationItem$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.DetailsRelationItem", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "cover_left_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "cover_badge_style", kind: "message", T: () => ReasonStyle },
            { no: 5, name: "module_pos", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "goto", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "param", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "position", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 10, name: "cover_left_text_v2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "cover_badge_style_v2", kind: "message", T: () => ReasonStyle }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "", coverLeftText: "", modulePos: "", goto: "", param: "", uri: "", position: 0, coverLeftTextV2: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* string cover_left_text */ 3:
                    message.coverLeftText = reader.string();
                    break;
                case /* bilibili.polymer.app.search.v1.ReasonStyle cover_badge_style */ 4:
                    message.coverBadgeStyle = ReasonStyle.internalBinaryRead(reader, reader.uint32(), options, message.coverBadgeStyle);
                    break;
                case /* string module_pos */ 5:
                    message.modulePos = reader.string();
                    break;
                case /* string goto */ 6:
                    message.goto = reader.string();
                    break;
                case /* string param */ 7:
                    message.param = reader.string();
                    break;
                case /* string uri */ 8:
                    message.uri = reader.string();
                    break;
                case /* int32 position */ 9:
                    message.position = reader.int32();
                    break;
                case /* string cover_left_text_v2 */ 10:
                    message.coverLeftTextV2 = reader.string();
                    break;
                case /* bilibili.polymer.app.search.v1.ReasonStyle cover_badge_style_v2 */ 11:
                    message.coverBadgeStyleV2 = ReasonStyle.internalBinaryRead(reader, reader.uint32(), options, message.coverBadgeStyleV2);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* string cover_left_text = 3; */
        if (message.coverLeftText !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.coverLeftText);
        /* bilibili.polymer.app.search.v1.ReasonStyle cover_badge_style = 4; */
        if (message.coverBadgeStyle)
            ReasonStyle.internalBinaryWrite(message.coverBadgeStyle, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* string module_pos = 5; */
        if (message.modulePos !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.modulePos);
        /* string goto = 6; */
        if (message.goto !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.goto);
        /* string param = 7; */
        if (message.param !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.param);
        /* string uri = 8; */
        if (message.uri !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.uri);
        /* int32 position = 9; */
        if (message.position !== 0)
            writer.tag(9, WireType.Varint).int32(message.position);
        /* string cover_left_text_v2 = 10; */
        if (message.coverLeftTextV2 !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.coverLeftTextV2);
        /* bilibili.polymer.app.search.v1.ReasonStyle cover_badge_style_v2 = 11; */
        if (message.coverBadgeStyleV2)
            ReasonStyle.internalBinaryWrite(message.coverBadgeStyleV2, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.DetailsRelationItem
 */
export const DetailsRelationItem = new DetailsRelationItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DislikeReason$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.DislikeReason", [
            { no: 1, name: "id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { id: 0, name: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 id */ 1:
                    message.id = reader.int32();
                    break;
                case /* string name */ 2:
                    message.name = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 id = 1; */
        if (message.id !== 0)
            writer.tag(1, WireType.Varint).int32(message.id);
        /* string name = 2; */
        if (message.name !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.DislikeReason
 */
export const DislikeReason = new DislikeReason$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DisplayOption$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.DisplayOption", [
            { no: 1, name: "video_title_row", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "search_page_visual_opti", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { videoTitleRow: 0, searchPageVisualOpti: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 video_title_row */ 1:
                    message.videoTitleRow = reader.int32();
                    break;
                case /* int32 search_page_visual_opti */ 2:
                    message.searchPageVisualOpti = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 video_title_row = 1; */
        if (message.videoTitleRow !== 0)
            writer.tag(1, WireType.Varint).int32(message.videoTitleRow);
        /* int32 search_page_visual_opti = 2; */
        if (message.searchPageVisualOpti !== 0)
            writer.tag(2, WireType.Varint).int32(message.searchPageVisualOpti);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.DisplayOption
 */
export const DisplayOption = new DisplayOption$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DyTopic$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.DyTopic", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", uri: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string uri */ 2:
                    message.uri = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string uri = 2; */
        if (message.uri !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.uri);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.DyTopic
 */
export const DyTopic = new DyTopic$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EasterEgg$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.EasterEgg", [
            { no: 1, name: "id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "show_count", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "close_count", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "mask_transparency", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 7, name: "mask_color", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "pic_type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 9, name: "show_time", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 10, name: "source_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "source_md5", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "source_size", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { id: 0, showCount: 0, type: 0, url: "", closeCount: 0, maskTransparency: 0, maskColor: "", picType: 0, showTime: 0, sourceUrl: "", sourceMd5: "", sourceSize: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 id */ 1:
                    message.id = reader.int32();
                    break;
                case /* int32 show_count */ 2:
                    message.showCount = reader.int32();
                    break;
                case /* int32 type */ 3:
                    message.type = reader.int32();
                    break;
                case /* string url */ 4:
                    message.url = reader.string();
                    break;
                case /* int32 close_count */ 5:
                    message.closeCount = reader.int32();
                    break;
                case /* int32 mask_transparency */ 6:
                    message.maskTransparency = reader.int32();
                    break;
                case /* string mask_color */ 7:
                    message.maskColor = reader.string();
                    break;
                case /* int32 pic_type */ 8:
                    message.picType = reader.int32();
                    break;
                case /* int32 show_time */ 9:
                    message.showTime = reader.int32();
                    break;
                case /* string source_url */ 10:
                    message.sourceUrl = reader.string();
                    break;
                case /* string source_md5 */ 11:
                    message.sourceMd5 = reader.string();
                    break;
                case /* int32 source_size */ 12:
                    message.sourceSize = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 id = 1; */
        if (message.id !== 0)
            writer.tag(1, WireType.Varint).int32(message.id);
        /* int32 show_count = 2; */
        if (message.showCount !== 0)
            writer.tag(2, WireType.Varint).int32(message.showCount);
        /* int32 type = 3; */
        if (message.type !== 0)
            writer.tag(3, WireType.Varint).int32(message.type);
        /* string url = 4; */
        if (message.url !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.url);
        /* int32 close_count = 5; */
        if (message.closeCount !== 0)
            writer.tag(5, WireType.Varint).int32(message.closeCount);
        /* int32 mask_transparency = 6; */
        if (message.maskTransparency !== 0)
            writer.tag(6, WireType.Varint).int32(message.maskTransparency);
        /* string mask_color = 7; */
        if (message.maskColor !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.maskColor);
        /* int32 pic_type = 8; */
        if (message.picType !== 0)
            writer.tag(8, WireType.Varint).int32(message.picType);
        /* int32 show_time = 9; */
        if (message.showTime !== 0)
            writer.tag(9, WireType.Varint).int32(message.showTime);
        /* string source_url = 10; */
        if (message.sourceUrl !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.sourceUrl);
        /* string source_md5 = 11; */
        if (message.sourceMd5 !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.sourceMd5);
        /* int32 source_size = 12; */
        if (message.sourceSize !== 0)
            writer.tag(12, WireType.Varint).int32(message.sourceSize);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.EasterEgg
 */
export const EasterEgg = new EasterEgg$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Episode$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.Episode", [
            { no: 1, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "param", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "index", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "badges", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ReasonStyle },
            { no: 5, name: "position", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { uri: "", param: "", index: "", badges: [], position: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string uri */ 1:
                    message.uri = reader.string();
                    break;
                case /* string param */ 2:
                    message.param = reader.string();
                    break;
                case /* string index */ 3:
                    message.index = reader.string();
                    break;
                case /* repeated bilibili.polymer.app.search.v1.ReasonStyle badges */ 4:
                    message.badges.push(ReasonStyle.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* int32 position */ 5:
                    message.position = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string uri = 1; */
        if (message.uri !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.uri);
        /* string param = 2; */
        if (message.param !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.param);
        /* string index = 3; */
        if (message.index !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.index);
        /* repeated bilibili.polymer.app.search.v1.ReasonStyle badges = 4; */
        for (let i = 0; i < message.badges.length; i++)
            ReasonStyle.internalBinaryWrite(message.badges[i], writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* int32 position = 5; */
        if (message.position !== 0)
            writer.tag(5, WireType.Varint).int32(message.position);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.Episode
 */
export const Episode = new Episode$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EpisodeNew$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.EpisodeNew", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "param", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "is_new", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "badges", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ReasonStyle },
            { no: 6, name: "type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 7, name: "position", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "label", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", uri: "", param: "", isNew: 0, badges: [], type: 0, position: 0, cover: "", label: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string uri */ 2:
                    message.uri = reader.string();
                    break;
                case /* string param */ 3:
                    message.param = reader.string();
                    break;
                case /* int32 is_new */ 4:
                    message.isNew = reader.int32();
                    break;
                case /* repeated bilibili.polymer.app.search.v1.ReasonStyle badges */ 5:
                    message.badges.push(ReasonStyle.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* int32 type */ 6:
                    message.type = reader.int32();
                    break;
                case /* int32 position */ 7:
                    message.position = reader.int32();
                    break;
                case /* string cover */ 8:
                    message.cover = reader.string();
                    break;
                case /* string label */ 9:
                    message.label = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string uri = 2; */
        if (message.uri !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.uri);
        /* string param = 3; */
        if (message.param !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.param);
        /* int32 is_new = 4; */
        if (message.isNew !== 0)
            writer.tag(4, WireType.Varint).int32(message.isNew);
        /* repeated bilibili.polymer.app.search.v1.ReasonStyle badges = 5; */
        for (let i = 0; i < message.badges.length; i++)
            ReasonStyle.internalBinaryWrite(message.badges[i], writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* int32 type = 6; */
        if (message.type !== 0)
            writer.tag(6, WireType.Varint).int32(message.type);
        /* int32 position = 7; */
        if (message.position !== 0)
            writer.tag(7, WireType.Varint).int32(message.position);
        /* string cover = 8; */
        if (message.cover !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.cover);
        /* string label = 9; */
        if (message.label !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.label);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.EpisodeNew
 */
export const EpisodeNew = new EpisodeNew$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ExtraLink$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.ExtraLink", [
            { no: 1, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { text: "", uri: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string text */ 1:
                    message.text = reader.string();
                    break;
                case /* string uri */ 2:
                    message.uri = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string text = 1; */
        if (message.text !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.text);
        /* string uri = 2; */
        if (message.uri !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.uri);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.ExtraLink
 */
export const ExtraLink = new ExtraLink$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FollowButton$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.FollowButton", [
            { no: 1, name: "icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "texts", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "scalar", T: 9 /*ScalarType.STRING*/ } },
            { no: 3, name: "status_report", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { icon: "", texts: {}, statusReport: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string icon */ 1:
                    message.icon = reader.string();
                    break;
                case /* map<string, string> texts */ 2:
                    this.binaryReadMap2(message.texts, reader, options);
                    break;
                case /* string status_report */ 3:
                    message.statusReport = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    binaryReadMap2(map, reader, options) {
        let len = reader.uint32(), end = reader.pos + len, key, val;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.string();
                    break;
                case 2:
                    val = reader.string();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field bilibili.polymer.app.search.v1.FollowButton.texts");
            }
        }
        map[key ?? ""] = val ?? "";
    }
    internalBinaryWrite(message, writer, options) {
        /* string icon = 1; */
        if (message.icon !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.icon);
        /* map<string, string> texts = 2; */
        for (let k of Object.keys(message.texts))
            writer.tag(2, WireType.LengthDelimited).fork().tag(1, WireType.LengthDelimited).string(k).tag(2, WireType.LengthDelimited).string(message.texts[k]).join();
        /* string status_report = 3; */
        if (message.statusReport !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.statusReport);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.FollowButton
 */
export const FollowButton = new FollowButton$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FullTextResult$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.FullTextResult", [
            { no: 1, name: "type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "show_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "jump_start_progress", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "jump_uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { type: 0, showText: "", jumpStartProgress: 0n, jumpUri: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 type */ 1:
                    message.type = reader.int32();
                    break;
                case /* string show_text */ 2:
                    message.showText = reader.string();
                    break;
                case /* int64 jump_start_progress */ 3:
                    message.jumpStartProgress = reader.int64().toBigInt();
                    break;
                case /* string jump_uri */ 4:
                    message.jumpUri = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 type = 1; */
        if (message.type !== 0)
            writer.tag(1, WireType.Varint).int32(message.type);
        /* string show_text = 2; */
        if (message.showText !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.showText);
        /* int64 jump_start_progress = 3; */
        if (message.jumpStartProgress !== 0n)
            writer.tag(3, WireType.Varint).int64(message.jumpStartProgress);
        /* string jump_uri = 4; */
        if (message.jumpUri !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.jumpUri);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.FullTextResult
 */
export const FullTextResult = new FullTextResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GotoIcon$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.GotoIcon", [
            { no: 1, name: "icon_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "icon_night_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "icon_width", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "icon_height", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { iconUrl: "", iconNightUrl: "", iconWidth: 0, iconHeight: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string icon_url */ 1:
                    message.iconUrl = reader.string();
                    break;
                case /* string icon_night_url */ 2:
                    message.iconNightUrl = reader.string();
                    break;
                case /* int32 icon_width */ 3:
                    message.iconWidth = reader.int32();
                    break;
                case /* int32 icon_height */ 4:
                    message.iconHeight = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string icon_url = 1; */
        if (message.iconUrl !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.iconUrl);
        /* string icon_night_url = 2; */
        if (message.iconNightUrl !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.iconNightUrl);
        /* int32 icon_width = 3; */
        if (message.iconWidth !== 0)
            writer.tag(3, WireType.Varint).int32(message.iconWidth);
        /* int32 icon_height = 4; */
        if (message.iconHeight !== 0)
            writer.tag(4, WireType.Varint).int32(message.iconHeight);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.GotoIcon
 */
export const GotoIcon = new GotoIcon$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InlineProgressBar$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.InlineProgressBar", [
            { no: 1, name: "icon_drag", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "icon_drag_hash", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "icon_stop", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "icon_stop_hash", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { iconDrag: "", iconDragHash: "", iconStop: "", iconStopHash: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string icon_drag */ 1:
                    message.iconDrag = reader.string();
                    break;
                case /* string icon_drag_hash */ 2:
                    message.iconDragHash = reader.string();
                    break;
                case /* string icon_stop */ 3:
                    message.iconStop = reader.string();
                    break;
                case /* string icon_stop_hash */ 4:
                    message.iconStopHash = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string icon_drag = 1; */
        if (message.iconDrag !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.iconDrag);
        /* string icon_drag_hash = 2; */
        if (message.iconDragHash !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.iconDragHash);
        /* string icon_stop = 3; */
        if (message.iconStop !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.iconStop);
        /* string icon_stop_hash = 4; */
        if (message.iconStopHash !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.iconStopHash);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.InlineProgressBar
 */
export const InlineProgressBar = new InlineProgressBar$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InlineThreePointPanel$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.InlineThreePointPanel", [
            { no: 1, name: "panel_type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "share_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "share_origin", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "functional_buttons", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ShareButtonItem }
        ]);
    }
    create(value) {
        const message = { panelType: 0, shareId: "", shareOrigin: "", functionalButtons: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 panel_type */ 1:
                    message.panelType = reader.int32();
                    break;
                case /* string share_id */ 2:
                    message.shareId = reader.string();
                    break;
                case /* string share_origin */ 3:
                    message.shareOrigin = reader.string();
                    break;
                case /* repeated bilibili.polymer.app.search.v1.ShareButtonItem functional_buttons */ 4:
                    message.functionalButtons.push(ShareButtonItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 panel_type = 1; */
        if (message.panelType !== 0)
            writer.tag(1, WireType.Varint).int32(message.panelType);
        /* string share_id = 2; */
        if (message.shareId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.shareId);
        /* string share_origin = 3; */
        if (message.shareOrigin !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.shareOrigin);
        /* repeated bilibili.polymer.app.search.v1.ShareButtonItem functional_buttons = 4; */
        for (let i = 0; i < message.functionalButtons.length; i++)
            ShareButtonItem.internalBinaryWrite(message.functionalButtons[i], writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.InlineThreePointPanel
 */
export const InlineThreePointPanel = new InlineThreePointPanel$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Item$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.Item", [
            { no: 1, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "param", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "goto", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "linktype", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "position", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "trackid", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "special", kind: "message", oneof: "cardItem", T: () => SearchSpecialCard },
            { no: 8, name: "article", kind: "message", oneof: "cardItem", T: () => SearchArticleCard },
            { no: 9, name: "banner", kind: "message", oneof: "cardItem", T: () => SearchBannerCard },
            { no: 10, name: "live", kind: "message", oneof: "cardItem", T: () => SearchLiveCard },
            { no: 11, name: "game", kind: "message", oneof: "cardItem", T: () => SearchGameCard },
            { no: 12, name: "purchase", kind: "message", oneof: "cardItem", T: () => SearchPurchaseCard },
            { no: 13, name: "recommend_word", kind: "message", oneof: "cardItem", T: () => SearchRecommendWordCard },
            { no: 14, name: "dynamic", kind: "message", oneof: "cardItem", T: () => SearchDynamicCard },
            { no: 15, name: "suggest_keyword", kind: "message", oneof: "cardItem", T: () => SearchNoResultSuggestWordCard },
            { no: 16, name: "special_guide", kind: "message", oneof: "cardItem", T: () => SearchSpecialGuideCard },
            { no: 17, name: "comic", kind: "message", oneof: "cardItem", T: () => SearchComicCard },
            { no: 18, name: "channel_new", kind: "message", oneof: "cardItem", T: () => SearchNewChannelCard },
            { no: 19, name: "ogv_card", kind: "message", oneof: "cardItem", T: () => SearchOgvCard },
            { no: 20, name: "bangumi_relates", kind: "message", oneof: "cardItem", T: () => SearchOgvRelationCard },
            { no: 21, name: "find_more", kind: "message", oneof: "cardItem", T: () => SearchOgvRecommendCard },
            { no: 22, name: "esport", kind: "message", oneof: "cardItem", T: () => SearchSportCard },
            { no: 23, name: "author_new", kind: "message", oneof: "cardItem", T: () => SearchAuthorNewCard },
            { no: 24, name: "tips", kind: "message", oneof: "cardItem", T: () => SearchTipsCard },
            { no: 25, name: "cm", kind: "message", oneof: "cardItem", T: () => SearchAdCard },
            { no: 26, name: "pedia_card", kind: "message", oneof: "cardItem", T: () => SearchPediaCard },
            { no: 27, name: "ugc_inline", kind: "message", oneof: "cardItem", T: () => SearchUgcInlineCard },
            { no: 28, name: "live_inline", kind: "message", oneof: "cardItem", T: () => SearchLiveInlineCard },
            { no: 29, name: "top_game", kind: "message", oneof: "cardItem", T: () => SearchTopGameCard },
            { no: 30, name: "sports", kind: "message", oneof: "cardItem", T: () => SearchOlympicGameCard },
            { no: 31, name: "pedia_card_inline", kind: "message", oneof: "cardItem", T: () => SearchOlympicWikiCard },
            { no: 32, name: "recommend_tips", kind: "message", oneof: "cardItem", T: () => SearchRecommendTipCard },
            { no: 33, name: "collection_card", kind: "message", oneof: "cardItem", T: () => SearchCollectionCard },
            { no: 34, name: "ogv_channel", kind: "message", oneof: "cardItem", T: () => SearchOgvChannelCard },
            { no: 35, name: "ogv_inline", kind: "message", oneof: "cardItem", T: () => SearchOgvInlineCard },
            { no: 36, name: "author", kind: "message", oneof: "cardItem", T: () => SearchUpperCard },
            { no: 37, name: "av", kind: "message", oneof: "cardItem", T: () => SearchVideoCard },
            { no: 38, name: "bangumi", kind: "message", oneof: "cardItem", T: () => SearchBangumiCard },
            { no: 39, name: "esports_inline", kind: "message", oneof: "cardItem", T: () => SearchSportInlineCard }
        ]);
    }
    create(value) {
        const message = { uri: "", param: "", goto: "", linktype: "", position: 0, trackid: "", cardItem: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string uri */ 1:
                    message.uri = reader.string();
                    break;
                case /* string param */ 2:
                    message.param = reader.string();
                    break;
                case /* string goto */ 3:
                    message.goto = reader.string();
                    break;
                case /* string linktype */ 4:
                    message.linktype = reader.string();
                    break;
                case /* int32 position */ 5:
                    message.position = reader.int32();
                    break;
                case /* string trackid */ 6:
                    message.trackid = reader.string();
                    break;
                case /* bilibili.polymer.app.search.v1.SearchSpecialCard special */ 7:
                    message.cardItem = {
                        oneofKind: "special",
                        special: SearchSpecialCard.internalBinaryRead(reader, reader.uint32(), options, message.cardItem.special)
                    };
                    break;
                case /* bilibili.polymer.app.search.v1.SearchArticleCard article */ 8:
                    message.cardItem = {
                        oneofKind: "article",
                        article: SearchArticleCard.internalBinaryRead(reader, reader.uint32(), options, message.cardItem.article)
                    };
                    break;
                case /* bilibili.polymer.app.search.v1.SearchBannerCard banner */ 9:
                    message.cardItem = {
                        oneofKind: "banner",
                        banner: SearchBannerCard.internalBinaryRead(reader, reader.uint32(), options, message.cardItem.banner)
                    };
                    break;
                case /* bilibili.polymer.app.search.v1.SearchLiveCard live */ 10:
                    message.cardItem = {
                        oneofKind: "live",
                        live: SearchLiveCard.internalBinaryRead(reader, reader.uint32(), options, message.cardItem.live)
                    };
                    break;
                case /* bilibili.polymer.app.search.v1.SearchGameCard game */ 11:
                    message.cardItem = {
                        oneofKind: "game",
                        game: SearchGameCard.internalBinaryRead(reader, reader.uint32(), options, message.cardItem.game)
                    };
                    break;
                case /* bilibili.polymer.app.search.v1.SearchPurchaseCard purchase */ 12:
                    message.cardItem = {
                        oneofKind: "purchase",
                        purchase: SearchPurchaseCard.internalBinaryRead(reader, reader.uint32(), options, message.cardItem.purchase)
                    };
                    break;
                case /* bilibili.polymer.app.search.v1.SearchRecommendWordCard recommend_word */ 13:
                    message.cardItem = {
                        oneofKind: "recommendWord",
                        recommendWord: SearchRecommendWordCard.internalBinaryRead(reader, reader.uint32(), options, message.cardItem.recommendWord)
                    };
                    break;
                case /* bilibili.polymer.app.search.v1.SearchDynamicCard dynamic */ 14:
                    message.cardItem = {
                        oneofKind: "dynamic",
                        dynamic: SearchDynamicCard.internalBinaryRead(reader, reader.uint32(), options, message.cardItem.dynamic)
                    };
                    break;
                case /* bilibili.polymer.app.search.v1.SearchNoResultSuggestWordCard suggest_keyword */ 15:
                    message.cardItem = {
                        oneofKind: "suggestKeyword",
                        suggestKeyword: SearchNoResultSuggestWordCard.internalBinaryRead(reader, reader.uint32(), options, message.cardItem.suggestKeyword)
                    };
                    break;
                case /* bilibili.polymer.app.search.v1.SearchSpecialGuideCard special_guide */ 16:
                    message.cardItem = {
                        oneofKind: "specialGuide",
                        specialGuide: SearchSpecialGuideCard.internalBinaryRead(reader, reader.uint32(), options, message.cardItem.specialGuide)
                    };
                    break;
                case /* bilibili.polymer.app.search.v1.SearchComicCard comic */ 17:
                    message.cardItem = {
                        oneofKind: "comic",
                        comic: SearchComicCard.internalBinaryRead(reader, reader.uint32(), options, message.cardItem.comic)
                    };
                    break;
                case /* bilibili.polymer.app.search.v1.SearchNewChannelCard channel_new */ 18:
                    message.cardItem = {
                        oneofKind: "channelNew",
                        channelNew: SearchNewChannelCard.internalBinaryRead(reader, reader.uint32(), options, message.cardItem.channelNew)
                    };
                    break;
                case /* bilibili.polymer.app.search.v1.SearchOgvCard ogv_card */ 19:
                    message.cardItem = {
                        oneofKind: "ogvCard",
                        ogvCard: SearchOgvCard.internalBinaryRead(reader, reader.uint32(), options, message.cardItem.ogvCard)
                    };
                    break;
                case /* bilibili.polymer.app.search.v1.SearchOgvRelationCard bangumi_relates */ 20:
                    message.cardItem = {
                        oneofKind: "bangumiRelates",
                        bangumiRelates: SearchOgvRelationCard.internalBinaryRead(reader, reader.uint32(), options, message.cardItem.bangumiRelates)
                    };
                    break;
                case /* bilibili.polymer.app.search.v1.SearchOgvRecommendCard find_more */ 21:
                    message.cardItem = {
                        oneofKind: "findMore",
                        findMore: SearchOgvRecommendCard.internalBinaryRead(reader, reader.uint32(), options, message.cardItem.findMore)
                    };
                    break;
                case /* bilibili.polymer.app.search.v1.SearchSportCard esport */ 22:
                    message.cardItem = {
                        oneofKind: "esport",
                        esport: SearchSportCard.internalBinaryRead(reader, reader.uint32(), options, message.cardItem.esport)
                    };
                    break;
                case /* bilibili.polymer.app.search.v1.SearchAuthorNewCard author_new */ 23:
                    message.cardItem = {
                        oneofKind: "authorNew",
                        authorNew: SearchAuthorNewCard.internalBinaryRead(reader, reader.uint32(), options, message.cardItem.authorNew)
                    };
                    break;
                case /* bilibili.polymer.app.search.v1.SearchTipsCard tips */ 24:
                    message.cardItem = {
                        oneofKind: "tips",
                        tips: SearchTipsCard.internalBinaryRead(reader, reader.uint32(), options, message.cardItem.tips)
                    };
                    break;
                case /* bilibili.polymer.app.search.v1.SearchAdCard cm */ 25:
                    message.cardItem = {
                        oneofKind: "cm",
                        cm: SearchAdCard.internalBinaryRead(reader, reader.uint32(), options, message.cardItem.cm)
                    };
                    break;
                case /* bilibili.polymer.app.search.v1.SearchPediaCard pedia_card */ 26:
                    message.cardItem = {
                        oneofKind: "pediaCard",
                        pediaCard: SearchPediaCard.internalBinaryRead(reader, reader.uint32(), options, message.cardItem.pediaCard)
                    };
                    break;
                case /* bilibili.polymer.app.search.v1.SearchUgcInlineCard ugc_inline */ 27:
                    message.cardItem = {
                        oneofKind: "ugcInline",
                        ugcInline: SearchUgcInlineCard.internalBinaryRead(reader, reader.uint32(), options, message.cardItem.ugcInline)
                    };
                    break;
                case /* bilibili.polymer.app.search.v1.SearchLiveInlineCard live_inline */ 28:
                    message.cardItem = {
                        oneofKind: "liveInline",
                        liveInline: SearchLiveInlineCard.internalBinaryRead(reader, reader.uint32(), options, message.cardItem.liveInline)
                    };
                    break;
                case /* bilibili.polymer.app.search.v1.SearchTopGameCard top_game */ 29:
                    message.cardItem = {
                        oneofKind: "topGame",
                        topGame: SearchTopGameCard.internalBinaryRead(reader, reader.uint32(), options, message.cardItem.topGame)
                    };
                    break;
                case /* bilibili.polymer.app.search.v1.SearchOlympicGameCard sports */ 30:
                    message.cardItem = {
                        oneofKind: "sports",
                        sports: SearchOlympicGameCard.internalBinaryRead(reader, reader.uint32(), options, message.cardItem.sports)
                    };
                    break;
                case /* bilibili.polymer.app.search.v1.SearchOlympicWikiCard pedia_card_inline */ 31:
                    message.cardItem = {
                        oneofKind: "pediaCardInline",
                        pediaCardInline: SearchOlympicWikiCard.internalBinaryRead(reader, reader.uint32(), options, message.cardItem.pediaCardInline)
                    };
                    break;
                case /* bilibili.polymer.app.search.v1.SearchRecommendTipCard recommend_tips */ 32:
                    message.cardItem = {
                        oneofKind: "recommendTips",
                        recommendTips: SearchRecommendTipCard.internalBinaryRead(reader, reader.uint32(), options, message.cardItem.recommendTips)
                    };
                    break;
                case /* bilibili.polymer.app.search.v1.SearchCollectionCard collection_card */ 33:
                    message.cardItem = {
                        oneofKind: "collectionCard",
                        collectionCard: SearchCollectionCard.internalBinaryRead(reader, reader.uint32(), options, message.cardItem.collectionCard)
                    };
                    break;
                case /* bilibili.polymer.app.search.v1.SearchOgvChannelCard ogv_channel */ 34:
                    message.cardItem = {
                        oneofKind: "ogvChannel",
                        ogvChannel: SearchOgvChannelCard.internalBinaryRead(reader, reader.uint32(), options, message.cardItem.ogvChannel)
                    };
                    break;
                case /* bilibili.polymer.app.search.v1.SearchOgvInlineCard ogv_inline */ 35:
                    message.cardItem = {
                        oneofKind: "ogvInline",
                        ogvInline: SearchOgvInlineCard.internalBinaryRead(reader, reader.uint32(), options, message.cardItem.ogvInline)
                    };
                    break;
                case /* bilibili.polymer.app.search.v1.SearchUpperCard author */ 36:
                    message.cardItem = {
                        oneofKind: "author",
                        author: SearchUpperCard.internalBinaryRead(reader, reader.uint32(), options, message.cardItem.author)
                    };
                    break;
                case /* bilibili.polymer.app.search.v1.SearchVideoCard av */ 37:
                    message.cardItem = {
                        oneofKind: "av",
                        av: SearchVideoCard.internalBinaryRead(reader, reader.uint32(), options, message.cardItem.av)
                    };
                    break;
                case /* bilibili.polymer.app.search.v1.SearchBangumiCard bangumi */ 38:
                    message.cardItem = {
                        oneofKind: "bangumi",
                        bangumi: SearchBangumiCard.internalBinaryRead(reader, reader.uint32(), options, message.cardItem.bangumi)
                    };
                    break;
                case /* bilibili.polymer.app.search.v1.SearchSportInlineCard esports_inline */ 39:
                    message.cardItem = {
                        oneofKind: "esportsInline",
                        esportsInline: SearchSportInlineCard.internalBinaryRead(reader, reader.uint32(), options, message.cardItem.esportsInline)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string uri = 1; */
        if (message.uri !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.uri);
        /* string param = 2; */
        if (message.param !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.param);
        /* string goto = 3; */
        if (message.goto !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.goto);
        /* string linktype = 4; */
        if (message.linktype !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.linktype);
        /* int32 position = 5; */
        if (message.position !== 0)
            writer.tag(5, WireType.Varint).int32(message.position);
        /* string trackid = 6; */
        if (message.trackid !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.trackid);
        /* bilibili.polymer.app.search.v1.SearchSpecialCard special = 7; */
        if (message.cardItem.oneofKind === "special")
            SearchSpecialCard.internalBinaryWrite(message.cardItem.special, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.SearchArticleCard article = 8; */
        if (message.cardItem.oneofKind === "article")
            SearchArticleCard.internalBinaryWrite(message.cardItem.article, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.SearchBannerCard banner = 9; */
        if (message.cardItem.oneofKind === "banner")
            SearchBannerCard.internalBinaryWrite(message.cardItem.banner, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.SearchLiveCard live = 10; */
        if (message.cardItem.oneofKind === "live")
            SearchLiveCard.internalBinaryWrite(message.cardItem.live, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.SearchGameCard game = 11; */
        if (message.cardItem.oneofKind === "game")
            SearchGameCard.internalBinaryWrite(message.cardItem.game, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.SearchPurchaseCard purchase = 12; */
        if (message.cardItem.oneofKind === "purchase")
            SearchPurchaseCard.internalBinaryWrite(message.cardItem.purchase, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.SearchRecommendWordCard recommend_word = 13; */
        if (message.cardItem.oneofKind === "recommendWord")
            SearchRecommendWordCard.internalBinaryWrite(message.cardItem.recommendWord, writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.SearchDynamicCard dynamic = 14; */
        if (message.cardItem.oneofKind === "dynamic")
            SearchDynamicCard.internalBinaryWrite(message.cardItem.dynamic, writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.SearchNoResultSuggestWordCard suggest_keyword = 15; */
        if (message.cardItem.oneofKind === "suggestKeyword")
            SearchNoResultSuggestWordCard.internalBinaryWrite(message.cardItem.suggestKeyword, writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.SearchSpecialGuideCard special_guide = 16; */
        if (message.cardItem.oneofKind === "specialGuide")
            SearchSpecialGuideCard.internalBinaryWrite(message.cardItem.specialGuide, writer.tag(16, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.SearchComicCard comic = 17; */
        if (message.cardItem.oneofKind === "comic")
            SearchComicCard.internalBinaryWrite(message.cardItem.comic, writer.tag(17, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.SearchNewChannelCard channel_new = 18; */
        if (message.cardItem.oneofKind === "channelNew")
            SearchNewChannelCard.internalBinaryWrite(message.cardItem.channelNew, writer.tag(18, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.SearchOgvCard ogv_card = 19; */
        if (message.cardItem.oneofKind === "ogvCard")
            SearchOgvCard.internalBinaryWrite(message.cardItem.ogvCard, writer.tag(19, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.SearchOgvRelationCard bangumi_relates = 20; */
        if (message.cardItem.oneofKind === "bangumiRelates")
            SearchOgvRelationCard.internalBinaryWrite(message.cardItem.bangumiRelates, writer.tag(20, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.SearchOgvRecommendCard find_more = 21; */
        if (message.cardItem.oneofKind === "findMore")
            SearchOgvRecommendCard.internalBinaryWrite(message.cardItem.findMore, writer.tag(21, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.SearchSportCard esport = 22; */
        if (message.cardItem.oneofKind === "esport")
            SearchSportCard.internalBinaryWrite(message.cardItem.esport, writer.tag(22, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.SearchAuthorNewCard author_new = 23; */
        if (message.cardItem.oneofKind === "authorNew")
            SearchAuthorNewCard.internalBinaryWrite(message.cardItem.authorNew, writer.tag(23, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.SearchTipsCard tips = 24; */
        if (message.cardItem.oneofKind === "tips")
            SearchTipsCard.internalBinaryWrite(message.cardItem.tips, writer.tag(24, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.SearchAdCard cm = 25; */
        if (message.cardItem.oneofKind === "cm")
            SearchAdCard.internalBinaryWrite(message.cardItem.cm, writer.tag(25, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.SearchPediaCard pedia_card = 26; */
        if (message.cardItem.oneofKind === "pediaCard")
            SearchPediaCard.internalBinaryWrite(message.cardItem.pediaCard, writer.tag(26, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.SearchUgcInlineCard ugc_inline = 27; */
        if (message.cardItem.oneofKind === "ugcInline")
            SearchUgcInlineCard.internalBinaryWrite(message.cardItem.ugcInline, writer.tag(27, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.SearchLiveInlineCard live_inline = 28; */
        if (message.cardItem.oneofKind === "liveInline")
            SearchLiveInlineCard.internalBinaryWrite(message.cardItem.liveInline, writer.tag(28, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.SearchTopGameCard top_game = 29; */
        if (message.cardItem.oneofKind === "topGame")
            SearchTopGameCard.internalBinaryWrite(message.cardItem.topGame, writer.tag(29, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.SearchOlympicGameCard sports = 30; */
        if (message.cardItem.oneofKind === "sports")
            SearchOlympicGameCard.internalBinaryWrite(message.cardItem.sports, writer.tag(30, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.SearchOlympicWikiCard pedia_card_inline = 31; */
        if (message.cardItem.oneofKind === "pediaCardInline")
            SearchOlympicWikiCard.internalBinaryWrite(message.cardItem.pediaCardInline, writer.tag(31, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.SearchRecommendTipCard recommend_tips = 32; */
        if (message.cardItem.oneofKind === "recommendTips")
            SearchRecommendTipCard.internalBinaryWrite(message.cardItem.recommendTips, writer.tag(32, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.SearchCollectionCard collection_card = 33; */
        if (message.cardItem.oneofKind === "collectionCard")
            SearchCollectionCard.internalBinaryWrite(message.cardItem.collectionCard, writer.tag(33, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.SearchOgvChannelCard ogv_channel = 34; */
        if (message.cardItem.oneofKind === "ogvChannel")
            SearchOgvChannelCard.internalBinaryWrite(message.cardItem.ogvChannel, writer.tag(34, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.SearchOgvInlineCard ogv_inline = 35; */
        if (message.cardItem.oneofKind === "ogvInline")
            SearchOgvInlineCard.internalBinaryWrite(message.cardItem.ogvInline, writer.tag(35, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.SearchUpperCard author = 36; */
        if (message.cardItem.oneofKind === "author")
            SearchUpperCard.internalBinaryWrite(message.cardItem.author, writer.tag(36, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.SearchVideoCard av = 37; */
        if (message.cardItem.oneofKind === "av")
            SearchVideoCard.internalBinaryWrite(message.cardItem.av, writer.tag(37, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.SearchBangumiCard bangumi = 38; */
        if (message.cardItem.oneofKind === "bangumi")
            SearchBangumiCard.internalBinaryWrite(message.cardItem.bangumi, writer.tag(38, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.SearchSportInlineCard esports_inline = 39; */
        if (message.cardItem.oneofKind === "esportsInline")
            SearchSportInlineCard.internalBinaryWrite(message.cardItem.esportsInline, writer.tag(39, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.Item
 */
export const Item = new Item$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LikeResource$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.LikeResource", [
            { no: 1, name: "url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "content_hash", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { url: "", contentHash: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string url */ 1:
                    message.url = reader.string();
                    break;
                case /* string content_hash */ 2:
                    message.contentHash = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string url = 1; */
        if (message.url !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.url);
        /* string content_hash = 2; */
        if (message.contentHash !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.contentHash);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.LikeResource
 */
export const LikeResource = new LikeResource$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LiveBadgeResource$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.LiveBadgeResource", [
            { no: 1, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "animation_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "animation_url_hash", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "background_color_light", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "background_color_night", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "alpha_light", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 7, name: "alpha_night", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 8, name: "font_color", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { text: "", animationUrl: "", animationUrlHash: "", backgroundColorLight: "", backgroundColorNight: "", alphaLight: 0n, alphaNight: 0n, fontColor: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string text */ 1:
                    message.text = reader.string();
                    break;
                case /* string animation_url */ 2:
                    message.animationUrl = reader.string();
                    break;
                case /* string animation_url_hash */ 3:
                    message.animationUrlHash = reader.string();
                    break;
                case /* string background_color_light */ 4:
                    message.backgroundColorLight = reader.string();
                    break;
                case /* string background_color_night */ 5:
                    message.backgroundColorNight = reader.string();
                    break;
                case /* int64 alpha_light */ 6:
                    message.alphaLight = reader.int64().toBigInt();
                    break;
                case /* int64 alpha_night */ 7:
                    message.alphaNight = reader.int64().toBigInt();
                    break;
                case /* string font_color */ 8:
                    message.fontColor = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string text = 1; */
        if (message.text !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.text);
        /* string animation_url = 2; */
        if (message.animationUrl !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.animationUrl);
        /* string animation_url_hash = 3; */
        if (message.animationUrlHash !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.animationUrlHash);
        /* string background_color_light = 4; */
        if (message.backgroundColorLight !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.backgroundColorLight);
        /* string background_color_night = 5; */
        if (message.backgroundColorNight !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.backgroundColorNight);
        /* int64 alpha_light = 6; */
        if (message.alphaLight !== 0n)
            writer.tag(6, WireType.Varint).int64(message.alphaLight);
        /* int64 alpha_night = 7; */
        if (message.alphaNight !== 0n)
            writer.tag(7, WireType.Varint).int64(message.alphaNight);
        /* string font_color = 8; */
        if (message.fontColor !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.fontColor);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.LiveBadgeResource
 */
export const LiveBadgeResource = new LiveBadgeResource$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Mask$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.Mask", [
            { no: 1, name: "avatar", kind: "message", T: () => Avatar },
            { no: 2, name: "button", kind: "message", T: () => Button }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.polymer.app.search.v1.Avatar avatar */ 1:
                    message.avatar = Avatar.internalBinaryRead(reader, reader.uint32(), options, message.avatar);
                    break;
                case /* bilibili.polymer.app.search.v1.Button button */ 2:
                    message.button = Button.internalBinaryRead(reader, reader.uint32(), options, message.button);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.polymer.app.search.v1.Avatar avatar = 1; */
        if (message.avatar)
            Avatar.internalBinaryWrite(message.avatar, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.Button button = 2; */
        if (message.button)
            Button.internalBinaryWrite(message.button, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.Mask
 */
export const Mask = new Mask$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MatchInfoObj$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.MatchInfoObj", [
            { no: 1, name: "id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "status", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "match_stage", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "team1", kind: "message", T: () => MatchTeam },
            { no: 5, name: "team2", kind: "message", T: () => MatchTeam },
            { no: 6, name: "match_label", kind: "message", T: () => MatchItem },
            { no: 7, name: "match_time", kind: "message", T: () => MatchItem },
            { no: 8, name: "match_button", kind: "message", T: () => MatchItem }
        ]);
    }
    create(value) {
        const message = { id: 0n, status: 0, matchStage: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 id */ 1:
                    message.id = reader.int64().toBigInt();
                    break;
                case /* int32 status */ 2:
                    message.status = reader.int32();
                    break;
                case /* string match_stage */ 3:
                    message.matchStage = reader.string();
                    break;
                case /* bilibili.polymer.app.search.v1.MatchTeam team1 */ 4:
                    message.team1 = MatchTeam.internalBinaryRead(reader, reader.uint32(), options, message.team1);
                    break;
                case /* bilibili.polymer.app.search.v1.MatchTeam team2 */ 5:
                    message.team2 = MatchTeam.internalBinaryRead(reader, reader.uint32(), options, message.team2);
                    break;
                case /* bilibili.polymer.app.search.v1.MatchItem match_label */ 6:
                    message.matchLabel = MatchItem.internalBinaryRead(reader, reader.uint32(), options, message.matchLabel);
                    break;
                case /* bilibili.polymer.app.search.v1.MatchItem match_time */ 7:
                    message.matchTime = MatchItem.internalBinaryRead(reader, reader.uint32(), options, message.matchTime);
                    break;
                case /* bilibili.polymer.app.search.v1.MatchItem match_button */ 8:
                    message.matchButton = MatchItem.internalBinaryRead(reader, reader.uint32(), options, message.matchButton);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 id = 1; */
        if (message.id !== 0n)
            writer.tag(1, WireType.Varint).int64(message.id);
        /* int32 status = 2; */
        if (message.status !== 0)
            writer.tag(2, WireType.Varint).int32(message.status);
        /* string match_stage = 3; */
        if (message.matchStage !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.matchStage);
        /* bilibili.polymer.app.search.v1.MatchTeam team1 = 4; */
        if (message.team1)
            MatchTeam.internalBinaryWrite(message.team1, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.MatchTeam team2 = 5; */
        if (message.team2)
            MatchTeam.internalBinaryWrite(message.team2, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.MatchItem match_label = 6; */
        if (message.matchLabel)
            MatchItem.internalBinaryWrite(message.matchLabel, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.MatchItem match_time = 7; */
        if (message.matchTime)
            MatchItem.internalBinaryWrite(message.matchTime, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.MatchItem match_button = 8; */
        if (message.matchButton)
            MatchItem.internalBinaryWrite(message.matchButton, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.MatchInfoObj
 */
export const MatchInfoObj = new MatchInfoObj$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MatchItem$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.MatchItem", [
            { no: 1, name: "state", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "text_color", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "text_color_night", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "live_link", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "texts", kind: "message", T: () => Texts }
        ]);
    }
    create(value) {
        const message = { state: 0, text: "", textColor: "", textColorNight: "", uri: "", liveLink: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 state */ 1:
                    message.state = reader.int32();
                    break;
                case /* string text */ 2:
                    message.text = reader.string();
                    break;
                case /* string text_color */ 3:
                    message.textColor = reader.string();
                    break;
                case /* string text_color_night */ 4:
                    message.textColorNight = reader.string();
                    break;
                case /* string uri */ 5:
                    message.uri = reader.string();
                    break;
                case /* string live_link */ 6:
                    message.liveLink = reader.string();
                    break;
                case /* bilibili.polymer.app.search.v1.Texts texts */ 7:
                    message.texts = Texts.internalBinaryRead(reader, reader.uint32(), options, message.texts);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 state = 1; */
        if (message.state !== 0)
            writer.tag(1, WireType.Varint).int32(message.state);
        /* string text = 2; */
        if (message.text !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.text);
        /* string text_color = 3; */
        if (message.textColor !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.textColor);
        /* string text_color_night = 4; */
        if (message.textColorNight !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.textColorNight);
        /* string uri = 5; */
        if (message.uri !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.uri);
        /* string live_link = 6; */
        if (message.liveLink !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.liveLink);
        /* bilibili.polymer.app.search.v1.Texts texts = 7; */
        if (message.texts)
            Texts.internalBinaryWrite(message.texts, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.MatchItem
 */
export const MatchItem = new MatchItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MatchTeam$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.MatchTeam", [
            { no: 1, name: "id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "score", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { id: 0n, title: "", cover: "", score: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 id */ 1:
                    message.id = reader.int64().toBigInt();
                    break;
                case /* string title */ 2:
                    message.title = reader.string();
                    break;
                case /* string cover */ 3:
                    message.cover = reader.string();
                    break;
                case /* int32 score */ 4:
                    message.score = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 id = 1; */
        if (message.id !== 0n)
            writer.tag(1, WireType.Varint).int64(message.id);
        /* string title = 2; */
        if (message.title !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.title);
        /* string cover = 3; */
        if (message.cover !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.cover);
        /* int32 score = 4; */
        if (message.score !== 0)
            writer.tag(4, WireType.Varint).int32(message.score);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.MatchTeam
 */
export const MatchTeam = new MatchTeam$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Nav$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.Nav", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "total", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "pages", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "type", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { name: "", total: 0, pages: 0, type: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* int32 total */ 2:
                    message.total = reader.int32();
                    break;
                case /* int32 pages */ 3:
                    message.pages = reader.int32();
                    break;
                case /* int32 type */ 4:
                    message.type = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.name);
        /* int32 total = 2; */
        if (message.total !== 0)
            writer.tag(2, WireType.Varint).int32(message.total);
        /* int32 pages = 3; */
        if (message.pages !== 0)
            writer.tag(3, WireType.Varint).int32(message.pages);
        /* int32 type = 4; */
        if (message.type !== 0)
            writer.tag(4, WireType.Varint).int32(message.type);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.Nav
 */
export const Nav = new Nav$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Navigation$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.Navigation", [
            { no: 1, name: "id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "children", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Navigation },
            { no: 3, name: "inline_children", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Navigation },
            { no: 4, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "button", kind: "message", T: () => NavigationButton }
        ]);
    }
    create(value) {
        const message = { id: 0n, children: [], inlineChildren: [], title: "", uri: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 id */ 1:
                    message.id = reader.int64().toBigInt();
                    break;
                case /* repeated bilibili.polymer.app.search.v1.Navigation children */ 2:
                    message.children.push(Navigation.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated bilibili.polymer.app.search.v1.Navigation inline_children */ 3:
                    message.inlineChildren.push(Navigation.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string title */ 4:
                    message.title = reader.string();
                    break;
                case /* string uri */ 5:
                    message.uri = reader.string();
                    break;
                case /* bilibili.polymer.app.search.v1.NavigationButton button */ 6:
                    message.button = NavigationButton.internalBinaryRead(reader, reader.uint32(), options, message.button);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 id = 1; */
        if (message.id !== 0n)
            writer.tag(1, WireType.Varint).int64(message.id);
        /* repeated bilibili.polymer.app.search.v1.Navigation children = 2; */
        for (let i = 0; i < message.children.length; i++)
            Navigation.internalBinaryWrite(message.children[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* repeated bilibili.polymer.app.search.v1.Navigation inline_children = 3; */
        for (let i = 0; i < message.inlineChildren.length; i++)
            Navigation.internalBinaryWrite(message.inlineChildren[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* string title = 4; */
        if (message.title !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.title);
        /* string uri = 5; */
        if (message.uri !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.uri);
        /* bilibili.polymer.app.search.v1.NavigationButton button = 6; */
        if (message.button)
            NavigationButton.internalBinaryWrite(message.button, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.Navigation
 */
export const Navigation = new Navigation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NavigationButton$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.NavigationButton", [
            { no: 1, name: "type", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { type: 0n, text: "", uri: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 type */ 1:
                    message.type = reader.int64().toBigInt();
                    break;
                case /* string text */ 2:
                    message.text = reader.string();
                    break;
                case /* string uri */ 3:
                    message.uri = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 type = 1; */
        if (message.type !== 0n)
            writer.tag(1, WireType.Varint).int64(message.type);
        /* string text = 2; */
        if (message.text !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.text);
        /* string uri = 3; */
        if (message.uri !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.uri);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.NavigationButton
 */
export const NavigationButton = new NavigationButton$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NftFaceIcon$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.NftFaceIcon", [
            { no: 1, name: "region_type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "show_status", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { regionType: 0, icon: "", showStatus: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 region_type */ 1:
                    message.regionType = reader.int32();
                    break;
                case /* string icon */ 2:
                    message.icon = reader.string();
                    break;
                case /* int32 show_status */ 3:
                    message.showStatus = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 region_type = 1; */
        if (message.regionType !== 0)
            writer.tag(1, WireType.Varint).int32(message.regionType);
        /* string icon = 2; */
        if (message.icon !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.icon);
        /* int32 show_status = 3; */
        if (message.showStatus !== 0)
            writer.tag(3, WireType.Varint).int32(message.showStatus);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.NftFaceIcon
 */
export const NftFaceIcon = new NftFaceIcon$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Notice$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.Notice", [
            { no: 1, name: "mid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "notice_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "content", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "notice_type", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 6, name: "icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "icon_night", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "text_color", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "text_color_night", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "bg_color", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "bg_color_night", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { mid: 0n, noticeId: 0n, content: "", url: "", noticeType: 0n, icon: "", iconNight: "", textColor: "", textColorNight: "", bgColor: "", bgColorNight: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 mid */ 1:
                    message.mid = reader.int64().toBigInt();
                    break;
                case /* int64 notice_id */ 2:
                    message.noticeId = reader.int64().toBigInt();
                    break;
                case /* string content */ 3:
                    message.content = reader.string();
                    break;
                case /* string url */ 4:
                    message.url = reader.string();
                    break;
                case /* int64 notice_type */ 5:
                    message.noticeType = reader.int64().toBigInt();
                    break;
                case /* string icon */ 6:
                    message.icon = reader.string();
                    break;
                case /* string icon_night */ 7:
                    message.iconNight = reader.string();
                    break;
                case /* string text_color */ 8:
                    message.textColor = reader.string();
                    break;
                case /* string text_color_night */ 9:
                    message.textColorNight = reader.string();
                    break;
                case /* string bg_color */ 10:
                    message.bgColor = reader.string();
                    break;
                case /* string bg_color_night */ 11:
                    message.bgColorNight = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 mid = 1; */
        if (message.mid !== 0n)
            writer.tag(1, WireType.Varint).int64(message.mid);
        /* int64 notice_id = 2; */
        if (message.noticeId !== 0n)
            writer.tag(2, WireType.Varint).int64(message.noticeId);
        /* string content = 3; */
        if (message.content !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.content);
        /* string url = 4; */
        if (message.url !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.url);
        /* int64 notice_type = 5; */
        if (message.noticeType !== 0n)
            writer.tag(5, WireType.Varint).int64(message.noticeType);
        /* string icon = 6; */
        if (message.icon !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.icon);
        /* string icon_night = 7; */
        if (message.iconNight !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.iconNight);
        /* string text_color = 8; */
        if (message.textColor !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.textColor);
        /* string text_color_night = 9; */
        if (message.textColorNight !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.textColorNight);
        /* string bg_color = 10; */
        if (message.bgColor !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.bgColor);
        /* string bg_color_night = 11; */
        if (message.bgColorNight !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.bgColorNight);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.Notice
 */
export const Notice = new Notice$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OfficialVerify$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.OfficialVerify", [
            { no: 1, name: "type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { type: 0, desc: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 type */ 1:
                    message.type = reader.int32();
                    break;
                case /* string desc */ 2:
                    message.desc = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 type = 1; */
        if (message.type !== 0)
            writer.tag(1, WireType.Varint).int32(message.type);
        /* string desc = 2; */
        if (message.desc !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.desc);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.OfficialVerify
 */
export const OfficialVerify = new OfficialVerify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OgvCardUI$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.OgvCardUI", [
            { no: 1, name: "background_image", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "gaussian_blur_value", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "module_color", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { backgroundImage: "", gaussianBlurValue: "", moduleColor: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string background_image */ 1:
                    message.backgroundImage = reader.string();
                    break;
                case /* string gaussian_blur_value */ 2:
                    message.gaussianBlurValue = reader.string();
                    break;
                case /* string module_color */ 3:
                    message.moduleColor = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string background_image = 1; */
        if (message.backgroundImage !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.backgroundImage);
        /* string gaussian_blur_value = 2; */
        if (message.gaussianBlurValue !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.gaussianBlurValue);
        /* string module_color = 3; */
        if (message.moduleColor !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.moduleColor);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.OgvCardUI
 */
export const OgvCardUI = new OgvCardUI$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OgvClipInfo$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.OgvClipInfo", [
            { no: 1, name: "play_start_time", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "play_end_time", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { playStartTime: 0n, playEndTime: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 play_start_time */ 1:
                    message.playStartTime = reader.int64().toBigInt();
                    break;
                case /* int64 play_end_time */ 2:
                    message.playEndTime = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 play_start_time = 1; */
        if (message.playStartTime !== 0n)
            writer.tag(1, WireType.Varint).int64(message.playStartTime);
        /* int64 play_end_time = 2; */
        if (message.playEndTime !== 0n)
            writer.tag(2, WireType.Varint).int64(message.playEndTime);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.OgvClipInfo
 */
export const OgvClipInfo = new OgvClipInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OgvRecommendWord$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.OgvRecommendWord", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "goto", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "param", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", goto: "", param: "", uri: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string goto */ 2:
                    message.goto = reader.string();
                    break;
                case /* string param */ 3:
                    message.param = reader.string();
                    break;
                case /* string uri */ 4:
                    message.uri = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string goto = 2; */
        if (message.goto !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.goto);
        /* string param = 3; */
        if (message.param !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.param);
        /* string uri = 4; */
        if (message.uri !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.uri);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.OgvRecommendWord
 */
export const OgvRecommendWord = new OgvRecommendWord$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PediaCover$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.PediaCover", [
            { no: 1, name: "cover_type", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "cover_sun_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "cover_night_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "cover_width", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "cover_height", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { coverType: 0n, coverSunUrl: "", coverNightUrl: "", coverWidth: 0, coverHeight: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 cover_type */ 1:
                    message.coverType = reader.int64().toBigInt();
                    break;
                case /* string cover_sun_url */ 2:
                    message.coverSunUrl = reader.string();
                    break;
                case /* string cover_night_url */ 3:
                    message.coverNightUrl = reader.string();
                    break;
                case /* int32 cover_width */ 4:
                    message.coverWidth = reader.int32();
                    break;
                case /* int32 cover_height */ 5:
                    message.coverHeight = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 cover_type = 1; */
        if (message.coverType !== 0n)
            writer.tag(1, WireType.Varint).int64(message.coverType);
        /* string cover_sun_url = 2; */
        if (message.coverSunUrl !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.coverSunUrl);
        /* string cover_night_url = 3; */
        if (message.coverNightUrl !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.coverNightUrl);
        /* int32 cover_width = 4; */
        if (message.coverWidth !== 0)
            writer.tag(4, WireType.Varint).int32(message.coverWidth);
        /* int32 cover_height = 5; */
        if (message.coverHeight !== 0)
            writer.tag(5, WireType.Varint).int32(message.coverHeight);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.PediaCover
 */
export const PediaCover = new PediaCover$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PlayerArgs$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.PlayerArgs", [
            { no: 1, name: "is_live", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "aid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "cid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "sub_type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "room_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 7, name: "ep_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 8, name: "is_preview", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 9, name: "type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "duration", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 11, name: "season_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 12, name: "report_required_play_duration", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 13, name: "report_required_time", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 14, name: "manual_play", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 15, name: "hide_play_button", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 16, name: "content_mode", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 17, name: "report_history", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { isLive: 0, aid: 0n, cid: 0n, subType: 0, roomId: 0n, epId: 0n, isPreview: 0, type: "", duration: 0, seasonId: 0n, reportRequiredPlayDuration: 0, reportRequiredTime: 0, manualPlay: 0, hidePlayButton: false, contentMode: 0, reportHistory: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 is_live */ 1:
                    message.isLive = reader.int32();
                    break;
                case /* int64 aid */ 2:
                    message.aid = reader.int64().toBigInt();
                    break;
                case /* int64 cid */ 3:
                    message.cid = reader.int64().toBigInt();
                    break;
                case /* int32 sub_type */ 4:
                    message.subType = reader.int32();
                    break;
                case /* int64 room_id */ 5:
                    message.roomId = reader.int64().toBigInt();
                    break;
                case /* int64 ep_id */ 7:
                    message.epId = reader.int64().toBigInt();
                    break;
                case /* int32 is_preview */ 8:
                    message.isPreview = reader.int32();
                    break;
                case /* string type */ 9:
                    message.type = reader.string();
                    break;
                case /* int32 duration */ 10:
                    message.duration = reader.int32();
                    break;
                case /* int64 season_id */ 11:
                    message.seasonId = reader.int64().toBigInt();
                    break;
                case /* int32 report_required_play_duration */ 12:
                    message.reportRequiredPlayDuration = reader.int32();
                    break;
                case /* int32 report_required_time */ 13:
                    message.reportRequiredTime = reader.int32();
                    break;
                case /* int32 manual_play */ 14:
                    message.manualPlay = reader.int32();
                    break;
                case /* bool hide_play_button */ 15:
                    message.hidePlayButton = reader.bool();
                    break;
                case /* int32 content_mode */ 16:
                    message.contentMode = reader.int32();
                    break;
                case /* int32 report_history */ 17:
                    message.reportHistory = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 is_live = 1; */
        if (message.isLive !== 0)
            writer.tag(1, WireType.Varint).int32(message.isLive);
        /* int64 aid = 2; */
        if (message.aid !== 0n)
            writer.tag(2, WireType.Varint).int64(message.aid);
        /* int64 cid = 3; */
        if (message.cid !== 0n)
            writer.tag(3, WireType.Varint).int64(message.cid);
        /* int32 sub_type = 4; */
        if (message.subType !== 0)
            writer.tag(4, WireType.Varint).int32(message.subType);
        /* int64 room_id = 5; */
        if (message.roomId !== 0n)
            writer.tag(5, WireType.Varint).int64(message.roomId);
        /* int64 ep_id = 7; */
        if (message.epId !== 0n)
            writer.tag(7, WireType.Varint).int64(message.epId);
        /* int32 is_preview = 8; */
        if (message.isPreview !== 0)
            writer.tag(8, WireType.Varint).int32(message.isPreview);
        /* string type = 9; */
        if (message.type !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.type);
        /* int32 duration = 10; */
        if (message.duration !== 0)
            writer.tag(10, WireType.Varint).int32(message.duration);
        /* int64 season_id = 11; */
        if (message.seasonId !== 0n)
            writer.tag(11, WireType.Varint).int64(message.seasonId);
        /* int32 report_required_play_duration = 12; */
        if (message.reportRequiredPlayDuration !== 0)
            writer.tag(12, WireType.Varint).int32(message.reportRequiredPlayDuration);
        /* int32 report_required_time = 13; */
        if (message.reportRequiredTime !== 0)
            writer.tag(13, WireType.Varint).int32(message.reportRequiredTime);
        /* int32 manual_play = 14; */
        if (message.manualPlay !== 0)
            writer.tag(14, WireType.Varint).int32(message.manualPlay);
        /* bool hide_play_button = 15; */
        if (message.hidePlayButton !== false)
            writer.tag(15, WireType.Varint).bool(message.hidePlayButton);
        /* int32 content_mode = 16; */
        if (message.contentMode !== 0)
            writer.tag(16, WireType.Varint).int32(message.contentMode);
        /* int32 report_history = 17; */
        if (message.reportHistory !== 0)
            writer.tag(17, WireType.Varint).int32(message.reportHistory);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.PlayerArgs
 */
export const PlayerArgs = new PlayerArgs$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PlayerWidget$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.PlayerWidget", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", desc: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string desc */ 2:
                    message.desc = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string desc = 2; */
        if (message.desc !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.desc);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.PlayerWidget
 */
export const PlayerWidget = new PlayerWidget$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RankInfo$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.RankInfo", [
            { no: 1, name: "search_night_icon_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "search_day_icon_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "search_bkg_night_color", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "search_bkg_day_color", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "search_font_night_color", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "search_font_day_color", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "rank_content", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "rank_link", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { searchNightIconUrl: "", searchDayIconUrl: "", searchBkgNightColor: "", searchBkgDayColor: "", searchFontNightColor: "", searchFontDayColor: "", rankContent: "", rankLink: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string search_night_icon_url */ 1:
                    message.searchNightIconUrl = reader.string();
                    break;
                case /* string search_day_icon_url */ 2:
                    message.searchDayIconUrl = reader.string();
                    break;
                case /* string search_bkg_night_color */ 3:
                    message.searchBkgNightColor = reader.string();
                    break;
                case /* string search_bkg_day_color */ 4:
                    message.searchBkgDayColor = reader.string();
                    break;
                case /* string search_font_night_color */ 5:
                    message.searchFontNightColor = reader.string();
                    break;
                case /* string search_font_day_color */ 6:
                    message.searchFontDayColor = reader.string();
                    break;
                case /* string rank_content */ 7:
                    message.rankContent = reader.string();
                    break;
                case /* string rank_link */ 8:
                    message.rankLink = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string search_night_icon_url = 1; */
        if (message.searchNightIconUrl !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.searchNightIconUrl);
        /* string search_day_icon_url = 2; */
        if (message.searchDayIconUrl !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.searchDayIconUrl);
        /* string search_bkg_night_color = 3; */
        if (message.searchBkgNightColor !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.searchBkgNightColor);
        /* string search_bkg_day_color = 4; */
        if (message.searchBkgDayColor !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.searchBkgDayColor);
        /* string search_font_night_color = 5; */
        if (message.searchFontNightColor !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.searchFontNightColor);
        /* string search_font_day_color = 6; */
        if (message.searchFontDayColor !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.searchFontDayColor);
        /* string rank_content = 7; */
        if (message.rankContent !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.rankContent);
        /* string rank_link = 8; */
        if (message.rankLink !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.rankLink);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.RankInfo
 */
export const RankInfo = new RankInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RcmdReason$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.RcmdReason", [
            { no: 1, name: "content", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { content: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string content */ 1:
                    message.content = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string content = 1; */
        if (message.content !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.content);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.RcmdReason
 */
export const RcmdReason = new RcmdReason$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ReasonStyle$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.ReasonStyle", [
            { no: 1, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "text_color", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "text_color_night", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "bg_color", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "bg_color_night", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "border_color", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "border_color_night", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "bg_style", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { text: "", textColor: "", textColorNight: "", bgColor: "", bgColorNight: "", borderColor: "", borderColorNight: "", bgStyle: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string text */ 1:
                    message.text = reader.string();
                    break;
                case /* string text_color */ 2:
                    message.textColor = reader.string();
                    break;
                case /* string text_color_night */ 3:
                    message.textColorNight = reader.string();
                    break;
                case /* string bg_color */ 4:
                    message.bgColor = reader.string();
                    break;
                case /* string bg_color_night */ 5:
                    message.bgColorNight = reader.string();
                    break;
                case /* string border_color */ 6:
                    message.borderColor = reader.string();
                    break;
                case /* string border_color_night */ 7:
                    message.borderColorNight = reader.string();
                    break;
                case /* int32 bg_style */ 8:
                    message.bgStyle = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string text = 1; */
        if (message.text !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.text);
        /* string text_color = 2; */
        if (message.textColor !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.textColor);
        /* string text_color_night = 3; */
        if (message.textColorNight !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.textColorNight);
        /* string bg_color = 4; */
        if (message.bgColor !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.bgColor);
        /* string bg_color_night = 5; */
        if (message.bgColorNight !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.bgColorNight);
        /* string border_color = 6; */
        if (message.borderColor !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.borderColor);
        /* string border_color_night = 7; */
        if (message.borderColorNight !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.borderColorNight);
        /* int32 bg_style = 8; */
        if (message.bgStyle !== 0)
            writer.tag(8, WireType.Varint).int32(message.bgStyle);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.ReasonStyle
 */
export const ReasonStyle = new ReasonStyle$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RecommendWord$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.RecommendWord", [
            { no: 1, name: "param", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "from_source", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { param: "", type: "", title: "", fromSource: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string param */ 1:
                    message.param = reader.string();
                    break;
                case /* string type */ 2:
                    message.type = reader.string();
                    break;
                case /* string title */ 3:
                    message.title = reader.string();
                    break;
                case /* string from_source */ 4:
                    message.fromSource = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string param = 1; */
        if (message.param !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.param);
        /* string type = 2; */
        if (message.type !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.type);
        /* string title = 3; */
        if (message.title !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.title);
        /* string from_source = 4; */
        if (message.fromSource !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.fromSource);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.RecommendWord
 */
export const RecommendWord = new RecommendWord$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Relation$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.Relation", [
            { no: 1, name: "status", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { status: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 status */ 1:
                    message.status = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 status = 1; */
        if (message.status !== 0)
            writer.tag(1, WireType.Varint).int32(message.status);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.Relation
 */
export const Relation = new Relation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RightTopLiveBadge$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.RightTopLiveBadge", [
            { no: 1, name: "live_status", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "in_live", kind: "message", T: () => LiveBadgeResource },
            { no: 3, name: "live_stats_desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { liveStatus: 0, liveStatsDesc: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 live_status */ 1:
                    message.liveStatus = reader.int32();
                    break;
                case /* bilibili.polymer.app.search.v1.LiveBadgeResource in_live */ 2:
                    message.inLive = LiveBadgeResource.internalBinaryRead(reader, reader.uint32(), options, message.inLive);
                    break;
                case /* string live_stats_desc */ 3:
                    message.liveStatsDesc = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 live_status = 1; */
        if (message.liveStatus !== 0)
            writer.tag(1, WireType.Varint).int32(message.liveStatus);
        /* bilibili.polymer.app.search.v1.LiveBadgeResource in_live = 2; */
        if (message.inLive)
            LiveBadgeResource.internalBinaryWrite(message.inLive, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* string live_stats_desc = 3; */
        if (message.liveStatsDesc !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.liveStatsDesc);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.RightTopLiveBadge
 */
export const RightTopLiveBadge = new RightTopLiveBadge$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchAdCard$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchAdCard", [
            { no: 1, name: "json_str", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { jsonStr: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string json_str */ 1:
                    message.jsonStr = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string json_str = 1; */
        if (message.jsonStr !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.jsonStr);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchAdCard
 */
export const SearchAdCard = new SearchAdCard$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchAllRequest$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchAllRequest", [
            { no: 1, name: "keyword", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "order", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "tid_list", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "duration_list", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "extra_word", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "from_source", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "is_org_query", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "local_time", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 9, name: "ad_extra", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "pagination", kind: "message", T: () => Pagination },
            { no: 11, name: "player_args", kind: "message", T: () => PlayerArgs$ }
        ]);
    }
    create(value) {
        const message = { keyword: "", fromSource: "", localTime: 0, adExtra: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string keyword */ 1:
                    message.keyword = reader.string();
                    break;
                case /* optional int32 order */ 2:
                    message.order = reader.int32();
                    break;
                case /* optional string tid_list */ 3:
                    message.tidList = reader.string();
                    break;
                case /* optional string duration_list */ 4:
                    message.durationList = reader.string();
                    break;
                case /* optional string extra_word */ 5:
                    message.extraWord = reader.string();
                    break;
                case /* string from_source */ 6:
                    message.fromSource = reader.string();
                    break;
                case /* optional int32 is_org_query */ 7:
                    message.isOrgQuery = reader.int32();
                    break;
                case /* int32 local_time */ 8:
                    message.localTime = reader.int32();
                    break;
                case /* string ad_extra */ 9:
                    message.adExtra = reader.string();
                    break;
                case /* bilibili.pagination.Pagination pagination */ 10:
                    message.pagination = Pagination.internalBinaryRead(reader, reader.uint32(), options, message.pagination);
                    break;
                case /* bilibili.app.archive.middleware.v1.PlayerArgs player_args */ 11:
                    message.playerArgs = PlayerArgs$.internalBinaryRead(reader, reader.uint32(), options, message.playerArgs);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string keyword = 1; */
        if (message.keyword !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.keyword);
        /* optional int32 order = 2; */
        if (message.order !== undefined)
            writer.tag(2, WireType.Varint).int32(message.order);
        /* optional string tid_list = 3; */
        if (message.tidList !== undefined)
            writer.tag(3, WireType.LengthDelimited).string(message.tidList);
        /* optional string duration_list = 4; */
        if (message.durationList !== undefined)
            writer.tag(4, WireType.LengthDelimited).string(message.durationList);
        /* optional string extra_word = 5; */
        if (message.extraWord !== undefined)
            writer.tag(5, WireType.LengthDelimited).string(message.extraWord);
        /* string from_source = 6; */
        if (message.fromSource !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.fromSource);
        /* optional int32 is_org_query = 7; */
        if (message.isOrgQuery !== undefined)
            writer.tag(7, WireType.Varint).int32(message.isOrgQuery);
        /* int32 local_time = 8; */
        if (message.localTime !== 0)
            writer.tag(8, WireType.Varint).int32(message.localTime);
        /* string ad_extra = 9; */
        if (message.adExtra !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.adExtra);
        /* bilibili.pagination.Pagination pagination = 10; */
        if (message.pagination)
            Pagination.internalBinaryWrite(message.pagination, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.archive.middleware.v1.PlayerArgs player_args = 11; */
        if (message.playerArgs)
            PlayerArgs$.internalBinaryWrite(message.playerArgs, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchAllRequest
 */
export const SearchAllRequest = new SearchAllRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchAllResponse$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchAllResponse", [
            { no: 1, name: "keyword", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "trackid", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "nav", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Nav },
            { no: 4, name: "item", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Item },
            { no: 5, name: "easter_egg", kind: "message", T: () => EasterEgg },
            { no: 6, name: "exp_str", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "extra_word_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "org_extra_word", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "select_bar_type", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 10, name: "new_search_exp_num", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 11, name: "pagination", kind: "message", T: () => PaginationReply },
            { no: 12, name: "app_display_option", kind: "message", T: () => DisplayOption },
            { no: 13, name: "annotation", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "scalar", T: 9 /*ScalarType.STRING*/ } }
        ]);
    }
    create(value) {
        const message = { keyword: "", trackid: "", nav: [], item: [], expStr: "", extraWordList: [], selectBarType: 0, newSearchExpNum: 0, annotation: {} };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string keyword */ 1:
                    message.keyword = reader.string();
                    break;
                case /* string trackid */ 2:
                    message.trackid = reader.string();
                    break;
                case /* repeated bilibili.polymer.app.search.v1.Nav nav */ 3:
                    message.nav.push(Nav.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated bilibili.polymer.app.search.v1.Item item */ 4:
                    message.item.push(Item.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional bilibili.polymer.app.search.v1.EasterEgg easter_egg */ 5:
                    message.easterEgg = EasterEgg.internalBinaryRead(reader, reader.uint32(), options, message.easterEgg);
                    break;
                case /* string exp_str */ 6:
                    message.expStr = reader.string();
                    break;
                case /* repeated string extra_word_list */ 7:
                    message.extraWordList.push(reader.string());
                    break;
                case /* optional string org_extra_word */ 8:
                    message.orgExtraWord = reader.string();
                    break;
                case /* int64 select_bar_type = 9 [jstype = JS_NUMBER];*/ 9:
                    message.selectBarType = reader.int64().toNumber();
                    break;
                case /* int64 new_search_exp_num = 10 [jstype = JS_NUMBER];*/ 10:
                    message.newSearchExpNum = reader.int64().toNumber();
                    break;
                case /* bilibili.pagination.PaginationReply pagination */ 11:
                    message.pagination = PaginationReply.internalBinaryRead(reader, reader.uint32(), options, message.pagination);
                    break;
                case /* bilibili.polymer.app.search.v1.DisplayOption app_display_option */ 12:
                    message.appDisplayOption = DisplayOption.internalBinaryRead(reader, reader.uint32(), options, message.appDisplayOption);
                    break;
                case /* map<string, string> annotation */ 13:
                    this.binaryReadMap13(message.annotation, reader, options);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    binaryReadMap13(map, reader, options) {
        let len = reader.uint32(), end = reader.pos + len, key, val;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.string();
                    break;
                case 2:
                    val = reader.string();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field bilibili.polymer.app.search.v1.SearchAllResponse.annotation");
            }
        }
        map[key ?? ""] = val ?? "";
    }
    internalBinaryWrite(message, writer, options) {
        /* string keyword = 1; */
        if (message.keyword !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.keyword);
        /* string trackid = 2; */
        if (message.trackid !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.trackid);
        /* repeated bilibili.polymer.app.search.v1.Nav nav = 3; */
        for (let i = 0; i < message.nav.length; i++)
            Nav.internalBinaryWrite(message.nav[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* repeated bilibili.polymer.app.search.v1.Item item = 4; */
        for (let i = 0; i < message.item.length; i++)
            Item.internalBinaryWrite(message.item[i], writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* optional bilibili.polymer.app.search.v1.EasterEgg easter_egg = 5; */
        if (message.easterEgg)
            EasterEgg.internalBinaryWrite(message.easterEgg, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* string exp_str = 6; */
        if (message.expStr !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.expStr);
        /* repeated string extra_word_list = 7; */
        for (let i = 0; i < message.extraWordList.length; i++)
            writer.tag(7, WireType.LengthDelimited).string(message.extraWordList[i]);
        /* optional string org_extra_word = 8; */
        if (message.orgExtraWord !== undefined)
            writer.tag(8, WireType.LengthDelimited).string(message.orgExtraWord);
        /* int64 select_bar_type = 9 [jstype = JS_NUMBER]; */
        if (message.selectBarType !== 0)
            writer.tag(9, WireType.Varint).int64(message.selectBarType);
        /* int64 new_search_exp_num = 10 [jstype = JS_NUMBER]; */
        if (message.newSearchExpNum !== 0)
            writer.tag(10, WireType.Varint).int64(message.newSearchExpNum);
        /* bilibili.pagination.PaginationReply pagination = 11; */
        if (message.pagination)
            PaginationReply.internalBinaryWrite(message.pagination, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.DisplayOption app_display_option = 12; */
        if (message.appDisplayOption)
            DisplayOption.internalBinaryWrite(message.appDisplayOption, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        /* map<string, string> annotation = 13; */
        for (let k of Object.keys(message.annotation))
            writer.tag(13, WireType.LengthDelimited).fork().tag(1, WireType.LengthDelimited).string(k).tag(2, WireType.LengthDelimited).string(message.annotation[k]).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchAllResponse
 */
export const SearchAllResponse = new SearchAllResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchArticleCard$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchArticleCard", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "play", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "like", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "reply", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "image_urls", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "author", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "template_id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 9, name: "id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 10, name: "mid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 11, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "view", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "", play: 0, like: 0, reply: 0, imageUrls: [], author: "", templateId: 0, id: 0n, mid: 0n, name: "", desc: "", view: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* int32 play */ 3:
                    message.play = reader.int32();
                    break;
                case /* int32 like */ 4:
                    message.like = reader.int32();
                    break;
                case /* int32 reply */ 5:
                    message.reply = reader.int32();
                    break;
                case /* repeated string image_urls */ 6:
                    message.imageUrls.push(reader.string());
                    break;
                case /* string author */ 7:
                    message.author = reader.string();
                    break;
                case /* int32 template_id */ 8:
                    message.templateId = reader.int32();
                    break;
                case /* int64 id */ 9:
                    message.id = reader.int64().toBigInt();
                    break;
                case /* int64 mid */ 10:
                    message.mid = reader.int64().toBigInt();
                    break;
                case /* string name */ 11:
                    message.name = reader.string();
                    break;
                case /* string desc */ 12:
                    message.desc = reader.string();
                    break;
                case /* int32 view */ 13:
                    message.view = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* int32 play = 3; */
        if (message.play !== 0)
            writer.tag(3, WireType.Varint).int32(message.play);
        /* int32 like = 4; */
        if (message.like !== 0)
            writer.tag(4, WireType.Varint).int32(message.like);
        /* int32 reply = 5; */
        if (message.reply !== 0)
            writer.tag(5, WireType.Varint).int32(message.reply);
        /* repeated string image_urls = 6; */
        for (let i = 0; i < message.imageUrls.length; i++)
            writer.tag(6, WireType.LengthDelimited).string(message.imageUrls[i]);
        /* string author = 7; */
        if (message.author !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.author);
        /* int32 template_id = 8; */
        if (message.templateId !== 0)
            writer.tag(8, WireType.Varint).int32(message.templateId);
        /* int64 id = 9; */
        if (message.id !== 0n)
            writer.tag(9, WireType.Varint).int64(message.id);
        /* int64 mid = 10; */
        if (message.mid !== 0n)
            writer.tag(10, WireType.Varint).int64(message.mid);
        /* string name = 11; */
        if (message.name !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.name);
        /* string desc = 12; */
        if (message.desc !== "")
            writer.tag(12, WireType.LengthDelimited).string(message.desc);
        /* int32 view = 13; */
        if (message.view !== 0)
            writer.tag(13, WireType.Varint).int32(message.view);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchArticleCard
 */
export const SearchArticleCard = new SearchArticleCard$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchAuthorNewCard$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchAuthorNewCard", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "live_face", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "live_uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "live_link", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "fans", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 7, name: "level", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "sign", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "is_up", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 10, name: "archives", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 11, name: "mid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 12, name: "roomid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 13, name: "relation", kind: "message", T: () => Relation },
            { no: 14, name: "official_verify", kind: "message", T: () => OfficialVerify },
            { no: 15, name: "face_nft_new", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 16, name: "nft_face_icon", kind: "message", T: () => NftFaceIcon },
            { no: 17, name: "is_senior_member", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 18, name: "background", kind: "message", T: () => Background },
            { no: 19, name: "av_style", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 20, name: "space", kind: "message", T: () => Space },
            { no: 21, name: "av_items", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => AvItem },
            { no: 22, name: "notice", kind: "message", T: () => Notice },
            { no: 23, name: "share_plane", kind: "message", T: () => SharePlane },
            { no: 24, name: "inline_type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 25, name: "inline_live", kind: "message", T: () => SearchInlineData },
            { no: 26, name: "is_inline_live", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 27, name: "three_point", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ThreePoint },
            { no: 28, name: "live_status", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 29, name: "vip", kind: "message", T: () => VipInfo }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "", liveFace: 0, liveUri: "", liveLink: "", fans: 0, level: 0, sign: "", isUp: false, archives: 0, mid: 0n, roomid: 0n, faceNftNew: 0, isSeniorMember: 0, avStyle: 0, avItems: [], inlineType: "", isInlineLive: 0, threePoint: [], liveStatus: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* int32 live_face */ 3:
                    message.liveFace = reader.int32();
                    break;
                case /* string live_uri */ 4:
                    message.liveUri = reader.string();
                    break;
                case /* string live_link */ 5:
                    message.liveLink = reader.string();
                    break;
                case /* int32 fans */ 6:
                    message.fans = reader.int32();
                    break;
                case /* int32 level */ 7:
                    message.level = reader.int32();
                    break;
                case /* string sign */ 8:
                    message.sign = reader.string();
                    break;
                case /* bool is_up */ 9:
                    message.isUp = reader.bool();
                    break;
                case /* int32 archives */ 10:
                    message.archives = reader.int32();
                    break;
                case /* int64 mid */ 11:
                    message.mid = reader.int64().toBigInt();
                    break;
                case /* int64 roomid */ 12:
                    message.roomid = reader.int64().toBigInt();
                    break;
                case /* bilibili.polymer.app.search.v1.Relation relation */ 13:
                    message.relation = Relation.internalBinaryRead(reader, reader.uint32(), options, message.relation);
                    break;
                case /* bilibili.polymer.app.search.v1.OfficialVerify official_verify */ 14:
                    message.officialVerify = OfficialVerify.internalBinaryRead(reader, reader.uint32(), options, message.officialVerify);
                    break;
                case /* int32 face_nft_new */ 15:
                    message.faceNftNew = reader.int32();
                    break;
                case /* bilibili.polymer.app.search.v1.NftFaceIcon nft_face_icon */ 16:
                    message.nftFaceIcon = NftFaceIcon.internalBinaryRead(reader, reader.uint32(), options, message.nftFaceIcon);
                    break;
                case /* int32 is_senior_member */ 17:
                    message.isSeniorMember = reader.int32();
                    break;
                case /* bilibili.polymer.app.search.v1.Background background */ 18:
                    message.background = Background.internalBinaryRead(reader, reader.uint32(), options, message.background);
                    break;
                case /* int32 av_style */ 19:
                    message.avStyle = reader.int32();
                    break;
                case /* bilibili.polymer.app.search.v1.Space space */ 20:
                    message.space = Space.internalBinaryRead(reader, reader.uint32(), options, message.space);
                    break;
                case /* repeated bilibili.polymer.app.search.v1.AvItem av_items */ 21:
                    message.avItems.push(AvItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bilibili.polymer.app.search.v1.Notice notice */ 22:
                    message.notice = Notice.internalBinaryRead(reader, reader.uint32(), options, message.notice);
                    break;
                case /* bilibili.polymer.app.search.v1.SharePlane share_plane */ 23:
                    message.sharePlane = SharePlane.internalBinaryRead(reader, reader.uint32(), options, message.sharePlane);
                    break;
                case /* string inline_type */ 24:
                    message.inlineType = reader.string();
                    break;
                case /* bilibili.polymer.app.search.v1.SearchInlineData inline_live */ 25:
                    message.inlineLive = SearchInlineData.internalBinaryRead(reader, reader.uint32(), options, message.inlineLive);
                    break;
                case /* int32 is_inline_live */ 26:
                    message.isInlineLive = reader.int32();
                    break;
                case /* repeated bilibili.polymer.app.search.v1.ThreePoint three_point */ 27:
                    message.threePoint.push(ThreePoint.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* int32 live_status */ 28:
                    message.liveStatus = reader.int32();
                    break;
                case /* bilibili.polymer.app.search.v1.VipInfo vip */ 29:
                    message.vip = VipInfo.internalBinaryRead(reader, reader.uint32(), options, message.vip);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* int32 live_face = 3; */
        if (message.liveFace !== 0)
            writer.tag(3, WireType.Varint).int32(message.liveFace);
        /* string live_uri = 4; */
        if (message.liveUri !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.liveUri);
        /* string live_link = 5; */
        if (message.liveLink !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.liveLink);
        /* int32 fans = 6; */
        if (message.fans !== 0)
            writer.tag(6, WireType.Varint).int32(message.fans);
        /* int32 level = 7; */
        if (message.level !== 0)
            writer.tag(7, WireType.Varint).int32(message.level);
        /* string sign = 8; */
        if (message.sign !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.sign);
        /* bool is_up = 9; */
        if (message.isUp !== false)
            writer.tag(9, WireType.Varint).bool(message.isUp);
        /* int32 archives = 10; */
        if (message.archives !== 0)
            writer.tag(10, WireType.Varint).int32(message.archives);
        /* int64 mid = 11; */
        if (message.mid !== 0n)
            writer.tag(11, WireType.Varint).int64(message.mid);
        /* int64 roomid = 12; */
        if (message.roomid !== 0n)
            writer.tag(12, WireType.Varint).int64(message.roomid);
        /* bilibili.polymer.app.search.v1.Relation relation = 13; */
        if (message.relation)
            Relation.internalBinaryWrite(message.relation, writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.OfficialVerify official_verify = 14; */
        if (message.officialVerify)
            OfficialVerify.internalBinaryWrite(message.officialVerify, writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        /* int32 face_nft_new = 15; */
        if (message.faceNftNew !== 0)
            writer.tag(15, WireType.Varint).int32(message.faceNftNew);
        /* bilibili.polymer.app.search.v1.NftFaceIcon nft_face_icon = 16; */
        if (message.nftFaceIcon)
            NftFaceIcon.internalBinaryWrite(message.nftFaceIcon, writer.tag(16, WireType.LengthDelimited).fork(), options).join();
        /* int32 is_senior_member = 17; */
        if (message.isSeniorMember !== 0)
            writer.tag(17, WireType.Varint).int32(message.isSeniorMember);
        /* bilibili.polymer.app.search.v1.Background background = 18; */
        if (message.background)
            Background.internalBinaryWrite(message.background, writer.tag(18, WireType.LengthDelimited).fork(), options).join();
        /* int32 av_style = 19; */
        if (message.avStyle !== 0)
            writer.tag(19, WireType.Varint).int32(message.avStyle);
        /* bilibili.polymer.app.search.v1.Space space = 20; */
        if (message.space)
            Space.internalBinaryWrite(message.space, writer.tag(20, WireType.LengthDelimited).fork(), options).join();
        /* repeated bilibili.polymer.app.search.v1.AvItem av_items = 21; */
        for (let i = 0; i < message.avItems.length; i++)
            AvItem.internalBinaryWrite(message.avItems[i], writer.tag(21, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.Notice notice = 22; */
        if (message.notice)
            Notice.internalBinaryWrite(message.notice, writer.tag(22, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.SharePlane share_plane = 23; */
        if (message.sharePlane)
            SharePlane.internalBinaryWrite(message.sharePlane, writer.tag(23, WireType.LengthDelimited).fork(), options).join();
        /* string inline_type = 24; */
        if (message.inlineType !== "")
            writer.tag(24, WireType.LengthDelimited).string(message.inlineType);
        /* bilibili.polymer.app.search.v1.SearchInlineData inline_live = 25; */
        if (message.inlineLive)
            SearchInlineData.internalBinaryWrite(message.inlineLive, writer.tag(25, WireType.LengthDelimited).fork(), options).join();
        /* int32 is_inline_live = 26; */
        if (message.isInlineLive !== 0)
            writer.tag(26, WireType.Varint).int32(message.isInlineLive);
        /* repeated bilibili.polymer.app.search.v1.ThreePoint three_point = 27; */
        for (let i = 0; i < message.threePoint.length; i++)
            ThreePoint.internalBinaryWrite(message.threePoint[i], writer.tag(27, WireType.LengthDelimited).fork(), options).join();
        /* int32 live_status = 28; */
        if (message.liveStatus !== 0)
            writer.tag(28, WireType.Varint).int32(message.liveStatus);
        /* bilibili.polymer.app.search.v1.VipInfo vip = 29; */
        if (message.vip)
            VipInfo.internalBinaryWrite(message.vip, writer.tag(29, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchAuthorNewCard
 */
export const SearchAuthorNewCard = new SearchAuthorNewCard$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchBangumiCard$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchBangumiCard", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "media_type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "play_state", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "area", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "style", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "styles", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "cv", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "rating", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 10, name: "vote", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 11, name: "target", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "staff", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "prompt", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 14, name: "ptime", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 15, name: "season_type_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 16, name: "episodes", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Episode },
            { no: 17, name: "is_selection", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 18, name: "is_atten", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 19, name: "label", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 20, name: "season_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 21, name: "out_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 22, name: "out_icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 23, name: "out_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 24, name: "badges", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ReasonStyle },
            { no: 25, name: "is_out", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 26, name: "episodes_new", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => EpisodeNew },
            { no: 27, name: "watch_button", kind: "message", T: () => WatchButton },
            { no: 28, name: "selection_style", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 29, name: "check_more", kind: "message", T: () => CheckMore },
            { no: 30, name: "follow_button", kind: "message", T: () => FollowButton },
            { no: 31, name: "style_label", kind: "message", T: () => ReasonStyle },
            { no: 32, name: "badges_v2", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ReasonStyle },
            { no: 33, name: "styles_v2", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "", mediaType: 0, playState: 0, area: "", style: "", styles: "", cv: "", rating: 0, vote: 0, target: "", staff: "", prompt: "", ptime: 0n, seasonTypeName: "", episodes: [], isSelection: 0, isAtten: 0, label: "", seasonId: 0n, outName: "", outIcon: "", outUrl: "", badges: [], isOut: 0, episodesNew: [], selectionStyle: "", badgesV2: [], stylesV2: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* int32 media_type */ 3:
                    message.mediaType = reader.int32();
                    break;
                case /* int32 play_state */ 4:
                    message.playState = reader.int32();
                    break;
                case /* string area */ 5:
                    message.area = reader.string();
                    break;
                case /* string style */ 6:
                    message.style = reader.string();
                    break;
                case /* string styles */ 7:
                    message.styles = reader.string();
                    break;
                case /* string cv */ 8:
                    message.cv = reader.string();
                    break;
                case /* double rating */ 9:
                    message.rating = reader.double();
                    break;
                case /* int32 vote */ 10:
                    message.vote = reader.int32();
                    break;
                case /* string target */ 11:
                    message.target = reader.string();
                    break;
                case /* string staff */ 12:
                    message.staff = reader.string();
                    break;
                case /* string prompt */ 13:
                    message.prompt = reader.string();
                    break;
                case /* int64 ptime */ 14:
                    message.ptime = reader.int64().toBigInt();
                    break;
                case /* string season_type_name */ 15:
                    message.seasonTypeName = reader.string();
                    break;
                case /* repeated bilibili.polymer.app.search.v1.Episode episodes */ 16:
                    message.episodes.push(Episode.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* int32 is_selection */ 17:
                    message.isSelection = reader.int32();
                    break;
                case /* int32 is_atten */ 18:
                    message.isAtten = reader.int32();
                    break;
                case /* string label */ 19:
                    message.label = reader.string();
                    break;
                case /* int64 season_id */ 20:
                    message.seasonId = reader.int64().toBigInt();
                    break;
                case /* string out_name */ 21:
                    message.outName = reader.string();
                    break;
                case /* string out_icon */ 22:
                    message.outIcon = reader.string();
                    break;
                case /* string out_url */ 23:
                    message.outUrl = reader.string();
                    break;
                case /* repeated bilibili.polymer.app.search.v1.ReasonStyle badges */ 24:
                    message.badges.push(ReasonStyle.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* int32 is_out */ 25:
                    message.isOut = reader.int32();
                    break;
                case /* repeated bilibili.polymer.app.search.v1.EpisodeNew episodes_new */ 26:
                    message.episodesNew.push(EpisodeNew.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bilibili.polymer.app.search.v1.WatchButton watch_button */ 27:
                    message.watchButton = WatchButton.internalBinaryRead(reader, reader.uint32(), options, message.watchButton);
                    break;
                case /* string selection_style */ 28:
                    message.selectionStyle = reader.string();
                    break;
                case /* bilibili.polymer.app.search.v1.CheckMore check_more */ 29:
                    message.checkMore = CheckMore.internalBinaryRead(reader, reader.uint32(), options, message.checkMore);
                    break;
                case /* bilibili.polymer.app.search.v1.FollowButton follow_button */ 30:
                    message.followButton = FollowButton.internalBinaryRead(reader, reader.uint32(), options, message.followButton);
                    break;
                case /* bilibili.polymer.app.search.v1.ReasonStyle style_label */ 31:
                    message.styleLabel = ReasonStyle.internalBinaryRead(reader, reader.uint32(), options, message.styleLabel);
                    break;
                case /* repeated bilibili.polymer.app.search.v1.ReasonStyle badges_v2 */ 32:
                    message.badgesV2.push(ReasonStyle.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string styles_v2 */ 33:
                    message.stylesV2 = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* int32 media_type = 3; */
        if (message.mediaType !== 0)
            writer.tag(3, WireType.Varint).int32(message.mediaType);
        /* int32 play_state = 4; */
        if (message.playState !== 0)
            writer.tag(4, WireType.Varint).int32(message.playState);
        /* string area = 5; */
        if (message.area !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.area);
        /* string style = 6; */
        if (message.style !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.style);
        /* string styles = 7; */
        if (message.styles !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.styles);
        /* string cv = 8; */
        if (message.cv !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.cv);
        /* double rating = 9; */
        if (message.rating !== 0)
            writer.tag(9, WireType.Bit64).double(message.rating);
        /* int32 vote = 10; */
        if (message.vote !== 0)
            writer.tag(10, WireType.Varint).int32(message.vote);
        /* string target = 11; */
        if (message.target !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.target);
        /* string staff = 12; */
        if (message.staff !== "")
            writer.tag(12, WireType.LengthDelimited).string(message.staff);
        /* string prompt = 13; */
        if (message.prompt !== "")
            writer.tag(13, WireType.LengthDelimited).string(message.prompt);
        /* int64 ptime = 14; */
        if (message.ptime !== 0n)
            writer.tag(14, WireType.Varint).int64(message.ptime);
        /* string season_type_name = 15; */
        if (message.seasonTypeName !== "")
            writer.tag(15, WireType.LengthDelimited).string(message.seasonTypeName);
        /* repeated bilibili.polymer.app.search.v1.Episode episodes = 16; */
        for (let i = 0; i < message.episodes.length; i++)
            Episode.internalBinaryWrite(message.episodes[i], writer.tag(16, WireType.LengthDelimited).fork(), options).join();
        /* int32 is_selection = 17; */
        if (message.isSelection !== 0)
            writer.tag(17, WireType.Varint).int32(message.isSelection);
        /* int32 is_atten = 18; */
        if (message.isAtten !== 0)
            writer.tag(18, WireType.Varint).int32(message.isAtten);
        /* string label = 19; */
        if (message.label !== "")
            writer.tag(19, WireType.LengthDelimited).string(message.label);
        /* int64 season_id = 20; */
        if (message.seasonId !== 0n)
            writer.tag(20, WireType.Varint).int64(message.seasonId);
        /* string out_name = 21; */
        if (message.outName !== "")
            writer.tag(21, WireType.LengthDelimited).string(message.outName);
        /* string out_icon = 22; */
        if (message.outIcon !== "")
            writer.tag(22, WireType.LengthDelimited).string(message.outIcon);
        /* string out_url = 23; */
        if (message.outUrl !== "")
            writer.tag(23, WireType.LengthDelimited).string(message.outUrl);
        /* repeated bilibili.polymer.app.search.v1.ReasonStyle badges = 24; */
        for (let i = 0; i < message.badges.length; i++)
            ReasonStyle.internalBinaryWrite(message.badges[i], writer.tag(24, WireType.LengthDelimited).fork(), options).join();
        /* int32 is_out = 25; */
        if (message.isOut !== 0)
            writer.tag(25, WireType.Varint).int32(message.isOut);
        /* repeated bilibili.polymer.app.search.v1.EpisodeNew episodes_new = 26; */
        for (let i = 0; i < message.episodesNew.length; i++)
            EpisodeNew.internalBinaryWrite(message.episodesNew[i], writer.tag(26, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.WatchButton watch_button = 27; */
        if (message.watchButton)
            WatchButton.internalBinaryWrite(message.watchButton, writer.tag(27, WireType.LengthDelimited).fork(), options).join();
        /* string selection_style = 28; */
        if (message.selectionStyle !== "")
            writer.tag(28, WireType.LengthDelimited).string(message.selectionStyle);
        /* bilibili.polymer.app.search.v1.CheckMore check_more = 29; */
        if (message.checkMore)
            CheckMore.internalBinaryWrite(message.checkMore, writer.tag(29, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.FollowButton follow_button = 30; */
        if (message.followButton)
            FollowButton.internalBinaryWrite(message.followButton, writer.tag(30, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.ReasonStyle style_label = 31; */
        if (message.styleLabel)
            ReasonStyle.internalBinaryWrite(message.styleLabel, writer.tag(31, WireType.LengthDelimited).fork(), options).join();
        /* repeated bilibili.polymer.app.search.v1.ReasonStyle badges_v2 = 32; */
        for (let i = 0; i < message.badgesV2.length; i++)
            ReasonStyle.internalBinaryWrite(message.badgesV2[i], writer.tag(32, WireType.LengthDelimited).fork(), options).join();
        /* string styles_v2 = 33; */
        if (message.stylesV2 !== "")
            writer.tag(33, WireType.LengthDelimited).string(message.stylesV2);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchBangumiCard
 */
export const SearchBangumiCard = new SearchBangumiCard$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchBannerCard$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchBannerCard", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchBannerCard
 */
export const SearchBannerCard = new SearchBannerCard$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchByTypeRequest$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchByTypeRequest", [
            { no: 1, name: "type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "keyword", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "category_sort", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "category_id", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 5, name: "user_type", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "user_sort", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 7, name: "pagination", kind: "message", T: () => Pagination },
            { no: 8, name: "player_args", kind: "message", T: () => PlayerArgs$ }
        ]);
    }
    create(value) {
        const message = { type: 0, keyword: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 type */ 1:
                    message.type = reader.int32();
                    break;
                case /* string keyword */ 2:
                    message.keyword = reader.string();
                    break;
                case /* optional int32 category_sort */ 3:
                    message.categorySort = reader.int32();
                    break;
                case /* optional int64 category_id = 4 [jstype = JS_NUMBER];*/ 4:
                    message.categoryId = reader.int64().toNumber();
                    break;
                case /* optional int32 user_type */ 5:
                    message.userType = reader.int32();
                    break;
                case /* optional int32 user_sort */ 6:
                    message.userSort = reader.int32();
                    break;
                case /* bilibili.pagination.Pagination pagination */ 7:
                    message.pagination = Pagination.internalBinaryRead(reader, reader.uint32(), options, message.pagination);
                    break;
                case /* bilibili.app.archive.middleware.v1.PlayerArgs player_args */ 8:
                    message.playerArgs = PlayerArgs$.internalBinaryRead(reader, reader.uint32(), options, message.playerArgs);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 type = 1; */
        if (message.type !== 0)
            writer.tag(1, WireType.Varint).int32(message.type);
        /* string keyword = 2; */
        if (message.keyword !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.keyword);
        /* optional int32 category_sort = 3; */
        if (message.categorySort !== undefined)
            writer.tag(3, WireType.Varint).int32(message.categorySort);
        /* optional int64 category_id = 4 [jstype = JS_NUMBER]; */
        if (message.categoryId !== undefined)
            writer.tag(4, WireType.Varint).int64(message.categoryId);
        /* optional int32 user_type = 5; */
        if (message.userType !== undefined)
            writer.tag(5, WireType.Varint).int32(message.userType);
        /* optional int32 user_sort = 6; */
        if (message.userSort !== undefined)
            writer.tag(6, WireType.Varint).int32(message.userSort);
        /* bilibili.pagination.Pagination pagination = 7; */
        if (message.pagination)
            Pagination.internalBinaryWrite(message.pagination, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.archive.middleware.v1.PlayerArgs player_args = 8; */
        if (message.playerArgs)
            PlayerArgs$.internalBinaryWrite(message.playerArgs, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchByTypeRequest
 */
export const SearchByTypeRequest = new SearchByTypeRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchByTypeResponse$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchByTypeResponse", [
            { no: 1, name: "trackid", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "pages", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "exp_str", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "keyword", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "result_is_recommend", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "items", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Item },
            { no: 7, name: "pagination", kind: "message", T: () => PaginationReply },
            { no: 8, name: "annotation", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "scalar", T: 9 /*ScalarType.STRING*/ } }
        ]);
    }
    create(value) {
        const message = { trackid: "", pages: 0, expStr: "", keyword: "", resultIsRecommend: 0, items: [], annotation: {} };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string trackid */ 1:
                    message.trackid = reader.string();
                    break;
                case /* int32 pages */ 2:
                    message.pages = reader.int32();
                    break;
                case /* string exp_str */ 3:
                    message.expStr = reader.string();
                    break;
                case /* string keyword */ 4:
                    message.keyword = reader.string();
                    break;
                case /* int32 result_is_recommend */ 5:
                    message.resultIsRecommend = reader.int32();
                    break;
                case /* repeated bilibili.polymer.app.search.v1.Item items */ 6:
                    message.items.push(Item.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bilibili.pagination.PaginationReply pagination */ 7:
                    message.pagination = PaginationReply.internalBinaryRead(reader, reader.uint32(), options, message.pagination);
                    break;
                case /* map<string, string> annotation */ 8:
                    this.binaryReadMap8(message.annotation, reader, options);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    binaryReadMap8(map, reader, options) {
        let len = reader.uint32(), end = reader.pos + len, key, val;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.string();
                    break;
                case 2:
                    val = reader.string();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field bilibili.polymer.app.search.v1.SearchByTypeResponse.annotation");
            }
        }
        map[key ?? ""] = val ?? "";
    }
    internalBinaryWrite(message, writer, options) {
        /* string trackid = 1; */
        if (message.trackid !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.trackid);
        /* int32 pages = 2; */
        if (message.pages !== 0)
            writer.tag(2, WireType.Varint).int32(message.pages);
        /* string exp_str = 3; */
        if (message.expStr !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.expStr);
        /* string keyword = 4; */
        if (message.keyword !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.keyword);
        /* int32 result_is_recommend = 5; */
        if (message.resultIsRecommend !== 0)
            writer.tag(5, WireType.Varint).int32(message.resultIsRecommend);
        /* repeated bilibili.polymer.app.search.v1.Item items = 6; */
        for (let i = 0; i < message.items.length; i++)
            Item.internalBinaryWrite(message.items[i], writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.pagination.PaginationReply pagination = 7; */
        if (message.pagination)
            PaginationReply.internalBinaryWrite(message.pagination, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* map<string, string> annotation = 8; */
        for (let k of Object.keys(message.annotation))
            writer.tag(8, WireType.LengthDelimited).fork().tag(1, WireType.LengthDelimited).string(k).tag(2, WireType.LengthDelimited).string(message.annotation[k]).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchByTypeResponse
 */
export const SearchByTypeResponse = new SearchByTypeResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchCollectionCard$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchCollectionCard", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "author", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "av_items", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => AvItem },
            { no: 5, name: "bottom_button", kind: "message", T: () => BottomButton },
            { no: 6, name: "collection_icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "show_card_desc1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "show_card_desc2", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "", author: "", avItems: [], collectionIcon: "", showCardDesc1: "", showCardDesc2: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* string author */ 3:
                    message.author = reader.string();
                    break;
                case /* repeated bilibili.polymer.app.search.v1.AvItem av_items */ 4:
                    message.avItems.push(AvItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bilibili.polymer.app.search.v1.BottomButton bottom_button */ 5:
                    message.bottomButton = BottomButton.internalBinaryRead(reader, reader.uint32(), options, message.bottomButton);
                    break;
                case /* string collection_icon */ 6:
                    message.collectionIcon = reader.string();
                    break;
                case /* string show_card_desc1 */ 7:
                    message.showCardDesc1 = reader.string();
                    break;
                case /* string show_card_desc2 */ 8:
                    message.showCardDesc2 = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* string author = 3; */
        if (message.author !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.author);
        /* repeated bilibili.polymer.app.search.v1.AvItem av_items = 4; */
        for (let i = 0; i < message.avItems.length; i++)
            AvItem.internalBinaryWrite(message.avItems[i], writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.BottomButton bottom_button = 5; */
        if (message.bottomButton)
            BottomButton.internalBinaryWrite(message.bottomButton, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* string collection_icon = 6; */
        if (message.collectionIcon !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.collectionIcon);
        /* string show_card_desc1 = 7; */
        if (message.showCardDesc1 !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.showCardDesc1);
        /* string show_card_desc2 = 8; */
        if (message.showCardDesc2 !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.showCardDesc2);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchCollectionCard
 */
export const SearchCollectionCard = new SearchCollectionCard$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchComicCard$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchComicCard", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "style", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "comic_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "badge", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "", name: "", style: "", comicUrl: "", badge: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* string name */ 3:
                    message.name = reader.string();
                    break;
                case /* string style */ 4:
                    message.style = reader.string();
                    break;
                case /* string comic_url */ 5:
                    message.comicUrl = reader.string();
                    break;
                case /* string badge */ 6:
                    message.badge = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* string name = 3; */
        if (message.name !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.name);
        /* string style = 4; */
        if (message.style !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.style);
        /* string comic_url = 5; */
        if (message.comicUrl !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.comicUrl);
        /* string badge = 6; */
        if (message.badge !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.badge);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchComicCard
 */
export const SearchComicCard = new SearchComicCard$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchComicInfo$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchComicInfo", [
            { no: 1, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "param", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "comic", kind: "message", T: () => SearchComicCard }
        ]);
    }
    create(value) {
        const message = { uri: "", param: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string uri */ 1:
                    message.uri = reader.string();
                    break;
                case /* string param */ 2:
                    message.param = reader.string();
                    break;
                case /* bilibili.polymer.app.search.v1.SearchComicCard comic */ 3:
                    message.comic = SearchComicCard.internalBinaryRead(reader, reader.uint32(), options, message.comic);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string uri = 1; */
        if (message.uri !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.uri);
        /* string param = 2; */
        if (message.param !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.param);
        /* bilibili.polymer.app.search.v1.SearchComicCard comic = 3; */
        if (message.comic)
            SearchComicCard.internalBinaryWrite(message.comic, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchComicInfo
 */
export const SearchComicInfo = new SearchComicInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchComicRequest$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchComicRequest", [
            { no: 1, name: "id_list", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { idList: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string id_list */ 1:
                    message.idList = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string id_list = 1; */
        if (message.idList !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.idList);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchComicRequest
 */
export const SearchComicRequest = new SearchComicRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchComicResponse$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchComicResponse", [
            { no: 1, name: "items", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => SearchComicInfo }
        ]);
    }
    create(value) {
        const message = { items: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.polymer.app.search.v1.SearchComicInfo items */ 1:
                    message.items.push(SearchComicInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.polymer.app.search.v1.SearchComicInfo items = 1; */
        for (let i = 0; i < message.items.length; i++)
            SearchComicInfo.internalBinaryWrite(message.items[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchComicResponse
 */
export const SearchComicResponse = new SearchComicResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchDynamicCard$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchDynamicCard", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "cover_count", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "covers", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "upper", kind: "message", T: () => Upper },
            { no: 6, name: "stat", kind: "message", T: () => Stat },
            { no: 7, name: "dy_topic", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DyTopic }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "", coverCount: 0, covers: [], dyTopic: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* int32 cover_count */ 3:
                    message.coverCount = reader.int32();
                    break;
                case /* repeated string covers */ 4:
                    message.covers.push(reader.string());
                    break;
                case /* bilibili.polymer.app.search.v1.Upper upper */ 5:
                    message.upper = Upper.internalBinaryRead(reader, reader.uint32(), options, message.upper);
                    break;
                case /* bilibili.polymer.app.search.v1.Stat stat */ 6:
                    message.stat = Stat.internalBinaryRead(reader, reader.uint32(), options, message.stat);
                    break;
                case /* repeated bilibili.polymer.app.search.v1.DyTopic dy_topic */ 7:
                    message.dyTopic.push(DyTopic.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* int32 cover_count = 3; */
        if (message.coverCount !== 0)
            writer.tag(3, WireType.Varint).int32(message.coverCount);
        /* repeated string covers = 4; */
        for (let i = 0; i < message.covers.length; i++)
            writer.tag(4, WireType.LengthDelimited).string(message.covers[i]);
        /* bilibili.polymer.app.search.v1.Upper upper = 5; */
        if (message.upper)
            Upper.internalBinaryWrite(message.upper, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.Stat stat = 6; */
        if (message.stat)
            Stat.internalBinaryWrite(message.stat, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* repeated bilibili.polymer.app.search.v1.DyTopic dy_topic = 7; */
        for (let i = 0; i < message.dyTopic.length; i++)
            DyTopic.internalBinaryWrite(message.dyTopic[i], writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchDynamicCard
 */
export const SearchDynamicCard = new SearchDynamicCard$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchGameCard$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchGameCard", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "reserve", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "rating", kind: "scalar", T: 2 /*ScalarType.FLOAT*/ },
            { no: 5, name: "tags", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "notice_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "notice_content", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "gift_content", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "gift_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "reserve_status", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 11, name: "rank_info", kind: "message", T: () => RankInfo },
            { no: 12, name: "special_bg_color", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "cloud_game_params", kind: "message", T: () => CloudGameParams },
            { no: 14, name: "show_cloud_game_entry", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "", reserve: "", rating: 0, tags: "", noticeName: "", noticeContent: "", giftContent: "", giftUrl: "", reserveStatus: 0, specialBgColor: "", showCloudGameEntry: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* string reserve */ 3:
                    message.reserve = reader.string();
                    break;
                case /* float rating */ 4:
                    message.rating = reader.float();
                    break;
                case /* string tags */ 5:
                    message.tags = reader.string();
                    break;
                case /* string notice_name */ 6:
                    message.noticeName = reader.string();
                    break;
                case /* string notice_content */ 7:
                    message.noticeContent = reader.string();
                    break;
                case /* string gift_content */ 8:
                    message.giftContent = reader.string();
                    break;
                case /* string gift_url */ 9:
                    message.giftUrl = reader.string();
                    break;
                case /* int32 reserve_status */ 10:
                    message.reserveStatus = reader.int32();
                    break;
                case /* bilibili.polymer.app.search.v1.RankInfo rank_info */ 11:
                    message.rankInfo = RankInfo.internalBinaryRead(reader, reader.uint32(), options, message.rankInfo);
                    break;
                case /* string special_bg_color */ 12:
                    message.specialBgColor = reader.string();
                    break;
                case /* bilibili.polymer.app.search.v1.CloudGameParams cloud_game_params */ 13:
                    message.cloudGameParams = CloudGameParams.internalBinaryRead(reader, reader.uint32(), options, message.cloudGameParams);
                    break;
                case /* bool show_cloud_game_entry */ 14:
                    message.showCloudGameEntry = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* string reserve = 3; */
        if (message.reserve !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.reserve);
        /* float rating = 4; */
        if (message.rating !== 0)
            writer.tag(4, WireType.Bit32).float(message.rating);
        /* string tags = 5; */
        if (message.tags !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.tags);
        /* string notice_name = 6; */
        if (message.noticeName !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.noticeName);
        /* string notice_content = 7; */
        if (message.noticeContent !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.noticeContent);
        /* string gift_content = 8; */
        if (message.giftContent !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.giftContent);
        /* string gift_url = 9; */
        if (message.giftUrl !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.giftUrl);
        /* int32 reserve_status = 10; */
        if (message.reserveStatus !== 0)
            writer.tag(10, WireType.Varint).int32(message.reserveStatus);
        /* bilibili.polymer.app.search.v1.RankInfo rank_info = 11; */
        if (message.rankInfo)
            RankInfo.internalBinaryWrite(message.rankInfo, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* string special_bg_color = 12; */
        if (message.specialBgColor !== "")
            writer.tag(12, WireType.LengthDelimited).string(message.specialBgColor);
        /* bilibili.polymer.app.search.v1.CloudGameParams cloud_game_params = 13; */
        if (message.cloudGameParams)
            CloudGameParams.internalBinaryWrite(message.cloudGameParams, writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        /* bool show_cloud_game_entry = 14; */
        if (message.showCloudGameEntry !== false)
            writer.tag(14, WireType.Varint).bool(message.showCloudGameEntry);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchGameCard
 */
export const SearchGameCard = new SearchGameCard$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchInlineData$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchInlineData", [
            { no: 1, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "player_args", kind: "message", T: () => PlayerArgs },
            { no: 4, name: "can_play", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "args", kind: "message", T: () => Args },
            { no: 6, name: "card_goto", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "card_type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "cover_left_icon1", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 10, name: "cover_left_icon2", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 11, name: "cover_left_text1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "cover_left_text2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "up_args", kind: "message", T: () => UpArgs },
            { no: 14, name: "extra_uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 15, name: "is_fav", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 16, name: "is_coin", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 17, name: "goto", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 18, name: "share", kind: "message", T: () => Share },
            { no: 19, name: "three_point", kind: "message", T: () => ThreePoint2 },
            { no: 20, name: "three_point_v2", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ThreePointV2 },
            { no: 21, name: "share_plane", kind: "message", T: () => SharePlane },
            { no: 22, name: "three_point_meta", kind: "message", T: () => InlineThreePointPanel },
            { no: 23, name: "avatar", kind: "message", T: () => Avatar },
            { no: 24, name: "cover_right_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 25, name: "desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 26, name: "inline_progress_bar", kind: "message", T: () => InlineProgressBar },
            { no: 27, name: "like_button", kind: "message", T: () => SearchLikeButtonItem },
            { no: 28, name: "official_icon", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 29, name: "official_icon_v2", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 30, name: "param", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 31, name: "traffic_config", kind: "message", T: () => TrafficConfig },
            { no: 32, name: "is_atten", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 33, name: "goto_icon", kind: "message", T: () => GotoIcon },
            { no: 34, name: "disable_danmaku", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 35, name: "hide_danmaku_switch", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 36, name: "badge_style", kind: "message", T: () => ReasonStyle },
            { no: 37, name: "player_widget", kind: "message", T: () => PlayerWidget },
            { no: 38, name: "cover_badge_style", kind: "message", T: () => ReasonStyle },
            { no: 39, name: "right_top_live_badge", kind: "message", T: () => RightTopLiveBadge }
        ]);
    }
    create(value) {
        const message = { uri: "", title: "", canPlay: 0, cardGoto: "", cardType: "", cover: "", coverLeftIcon1: 0, coverLeftIcon2: 0, coverLeftText1: "", coverLeftText2: "", extraUri: "", isFav: false, isCoin: false, goto: "", threePointV2: [], coverRightText: "", desc: "", officialIcon: 0, officialIconV2: 0, param: "", isAtten: false, disableDanmaku: false, hideDanmakuSwitch: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string uri */ 1:
                    message.uri = reader.string();
                    break;
                case /* string title */ 2:
                    message.title = reader.string();
                    break;
                case /* bilibili.polymer.app.search.v1.PlayerArgs player_args */ 3:
                    message.playerArgs = PlayerArgs.internalBinaryRead(reader, reader.uint32(), options, message.playerArgs);
                    break;
                case /* int32 can_play */ 4:
                    message.canPlay = reader.int32();
                    break;
                case /* bilibili.polymer.app.search.v1.Args args */ 5:
                    message.args = Args.internalBinaryRead(reader, reader.uint32(), options, message.args);
                    break;
                case /* string card_goto */ 6:
                    message.cardGoto = reader.string();
                    break;
                case /* string card_type */ 7:
                    message.cardType = reader.string();
                    break;
                case /* string cover */ 8:
                    message.cover = reader.string();
                    break;
                case /* int32 cover_left_icon1 */ 9:
                    message.coverLeftIcon1 = reader.int32();
                    break;
                case /* int32 cover_left_icon2 */ 10:
                    message.coverLeftIcon2 = reader.int32();
                    break;
                case /* string cover_left_text1 */ 11:
                    message.coverLeftText1 = reader.string();
                    break;
                case /* string cover_left_text2 */ 12:
                    message.coverLeftText2 = reader.string();
                    break;
                case /* bilibili.polymer.app.search.v1.UpArgs up_args */ 13:
                    message.upArgs = UpArgs.internalBinaryRead(reader, reader.uint32(), options, message.upArgs);
                    break;
                case /* string extra_uri */ 14:
                    message.extraUri = reader.string();
                    break;
                case /* bool is_fav */ 15:
                    message.isFav = reader.bool();
                    break;
                case /* bool is_coin */ 16:
                    message.isCoin = reader.bool();
                    break;
                case /* string goto */ 17:
                    message.goto = reader.string();
                    break;
                case /* bilibili.polymer.app.search.v1.Share share */ 18:
                    message.share = Share.internalBinaryRead(reader, reader.uint32(), options, message.share);
                    break;
                case /* bilibili.polymer.app.search.v1.ThreePoint2 three_point */ 19:
                    message.threePoint = ThreePoint2.internalBinaryRead(reader, reader.uint32(), options, message.threePoint);
                    break;
                case /* repeated bilibili.polymer.app.search.v1.ThreePointV2 three_point_v2 */ 20:
                    message.threePointV2.push(ThreePointV2.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bilibili.polymer.app.search.v1.SharePlane share_plane */ 21:
                    message.sharePlane = SharePlane.internalBinaryRead(reader, reader.uint32(), options, message.sharePlane);
                    break;
                case /* bilibili.polymer.app.search.v1.InlineThreePointPanel three_point_meta */ 22:
                    message.threePointMeta = InlineThreePointPanel.internalBinaryRead(reader, reader.uint32(), options, message.threePointMeta);
                    break;
                case /* bilibili.polymer.app.search.v1.Avatar avatar */ 23:
                    message.avatar = Avatar.internalBinaryRead(reader, reader.uint32(), options, message.avatar);
                    break;
                case /* string cover_right_text */ 24:
                    message.coverRightText = reader.string();
                    break;
                case /* string desc */ 25:
                    message.desc = reader.string();
                    break;
                case /* bilibili.polymer.app.search.v1.InlineProgressBar inline_progress_bar */ 26:
                    message.inlineProgressBar = InlineProgressBar.internalBinaryRead(reader, reader.uint32(), options, message.inlineProgressBar);
                    break;
                case /* bilibili.polymer.app.search.v1.SearchLikeButtonItem like_button */ 27:
                    message.likeButton = SearchLikeButtonItem.internalBinaryRead(reader, reader.uint32(), options, message.likeButton);
                    break;
                case /* int32 official_icon */ 28:
                    message.officialIcon = reader.int32();
                    break;
                case /* int32 official_icon_v2 */ 29:
                    message.officialIconV2 = reader.int32();
                    break;
                case /* string param */ 30:
                    message.param = reader.string();
                    break;
                case /* bilibili.polymer.app.search.v1.TrafficConfig traffic_config */ 31:
                    message.trafficConfig = TrafficConfig.internalBinaryRead(reader, reader.uint32(), options, message.trafficConfig);
                    break;
                case /* bool is_atten */ 32:
                    message.isAtten = reader.bool();
                    break;
                case /* bilibili.polymer.app.search.v1.GotoIcon goto_icon */ 33:
                    message.gotoIcon = GotoIcon.internalBinaryRead(reader, reader.uint32(), options, message.gotoIcon);
                    break;
                case /* bool disable_danmaku */ 34:
                    message.disableDanmaku = reader.bool();
                    break;
                case /* bool hide_danmaku_switch */ 35:
                    message.hideDanmakuSwitch = reader.bool();
                    break;
                case /* bilibili.polymer.app.search.v1.ReasonStyle badge_style */ 36:
                    message.badgeStyle = ReasonStyle.internalBinaryRead(reader, reader.uint32(), options, message.badgeStyle);
                    break;
                case /* bilibili.polymer.app.search.v1.PlayerWidget player_widget */ 37:
                    message.playerWidget = PlayerWidget.internalBinaryRead(reader, reader.uint32(), options, message.playerWidget);
                    break;
                case /* bilibili.polymer.app.search.v1.ReasonStyle cover_badge_style */ 38:
                    message.coverBadgeStyle = ReasonStyle.internalBinaryRead(reader, reader.uint32(), options, message.coverBadgeStyle);
                    break;
                case /* bilibili.polymer.app.search.v1.RightTopLiveBadge right_top_live_badge */ 39:
                    message.rightTopLiveBadge = RightTopLiveBadge.internalBinaryRead(reader, reader.uint32(), options, message.rightTopLiveBadge);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string uri = 1; */
        if (message.uri !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.uri);
        /* string title = 2; */
        if (message.title !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.title);
        /* bilibili.polymer.app.search.v1.PlayerArgs player_args = 3; */
        if (message.playerArgs)
            PlayerArgs.internalBinaryWrite(message.playerArgs, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* int32 can_play = 4; */
        if (message.canPlay !== 0)
            writer.tag(4, WireType.Varint).int32(message.canPlay);
        /* bilibili.polymer.app.search.v1.Args args = 5; */
        if (message.args)
            Args.internalBinaryWrite(message.args, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* string card_goto = 6; */
        if (message.cardGoto !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.cardGoto);
        /* string card_type = 7; */
        if (message.cardType !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.cardType);
        /* string cover = 8; */
        if (message.cover !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.cover);
        /* int32 cover_left_icon1 = 9; */
        if (message.coverLeftIcon1 !== 0)
            writer.tag(9, WireType.Varint).int32(message.coverLeftIcon1);
        /* int32 cover_left_icon2 = 10; */
        if (message.coverLeftIcon2 !== 0)
            writer.tag(10, WireType.Varint).int32(message.coverLeftIcon2);
        /* string cover_left_text1 = 11; */
        if (message.coverLeftText1 !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.coverLeftText1);
        /* string cover_left_text2 = 12; */
        if (message.coverLeftText2 !== "")
            writer.tag(12, WireType.LengthDelimited).string(message.coverLeftText2);
        /* bilibili.polymer.app.search.v1.UpArgs up_args = 13; */
        if (message.upArgs)
            UpArgs.internalBinaryWrite(message.upArgs, writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        /* string extra_uri = 14; */
        if (message.extraUri !== "")
            writer.tag(14, WireType.LengthDelimited).string(message.extraUri);
        /* bool is_fav = 15; */
        if (message.isFav !== false)
            writer.tag(15, WireType.Varint).bool(message.isFav);
        /* bool is_coin = 16; */
        if (message.isCoin !== false)
            writer.tag(16, WireType.Varint).bool(message.isCoin);
        /* string goto = 17; */
        if (message.goto !== "")
            writer.tag(17, WireType.LengthDelimited).string(message.goto);
        /* bilibili.polymer.app.search.v1.Share share = 18; */
        if (message.share)
            Share.internalBinaryWrite(message.share, writer.tag(18, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.ThreePoint2 three_point = 19; */
        if (message.threePoint)
            ThreePoint2.internalBinaryWrite(message.threePoint, writer.tag(19, WireType.LengthDelimited).fork(), options).join();
        /* repeated bilibili.polymer.app.search.v1.ThreePointV2 three_point_v2 = 20; */
        for (let i = 0; i < message.threePointV2.length; i++)
            ThreePointV2.internalBinaryWrite(message.threePointV2[i], writer.tag(20, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.SharePlane share_plane = 21; */
        if (message.sharePlane)
            SharePlane.internalBinaryWrite(message.sharePlane, writer.tag(21, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.InlineThreePointPanel three_point_meta = 22; */
        if (message.threePointMeta)
            InlineThreePointPanel.internalBinaryWrite(message.threePointMeta, writer.tag(22, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.Avatar avatar = 23; */
        if (message.avatar)
            Avatar.internalBinaryWrite(message.avatar, writer.tag(23, WireType.LengthDelimited).fork(), options).join();
        /* string cover_right_text = 24; */
        if (message.coverRightText !== "")
            writer.tag(24, WireType.LengthDelimited).string(message.coverRightText);
        /* string desc = 25; */
        if (message.desc !== "")
            writer.tag(25, WireType.LengthDelimited).string(message.desc);
        /* bilibili.polymer.app.search.v1.InlineProgressBar inline_progress_bar = 26; */
        if (message.inlineProgressBar)
            InlineProgressBar.internalBinaryWrite(message.inlineProgressBar, writer.tag(26, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.SearchLikeButtonItem like_button = 27; */
        if (message.likeButton)
            SearchLikeButtonItem.internalBinaryWrite(message.likeButton, writer.tag(27, WireType.LengthDelimited).fork(), options).join();
        /* int32 official_icon = 28; */
        if (message.officialIcon !== 0)
            writer.tag(28, WireType.Varint).int32(message.officialIcon);
        /* int32 official_icon_v2 = 29; */
        if (message.officialIconV2 !== 0)
            writer.tag(29, WireType.Varint).int32(message.officialIconV2);
        /* string param = 30; */
        if (message.param !== "")
            writer.tag(30, WireType.LengthDelimited).string(message.param);
        /* bilibili.polymer.app.search.v1.TrafficConfig traffic_config = 31; */
        if (message.trafficConfig)
            TrafficConfig.internalBinaryWrite(message.trafficConfig, writer.tag(31, WireType.LengthDelimited).fork(), options).join();
        /* bool is_atten = 32; */
        if (message.isAtten !== false)
            writer.tag(32, WireType.Varint).bool(message.isAtten);
        /* bilibili.polymer.app.search.v1.GotoIcon goto_icon = 33; */
        if (message.gotoIcon)
            GotoIcon.internalBinaryWrite(message.gotoIcon, writer.tag(33, WireType.LengthDelimited).fork(), options).join();
        /* bool disable_danmaku = 34; */
        if (message.disableDanmaku !== false)
            writer.tag(34, WireType.Varint).bool(message.disableDanmaku);
        /* bool hide_danmaku_switch = 35; */
        if (message.hideDanmakuSwitch !== false)
            writer.tag(35, WireType.Varint).bool(message.hideDanmakuSwitch);
        /* bilibili.polymer.app.search.v1.ReasonStyle badge_style = 36; */
        if (message.badgeStyle)
            ReasonStyle.internalBinaryWrite(message.badgeStyle, writer.tag(36, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.PlayerWidget player_widget = 37; */
        if (message.playerWidget)
            PlayerWidget.internalBinaryWrite(message.playerWidget, writer.tag(37, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.ReasonStyle cover_badge_style = 38; */
        if (message.coverBadgeStyle)
            ReasonStyle.internalBinaryWrite(message.coverBadgeStyle, writer.tag(38, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.RightTopLiveBadge right_top_live_badge = 39; */
        if (message.rightTopLiveBadge)
            RightTopLiveBadge.internalBinaryWrite(message.rightTopLiveBadge, writer.tag(39, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchInlineData
 */
export const SearchInlineData = new SearchInlineData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchLikeButtonItem$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchLikeButtonItem", [
            { no: 1, name: "aid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "count", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "selected", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "show_count", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 5, name: "like_resource", kind: "message", T: () => LikeResource },
            { no: 6, name: "like_night_resource", kind: "message", T: () => LikeResource },
            { no: 7, name: "dislike_resource", kind: "message", T: () => LikeResource },
            { no: 8, name: "dislike_night_resource", kind: "message", T: () => LikeResource }
        ]);
    }
    create(value) {
        const message = { aid: 0n, count: 0n, selected: 0, showCount: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 aid */ 1:
                    message.aid = reader.int64().toBigInt();
                    break;
                case /* int64 count */ 2:
                    message.count = reader.int64().toBigInt();
                    break;
                case /* int32 selected */ 3:
                    message.selected = reader.int32();
                    break;
                case /* bool show_count */ 4:
                    message.showCount = reader.bool();
                    break;
                case /* bilibili.polymer.app.search.v1.LikeResource like_resource */ 5:
                    message.likeResource = LikeResource.internalBinaryRead(reader, reader.uint32(), options, message.likeResource);
                    break;
                case /* bilibili.polymer.app.search.v1.LikeResource like_night_resource */ 6:
                    message.likeNightResource = LikeResource.internalBinaryRead(reader, reader.uint32(), options, message.likeNightResource);
                    break;
                case /* bilibili.polymer.app.search.v1.LikeResource dislike_resource */ 7:
                    message.dislikeResource = LikeResource.internalBinaryRead(reader, reader.uint32(), options, message.dislikeResource);
                    break;
                case /* bilibili.polymer.app.search.v1.LikeResource dislike_night_resource */ 8:
                    message.dislikeNightResource = LikeResource.internalBinaryRead(reader, reader.uint32(), options, message.dislikeNightResource);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 aid = 1; */
        if (message.aid !== 0n)
            writer.tag(1, WireType.Varint).int64(message.aid);
        /* int64 count = 2; */
        if (message.count !== 0n)
            writer.tag(2, WireType.Varint).int64(message.count);
        /* int32 selected = 3; */
        if (message.selected !== 0)
            writer.tag(3, WireType.Varint).int32(message.selected);
        /* bool show_count = 4; */
        if (message.showCount !== false)
            writer.tag(4, WireType.Varint).bool(message.showCount);
        /* bilibili.polymer.app.search.v1.LikeResource like_resource = 5; */
        if (message.likeResource)
            LikeResource.internalBinaryWrite(message.likeResource, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.LikeResource like_night_resource = 6; */
        if (message.likeNightResource)
            LikeResource.internalBinaryWrite(message.likeNightResource, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.LikeResource dislike_resource = 7; */
        if (message.dislikeResource)
            LikeResource.internalBinaryWrite(message.dislikeResource, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.LikeResource dislike_night_resource = 8; */
        if (message.dislikeNightResource)
            LikeResource.internalBinaryWrite(message.dislikeNightResource, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchLikeButtonItem
 */
export const SearchLikeButtonItem = new SearchLikeButtonItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchLiveCard$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchLiveCard", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "rcmd_reason", kind: "message", T: () => RcmdReason },
            { no: 4, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "online", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "badge", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "live_link", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "card_left_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "card_left_icon", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 10, name: "show_card_desc2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "right_top_live_badge", kind: "message", T: () => RightTopLiveBadge }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "", name: "", online: 0, badge: "", liveLink: "", cardLeftText: "", cardLeftIcon: 0, showCardDesc2: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* bilibili.polymer.app.search.v1.RcmdReason rcmd_reason */ 3:
                    message.rcmdReason = RcmdReason.internalBinaryRead(reader, reader.uint32(), options, message.rcmdReason);
                    break;
                case /* string name */ 4:
                    message.name = reader.string();
                    break;
                case /* int32 online */ 5:
                    message.online = reader.int32();
                    break;
                case /* string badge */ 6:
                    message.badge = reader.string();
                    break;
                case /* string live_link */ 7:
                    message.liveLink = reader.string();
                    break;
                case /* string card_left_text */ 8:
                    message.cardLeftText = reader.string();
                    break;
                case /* int32 card_left_icon */ 9:
                    message.cardLeftIcon = reader.int32();
                    break;
                case /* string show_card_desc2 */ 10:
                    message.showCardDesc2 = reader.string();
                    break;
                case /* bilibili.polymer.app.search.v1.RightTopLiveBadge right_top_live_badge */ 11:
                    message.rightTopLiveBadge = RightTopLiveBadge.internalBinaryRead(reader, reader.uint32(), options, message.rightTopLiveBadge);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* bilibili.polymer.app.search.v1.RcmdReason rcmd_reason = 3; */
        if (message.rcmdReason)
            RcmdReason.internalBinaryWrite(message.rcmdReason, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* string name = 4; */
        if (message.name !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.name);
        /* int32 online = 5; */
        if (message.online !== 0)
            writer.tag(5, WireType.Varint).int32(message.online);
        /* string badge = 6; */
        if (message.badge !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.badge);
        /* string live_link = 7; */
        if (message.liveLink !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.liveLink);
        /* string card_left_text = 8; */
        if (message.cardLeftText !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.cardLeftText);
        /* int32 card_left_icon = 9; */
        if (message.cardLeftIcon !== 0)
            writer.tag(9, WireType.Varint).int32(message.cardLeftIcon);
        /* string show_card_desc2 = 10; */
        if (message.showCardDesc2 !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.showCardDesc2);
        /* bilibili.polymer.app.search.v1.RightTopLiveBadge right_top_live_badge = 11; */
        if (message.rightTopLiveBadge)
            RightTopLiveBadge.internalBinaryWrite(message.rightTopLiveBadge, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchLiveCard
 */
export const SearchLiveCard = new SearchLiveCard$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchLiveInlineCard$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchLiveInlineCard", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "mid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "rcmd_reason_style", kind: "message", T: () => ReasonStyle },
            { no: 5, name: "roomid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 6, name: "live_link", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "live_room_inline", kind: "message", T: () => SearchInlineData },
            { no: 8, name: "inline_type", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "", mid: 0n, roomid: 0n, liveLink: "", inlineType: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* int64 mid */ 3:
                    message.mid = reader.int64().toBigInt();
                    break;
                case /* bilibili.polymer.app.search.v1.ReasonStyle rcmd_reason_style */ 4:
                    message.rcmdReasonStyle = ReasonStyle.internalBinaryRead(reader, reader.uint32(), options, message.rcmdReasonStyle);
                    break;
                case /* int64 roomid */ 5:
                    message.roomid = reader.int64().toBigInt();
                    break;
                case /* string live_link */ 6:
                    message.liveLink = reader.string();
                    break;
                case /* bilibili.polymer.app.search.v1.SearchInlineData live_room_inline */ 7:
                    message.liveRoomInline = SearchInlineData.internalBinaryRead(reader, reader.uint32(), options, message.liveRoomInline);
                    break;
                case /* string inline_type */ 8:
                    message.inlineType = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* int64 mid = 3; */
        if (message.mid !== 0n)
            writer.tag(3, WireType.Varint).int64(message.mid);
        /* bilibili.polymer.app.search.v1.ReasonStyle rcmd_reason_style = 4; */
        if (message.rcmdReasonStyle)
            ReasonStyle.internalBinaryWrite(message.rcmdReasonStyle, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* int64 roomid = 5; */
        if (message.roomid !== 0n)
            writer.tag(5, WireType.Varint).int64(message.roomid);
        /* string live_link = 6; */
        if (message.liveLink !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.liveLink);
        /* bilibili.polymer.app.search.v1.SearchInlineData live_room_inline = 7; */
        if (message.liveRoomInline)
            SearchInlineData.internalBinaryWrite(message.liveRoomInline, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* string inline_type = 8; */
        if (message.inlineType !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.inlineType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchLiveInlineCard
 */
export const SearchLiveInlineCard = new SearchLiveInlineCard$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchNewChannelCard$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchNewChannelCard", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "type_icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "channel_label1", kind: "message", T: () => ChannelLabel },
            { no: 6, name: "channel_label2", kind: "message", T: () => ChannelLabel },
            { no: 7, name: "channel_button", kind: "message", T: () => ChannelLabel },
            { no: 8, name: "design_type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "items", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ChannelMixedItem }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "", id: 0n, typeIcon: "", designType: "", items: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* int64 id */ 3:
                    message.id = reader.int64().toBigInt();
                    break;
                case /* string type_icon */ 4:
                    message.typeIcon = reader.string();
                    break;
                case /* bilibili.polymer.app.search.v1.ChannelLabel channel_label1 */ 5:
                    message.channelLabel1 = ChannelLabel.internalBinaryRead(reader, reader.uint32(), options, message.channelLabel1);
                    break;
                case /* bilibili.polymer.app.search.v1.ChannelLabel channel_label2 */ 6:
                    message.channelLabel2 = ChannelLabel.internalBinaryRead(reader, reader.uint32(), options, message.channelLabel2);
                    break;
                case /* bilibili.polymer.app.search.v1.ChannelLabel channel_button */ 7:
                    message.channelButton = ChannelLabel.internalBinaryRead(reader, reader.uint32(), options, message.channelButton);
                    break;
                case /* string design_type */ 8:
                    message.designType = reader.string();
                    break;
                case /* repeated bilibili.polymer.app.search.v1.ChannelMixedItem items */ 9:
                    message.items.push(ChannelMixedItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* int64 id = 3; */
        if (message.id !== 0n)
            writer.tag(3, WireType.Varint).int64(message.id);
        /* string type_icon = 4; */
        if (message.typeIcon !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.typeIcon);
        /* bilibili.polymer.app.search.v1.ChannelLabel channel_label1 = 5; */
        if (message.channelLabel1)
            ChannelLabel.internalBinaryWrite(message.channelLabel1, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.ChannelLabel channel_label2 = 6; */
        if (message.channelLabel2)
            ChannelLabel.internalBinaryWrite(message.channelLabel2, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.ChannelLabel channel_button = 7; */
        if (message.channelButton)
            ChannelLabel.internalBinaryWrite(message.channelButton, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* string design_type = 8; */
        if (message.designType !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.designType);
        /* repeated bilibili.polymer.app.search.v1.ChannelMixedItem items = 9; */
        for (let i = 0; i < message.items.length; i++)
            ChannelMixedItem.internalBinaryWrite(message.items[i], writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchNewChannelCard
 */
export const SearchNewChannelCard = new SearchNewChannelCard$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchNoResultSuggestWordCard$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchNoResultSuggestWordCard", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "sug_key_word_type", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "", sugKeyWordType: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* int32 sug_key_word_type */ 3:
                    message.sugKeyWordType = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* int32 sug_key_word_type = 3; */
        if (message.sugKeyWordType !== 0)
            writer.tag(3, WireType.Varint).int32(message.sugKeyWordType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchNoResultSuggestWordCard
 */
export const SearchNoResultSuggestWordCard = new SearchNoResultSuggestWordCard$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchOgvCard$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchOgvCard", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "sub_title1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "sub_title2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "bg_cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "special_bg_color", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "cover_uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", subTitle1: "", subTitle2: "", cover: "", bgCover: "", specialBgColor: "", coverUri: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string sub_title1 */ 2:
                    message.subTitle1 = reader.string();
                    break;
                case /* string sub_title2 */ 3:
                    message.subTitle2 = reader.string();
                    break;
                case /* string cover */ 4:
                    message.cover = reader.string();
                    break;
                case /* string bg_cover */ 5:
                    message.bgCover = reader.string();
                    break;
                case /* string special_bg_color */ 6:
                    message.specialBgColor = reader.string();
                    break;
                case /* string cover_uri */ 7:
                    message.coverUri = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string sub_title1 = 2; */
        if (message.subTitle1 !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.subTitle1);
        /* string sub_title2 = 3; */
        if (message.subTitle2 !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.subTitle2);
        /* string cover = 4; */
        if (message.cover !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.cover);
        /* string bg_cover = 5; */
        if (message.bgCover !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.bgCover);
        /* string special_bg_color = 6; */
        if (message.specialBgColor !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.specialBgColor);
        /* string cover_uri = 7; */
        if (message.coverUri !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.coverUri);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchOgvCard
 */
export const SearchOgvCard = new SearchOgvCard$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchOgvChannelCard$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchOgvChannelCard", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "media_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "styles", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "area", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "staff", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "badge", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "watch_button", kind: "message", T: () => WatchButton },
            { no: 9, name: "rating", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 10, name: "desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "badges_v2", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ReasonStyle },
            { no: 12, name: "styles_v2", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "", mediaId: 0n, styles: "", area: "", staff: "", badge: "", rating: 0, desc: "", badgesV2: [], stylesV2: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* int64 media_id */ 3:
                    message.mediaId = reader.int64().toBigInt();
                    break;
                case /* string styles */ 4:
                    message.styles = reader.string();
                    break;
                case /* string area */ 5:
                    message.area = reader.string();
                    break;
                case /* string staff */ 6:
                    message.staff = reader.string();
                    break;
                case /* string badge */ 7:
                    message.badge = reader.string();
                    break;
                case /* bilibili.polymer.app.search.v1.WatchButton watch_button */ 8:
                    message.watchButton = WatchButton.internalBinaryRead(reader, reader.uint32(), options, message.watchButton);
                    break;
                case /* double rating */ 9:
                    message.rating = reader.double();
                    break;
                case /* string desc */ 10:
                    message.desc = reader.string();
                    break;
                case /* repeated bilibili.polymer.app.search.v1.ReasonStyle badges_v2 */ 11:
                    message.badgesV2.push(ReasonStyle.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string styles_v2 */ 12:
                    message.stylesV2 = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* int64 media_id = 3; */
        if (message.mediaId !== 0n)
            writer.tag(3, WireType.Varint).int64(message.mediaId);
        /* string styles = 4; */
        if (message.styles !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.styles);
        /* string area = 5; */
        if (message.area !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.area);
        /* string staff = 6; */
        if (message.staff !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.staff);
        /* string badge = 7; */
        if (message.badge !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.badge);
        /* bilibili.polymer.app.search.v1.WatchButton watch_button = 8; */
        if (message.watchButton)
            WatchButton.internalBinaryWrite(message.watchButton, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* double rating = 9; */
        if (message.rating !== 0)
            writer.tag(9, WireType.Bit64).double(message.rating);
        /* string desc = 10; */
        if (message.desc !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.desc);
        /* repeated bilibili.polymer.app.search.v1.ReasonStyle badges_v2 = 11; */
        for (let i = 0; i < message.badgesV2.length; i++)
            ReasonStyle.internalBinaryWrite(message.badgesV2[i], writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* string styles_v2 = 12; */
        if (message.stylesV2 !== "")
            writer.tag(12, WireType.LengthDelimited).string(message.stylesV2);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchOgvChannelCard
 */
export const SearchOgvChannelCard = new SearchOgvChannelCard$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchOgvInlineCard$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchOgvInlineCard", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "author", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "danmaku", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "face", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "inline_type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "mid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 9, name: "play", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 10, name: "ogv_inline", kind: "message", T: () => SearchInlineData },
            { no: 11, name: "ogv_clip_info", kind: "message", T: () => OgvClipInfo },
            { no: 12, name: "watch_button", kind: "message", T: () => WatchButton },
            { no: 13, name: "score", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 14, name: "ogv_inline_exp", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 15, name: "badges_v2", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ReasonStyle }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "", author: "", danmaku: 0, desc: "", face: "", inlineType: "", mid: 0n, play: 0n, score: "", ogvInlineExp: 0, badgesV2: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* string author */ 3:
                    message.author = reader.string();
                    break;
                case /* int32 danmaku */ 4:
                    message.danmaku = reader.int32();
                    break;
                case /* string desc */ 5:
                    message.desc = reader.string();
                    break;
                case /* string face */ 6:
                    message.face = reader.string();
                    break;
                case /* string inline_type */ 7:
                    message.inlineType = reader.string();
                    break;
                case /* int64 mid */ 8:
                    message.mid = reader.int64().toBigInt();
                    break;
                case /* int64 play */ 9:
                    message.play = reader.int64().toBigInt();
                    break;
                case /* bilibili.polymer.app.search.v1.SearchInlineData ogv_inline */ 10:
                    message.ogvInline = SearchInlineData.internalBinaryRead(reader, reader.uint32(), options, message.ogvInline);
                    break;
                case /* bilibili.polymer.app.search.v1.OgvClipInfo ogv_clip_info */ 11:
                    message.ogvClipInfo = OgvClipInfo.internalBinaryRead(reader, reader.uint32(), options, message.ogvClipInfo);
                    break;
                case /* bilibili.polymer.app.search.v1.WatchButton watch_button */ 12:
                    message.watchButton = WatchButton.internalBinaryRead(reader, reader.uint32(), options, message.watchButton);
                    break;
                case /* string score */ 13:
                    message.score = reader.string();
                    break;
                case /* int32 ogv_inline_exp */ 14:
                    message.ogvInlineExp = reader.int32();
                    break;
                case /* repeated bilibili.polymer.app.search.v1.ReasonStyle badges_v2 */ 15:
                    message.badgesV2.push(ReasonStyle.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* string author = 3; */
        if (message.author !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.author);
        /* int32 danmaku = 4; */
        if (message.danmaku !== 0)
            writer.tag(4, WireType.Varint).int32(message.danmaku);
        /* string desc = 5; */
        if (message.desc !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.desc);
        /* string face = 6; */
        if (message.face !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.face);
        /* string inline_type = 7; */
        if (message.inlineType !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.inlineType);
        /* int64 mid = 8; */
        if (message.mid !== 0n)
            writer.tag(8, WireType.Varint).int64(message.mid);
        /* int64 play = 9; */
        if (message.play !== 0n)
            writer.tag(9, WireType.Varint).int64(message.play);
        /* bilibili.polymer.app.search.v1.SearchInlineData ogv_inline = 10; */
        if (message.ogvInline)
            SearchInlineData.internalBinaryWrite(message.ogvInline, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.OgvClipInfo ogv_clip_info = 11; */
        if (message.ogvClipInfo)
            OgvClipInfo.internalBinaryWrite(message.ogvClipInfo, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.WatchButton watch_button = 12; */
        if (message.watchButton)
            WatchButton.internalBinaryWrite(message.watchButton, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        /* string score = 13; */
        if (message.score !== "")
            writer.tag(13, WireType.LengthDelimited).string(message.score);
        /* int32 ogv_inline_exp = 14; */
        if (message.ogvInlineExp !== 0)
            writer.tag(14, WireType.Varint).int32(message.ogvInlineExp);
        /* repeated bilibili.polymer.app.search.v1.ReasonStyle badges_v2 = 15; */
        for (let i = 0; i < message.badgesV2.length; i++)
            ReasonStyle.internalBinaryWrite(message.badgesV2[i], writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchOgvInlineCard
 */
export const SearchOgvInlineCard = new SearchOgvInlineCard$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchOgvRecommendCard$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchOgvRecommendCard", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "items", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => OgvRecommendWord },
            { no: 4, name: "special_bg_color", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "", items: [], specialBgColor: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* repeated bilibili.polymer.app.search.v1.OgvRecommendWord items */ 3:
                    message.items.push(OgvRecommendWord.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string special_bg_color */ 4:
                    message.specialBgColor = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* repeated bilibili.polymer.app.search.v1.OgvRecommendWord items = 3; */
        for (let i = 0; i < message.items.length; i++)
            OgvRecommendWord.internalBinaryWrite(message.items[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* string special_bg_color = 4; */
        if (message.specialBgColor !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.specialBgColor);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchOgvRecommendCard
 */
export const SearchOgvRecommendCard = new SearchOgvRecommendCard$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchOgvRelationCard$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchOgvRelationCard", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "special_bg_color", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "more_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "more_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "items", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DetailsRelationItem },
            { no: 7, name: "is_new_style", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "ogv_card_ui", kind: "message", T: () => OgvCardUI }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "", specialBgColor: "", moreText: "", moreUrl: "", items: [], isNewStyle: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* string special_bg_color */ 3:
                    message.specialBgColor = reader.string();
                    break;
                case /* string more_text */ 4:
                    message.moreText = reader.string();
                    break;
                case /* string more_url */ 5:
                    message.moreUrl = reader.string();
                    break;
                case /* repeated bilibili.polymer.app.search.v1.DetailsRelationItem items */ 6:
                    message.items.push(DetailsRelationItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* int32 is_new_style */ 7:
                    message.isNewStyle = reader.int32();
                    break;
                case /* bilibili.polymer.app.search.v1.OgvCardUI ogv_card_ui */ 8:
                    message.ogvCardUi = OgvCardUI.internalBinaryRead(reader, reader.uint32(), options, message.ogvCardUi);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* string special_bg_color = 3; */
        if (message.specialBgColor !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.specialBgColor);
        /* string more_text = 4; */
        if (message.moreText !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.moreText);
        /* string more_url = 5; */
        if (message.moreUrl !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.moreUrl);
        /* repeated bilibili.polymer.app.search.v1.DetailsRelationItem items = 6; */
        for (let i = 0; i < message.items.length; i++)
            DetailsRelationItem.internalBinaryWrite(message.items[i], writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* int32 is_new_style = 7; */
        if (message.isNewStyle !== 0)
            writer.tag(7, WireType.Varint).int32(message.isNewStyle);
        /* bilibili.polymer.app.search.v1.OgvCardUI ogv_card_ui = 8; */
        if (message.ogvCardUi)
            OgvCardUI.internalBinaryWrite(message.ogvCardUi, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchOgvRelationCard
 */
export const SearchOgvRelationCard = new SearchOgvRelationCard$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchOlympicGameCard$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchOlympicGameCard", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "sports_match_item", kind: "message", T: () => SportsMatchItem },
            { no: 4, name: "match_top", kind: "message", T: () => MatchItem },
            { no: 5, name: "bg_cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "extra_link", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ExtraLink },
            { no: 7, name: "inline_type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "ugc_inline", kind: "message", T: () => SearchInlineData },
            { no: 9, name: "live_room_inline", kind: "message", T: () => SearchInlineData },
            { no: 10, name: "match_bottom", kind: "message", T: () => MatchItem }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "", bgCover: "", extraLink: [], inlineType: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* bilibili.polymer.app.search.v1.SportsMatchItem sports_match_item */ 3:
                    message.sportsMatchItem = SportsMatchItem.internalBinaryRead(reader, reader.uint32(), options, message.sportsMatchItem);
                    break;
                case /* bilibili.polymer.app.search.v1.MatchItem match_top */ 4:
                    message.matchTop = MatchItem.internalBinaryRead(reader, reader.uint32(), options, message.matchTop);
                    break;
                case /* string bg_cover */ 5:
                    message.bgCover = reader.string();
                    break;
                case /* repeated bilibili.polymer.app.search.v1.ExtraLink extra_link */ 6:
                    message.extraLink.push(ExtraLink.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string inline_type */ 7:
                    message.inlineType = reader.string();
                    break;
                case /* bilibili.polymer.app.search.v1.SearchInlineData ugc_inline */ 8:
                    message.ugcInline = SearchInlineData.internalBinaryRead(reader, reader.uint32(), options, message.ugcInline);
                    break;
                case /* bilibili.polymer.app.search.v1.SearchInlineData live_room_inline */ 9:
                    message.liveRoomInline = SearchInlineData.internalBinaryRead(reader, reader.uint32(), options, message.liveRoomInline);
                    break;
                case /* bilibili.polymer.app.search.v1.MatchItem match_bottom */ 10:
                    message.matchBottom = MatchItem.internalBinaryRead(reader, reader.uint32(), options, message.matchBottom);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* bilibili.polymer.app.search.v1.SportsMatchItem sports_match_item = 3; */
        if (message.sportsMatchItem)
            SportsMatchItem.internalBinaryWrite(message.sportsMatchItem, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.MatchItem match_top = 4; */
        if (message.matchTop)
            MatchItem.internalBinaryWrite(message.matchTop, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* string bg_cover = 5; */
        if (message.bgCover !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.bgCover);
        /* repeated bilibili.polymer.app.search.v1.ExtraLink extra_link = 6; */
        for (let i = 0; i < message.extraLink.length; i++)
            ExtraLink.internalBinaryWrite(message.extraLink[i], writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* string inline_type = 7; */
        if (message.inlineType !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.inlineType);
        /* bilibili.polymer.app.search.v1.SearchInlineData ugc_inline = 8; */
        if (message.ugcInline)
            SearchInlineData.internalBinaryWrite(message.ugcInline, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.SearchInlineData live_room_inline = 9; */
        if (message.liveRoomInline)
            SearchInlineData.internalBinaryWrite(message.liveRoomInline, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.MatchItem match_bottom = 10; */
        if (message.matchBottom)
            MatchItem.internalBinaryWrite(message.matchBottom, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchOlympicGameCard
 */
export const SearchOlympicGameCard = new SearchOlympicGameCard$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchOlympicWikiCard$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchOlympicWikiCard", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "card_business_badge", kind: "message", T: () => CardBusinessBadge },
            { no: 4, name: "read_more", kind: "message", T: () => NavigationButton },
            { no: 5, name: "inline_type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "ugc_inline", kind: "message", T: () => SearchInlineData },
            { no: 7, name: "live_room_inline", kind: "message", T: () => SearchInlineData },
            { no: 8, name: "pedia_cover", kind: "message", T: () => PediaCover },
            { no: 9, name: "navigation", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Navigation }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "", inlineType: "", navigation: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* bilibili.polymer.app.search.v1.CardBusinessBadge card_business_badge */ 3:
                    message.cardBusinessBadge = CardBusinessBadge.internalBinaryRead(reader, reader.uint32(), options, message.cardBusinessBadge);
                    break;
                case /* bilibili.polymer.app.search.v1.NavigationButton read_more */ 4:
                    message.readMore = NavigationButton.internalBinaryRead(reader, reader.uint32(), options, message.readMore);
                    break;
                case /* string inline_type */ 5:
                    message.inlineType = reader.string();
                    break;
                case /* bilibili.polymer.app.search.v1.SearchInlineData ugc_inline */ 6:
                    message.ugcInline = SearchInlineData.internalBinaryRead(reader, reader.uint32(), options, message.ugcInline);
                    break;
                case /* bilibili.polymer.app.search.v1.SearchInlineData live_room_inline */ 7:
                    message.liveRoomInline = SearchInlineData.internalBinaryRead(reader, reader.uint32(), options, message.liveRoomInline);
                    break;
                case /* bilibili.polymer.app.search.v1.PediaCover pedia_cover */ 8:
                    message.pediaCover = PediaCover.internalBinaryRead(reader, reader.uint32(), options, message.pediaCover);
                    break;
                case /* repeated bilibili.polymer.app.search.v1.Navigation navigation */ 9:
                    message.navigation.push(Navigation.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* bilibili.polymer.app.search.v1.CardBusinessBadge card_business_badge = 3; */
        if (message.cardBusinessBadge)
            CardBusinessBadge.internalBinaryWrite(message.cardBusinessBadge, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.NavigationButton read_more = 4; */
        if (message.readMore)
            NavigationButton.internalBinaryWrite(message.readMore, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* string inline_type = 5; */
        if (message.inlineType !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.inlineType);
        /* bilibili.polymer.app.search.v1.SearchInlineData ugc_inline = 6; */
        if (message.ugcInline)
            SearchInlineData.internalBinaryWrite(message.ugcInline, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.SearchInlineData live_room_inline = 7; */
        if (message.liveRoomInline)
            SearchInlineData.internalBinaryWrite(message.liveRoomInline, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.PediaCover pedia_cover = 8; */
        if (message.pediaCover)
            PediaCover.internalBinaryWrite(message.pediaCover, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* repeated bilibili.polymer.app.search.v1.Navigation navigation = 9; */
        for (let i = 0; i < message.navigation.length; i++)
            Navigation.internalBinaryWrite(message.navigation[i], writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchOlympicWikiCard
 */
export const SearchOlympicWikiCard = new SearchOlympicWikiCard$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchPediaCard$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchPediaCard", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "navigation", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Navigation },
            { no: 4, name: "read_more", kind: "message", T: () => NavigationButton },
            { no: 5, name: "navigation_module_count", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "pedia_cover", kind: "message", T: () => PediaCover },
            { no: 7, name: "card_business_badge", kind: "message", T: () => CardBusinessBadge }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "", navigation: [], navigationModuleCount: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* repeated bilibili.polymer.app.search.v1.Navigation navigation */ 3:
                    message.navigation.push(Navigation.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bilibili.polymer.app.search.v1.NavigationButton read_more */ 4:
                    message.readMore = NavigationButton.internalBinaryRead(reader, reader.uint32(), options, message.readMore);
                    break;
                case /* int32 navigation_module_count */ 5:
                    message.navigationModuleCount = reader.int32();
                    break;
                case /* bilibili.polymer.app.search.v1.PediaCover pedia_cover */ 6:
                    message.pediaCover = PediaCover.internalBinaryRead(reader, reader.uint32(), options, message.pediaCover);
                    break;
                case /* bilibili.polymer.app.search.v1.CardBusinessBadge card_business_badge */ 7:
                    message.cardBusinessBadge = CardBusinessBadge.internalBinaryRead(reader, reader.uint32(), options, message.cardBusinessBadge);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* repeated bilibili.polymer.app.search.v1.Navigation navigation = 3; */
        for (let i = 0; i < message.navigation.length; i++)
            Navigation.internalBinaryWrite(message.navigation[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.NavigationButton read_more = 4; */
        if (message.readMore)
            NavigationButton.internalBinaryWrite(message.readMore, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* int32 navigation_module_count = 5; */
        if (message.navigationModuleCount !== 0)
            writer.tag(5, WireType.Varint).int32(message.navigationModuleCount);
        /* bilibili.polymer.app.search.v1.PediaCover pedia_cover = 6; */
        if (message.pediaCover)
            PediaCover.internalBinaryWrite(message.pediaCover, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.CardBusinessBadge card_business_badge = 7; */
        if (message.cardBusinessBadge)
            CardBusinessBadge.internalBinaryWrite(message.cardBusinessBadge, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchPediaCard
 */
export const SearchPediaCard = new SearchPediaCard$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchPurchaseCard$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchPurchaseCard", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "badge", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "venue", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "price", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "price_complete", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "price_type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "required_number", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 9, name: "city", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "show_time", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 12, name: "shop_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "", badge: "", venue: "", price: 0, priceComplete: "", priceType: 0, requiredNumber: 0, city: "", showTime: "", id: 0n, shopName: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* string badge */ 3:
                    message.badge = reader.string();
                    break;
                case /* string venue */ 4:
                    message.venue = reader.string();
                    break;
                case /* int32 price */ 5:
                    message.price = reader.int32();
                    break;
                case /* string price_complete */ 6:
                    message.priceComplete = reader.string();
                    break;
                case /* int32 price_type */ 7:
                    message.priceType = reader.int32();
                    break;
                case /* int32 required_number */ 8:
                    message.requiredNumber = reader.int32();
                    break;
                case /* string city */ 9:
                    message.city = reader.string();
                    break;
                case /* string show_time */ 10:
                    message.showTime = reader.string();
                    break;
                case /* int64 id */ 11:
                    message.id = reader.int64().toBigInt();
                    break;
                case /* string shop_name */ 12:
                    message.shopName = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* string badge = 3; */
        if (message.badge !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.badge);
        /* string venue = 4; */
        if (message.venue !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.venue);
        /* int32 price = 5; */
        if (message.price !== 0)
            writer.tag(5, WireType.Varint).int32(message.price);
        /* string price_complete = 6; */
        if (message.priceComplete !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.priceComplete);
        /* int32 price_type = 7; */
        if (message.priceType !== 0)
            writer.tag(7, WireType.Varint).int32(message.priceType);
        /* int32 required_number = 8; */
        if (message.requiredNumber !== 0)
            writer.tag(8, WireType.Varint).int32(message.requiredNumber);
        /* string city = 9; */
        if (message.city !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.city);
        /* string show_time = 10; */
        if (message.showTime !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.showTime);
        /* int64 id = 11; */
        if (message.id !== 0n)
            writer.tag(11, WireType.Varint).int64(message.id);
        /* string shop_name = 12; */
        if (message.shopName !== "")
            writer.tag(12, WireType.LengthDelimited).string(message.shopName);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchPurchaseCard
 */
export const SearchPurchaseCard = new SearchPurchaseCard$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchRecommendTipCard$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchRecommendTipCard", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchRecommendTipCard
 */
export const SearchRecommendTipCard = new SearchRecommendTipCard$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchRecommendWordCard$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchRecommendWordCard", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => RecommendWord }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "", list: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* repeated bilibili.polymer.app.search.v1.RecommendWord list */ 3:
                    message.list.push(RecommendWord.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* repeated bilibili.polymer.app.search.v1.RecommendWord list = 3; */
        for (let i = 0; i < message.list.length; i++)
            RecommendWord.internalBinaryWrite(message.list[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchRecommendWordCard
 */
export const SearchRecommendWordCard = new SearchRecommendWordCard$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchSpecialCard$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchSpecialCard", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "new_rec_tags", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ReasonStyle },
            { no: 4, name: "card_business_badge", kind: "message", T: () => CardBusinessBadge },
            { no: 5, name: "badge", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "new_rec_tags_v2", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ReasonStyle }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "", newRecTags: [], badge: "", desc: "", newRecTagsV2: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* repeated bilibili.polymer.app.search.v1.ReasonStyle new_rec_tags */ 3:
                    message.newRecTags.push(ReasonStyle.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bilibili.polymer.app.search.v1.CardBusinessBadge card_business_badge */ 4:
                    message.cardBusinessBadge = CardBusinessBadge.internalBinaryRead(reader, reader.uint32(), options, message.cardBusinessBadge);
                    break;
                case /* string badge */ 5:
                    message.badge = reader.string();
                    break;
                case /* string desc */ 6:
                    message.desc = reader.string();
                    break;
                case /* repeated bilibili.polymer.app.search.v1.ReasonStyle new_rec_tags_v2 */ 7:
                    message.newRecTagsV2.push(ReasonStyle.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* repeated bilibili.polymer.app.search.v1.ReasonStyle new_rec_tags = 3; */
        for (let i = 0; i < message.newRecTags.length; i++)
            ReasonStyle.internalBinaryWrite(message.newRecTags[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.CardBusinessBadge card_business_badge = 4; */
        if (message.cardBusinessBadge)
            CardBusinessBadge.internalBinaryWrite(message.cardBusinessBadge, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* string badge = 5; */
        if (message.badge !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.badge);
        /* string desc = 6; */
        if (message.desc !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.desc);
        /* repeated bilibili.polymer.app.search.v1.ReasonStyle new_rec_tags_v2 = 7; */
        for (let i = 0; i < message.newRecTagsV2.length; i++)
            ReasonStyle.internalBinaryWrite(message.newRecTagsV2[i], writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchSpecialCard
 */
export const SearchSpecialCard = new SearchSpecialCard$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchSpecialGuideCard$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchSpecialGuideCard", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "phone", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "", phone: "", desc: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* string phone */ 3:
                    message.phone = reader.string();
                    break;
                case /* string desc */ 4:
                    message.desc = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* string phone = 3; */
        if (message.phone !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.phone);
        /* string desc = 4; */
        if (message.desc !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.desc);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchSpecialGuideCard
 */
export const SearchSpecialGuideCard = new SearchSpecialGuideCard$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchSportCard$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchSportCard", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "bg_cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "match_top", kind: "message", T: () => MatchItem },
            { no: 5, name: "match_bottom", kind: "message", T: () => MatchItem },
            { no: 6, name: "extra_link", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ExtraLink },
            { no: 7, name: "items", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => MatchInfoObj },
            { no: 8, name: "id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "", bgCover: "", extraLink: [], items: [], id: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* string bg_cover */ 3:
                    message.bgCover = reader.string();
                    break;
                case /* bilibili.polymer.app.search.v1.MatchItem match_top */ 4:
                    message.matchTop = MatchItem.internalBinaryRead(reader, reader.uint32(), options, message.matchTop);
                    break;
                case /* bilibili.polymer.app.search.v1.MatchItem match_bottom */ 5:
                    message.matchBottom = MatchItem.internalBinaryRead(reader, reader.uint32(), options, message.matchBottom);
                    break;
                case /* repeated bilibili.polymer.app.search.v1.ExtraLink extra_link */ 6:
                    message.extraLink.push(ExtraLink.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated bilibili.polymer.app.search.v1.MatchInfoObj items */ 7:
                    message.items.push(MatchInfoObj.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* int64 id */ 8:
                    message.id = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* string bg_cover = 3; */
        if (message.bgCover !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.bgCover);
        /* bilibili.polymer.app.search.v1.MatchItem match_top = 4; */
        if (message.matchTop)
            MatchItem.internalBinaryWrite(message.matchTop, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.MatchItem match_bottom = 5; */
        if (message.matchBottom)
            MatchItem.internalBinaryWrite(message.matchBottom, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* repeated bilibili.polymer.app.search.v1.ExtraLink extra_link = 6; */
        for (let i = 0; i < message.extraLink.length; i++)
            ExtraLink.internalBinaryWrite(message.extraLink[i], writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* repeated bilibili.polymer.app.search.v1.MatchInfoObj items = 7; */
        for (let i = 0; i < message.items.length; i++)
            MatchInfoObj.internalBinaryWrite(message.items[i], writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* int64 id = 8; */
        if (message.id !== 0n)
            writer.tag(8, WireType.Varint).int64(message.id);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchSportCard
 */
export const SearchSportCard = new SearchSportCard$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchSportInlineCard$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchSportInlineCard", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "bg_cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "match_top", kind: "message", T: () => MatchItem },
            { no: 5, name: "match_bottom", kind: "message", T: () => MatchItem },
            { no: 6, name: "extra_link", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ExtraLink },
            { no: 7, name: "items", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => MatchInfoObj },
            { no: 8, name: "id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 9, name: "esports_inline", kind: "message", T: () => SearchInlineData },
            { no: 10, name: "inline_type", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "", bgCover: "", extraLink: [], items: [], id: 0n, inlineType: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* string bg_cover */ 3:
                    message.bgCover = reader.string();
                    break;
                case /* bilibili.polymer.app.search.v1.MatchItem match_top */ 4:
                    message.matchTop = MatchItem.internalBinaryRead(reader, reader.uint32(), options, message.matchTop);
                    break;
                case /* bilibili.polymer.app.search.v1.MatchItem match_bottom */ 5:
                    message.matchBottom = MatchItem.internalBinaryRead(reader, reader.uint32(), options, message.matchBottom);
                    break;
                case /* repeated bilibili.polymer.app.search.v1.ExtraLink extra_link */ 6:
                    message.extraLink.push(ExtraLink.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated bilibili.polymer.app.search.v1.MatchInfoObj items */ 7:
                    message.items.push(MatchInfoObj.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* int64 id */ 8:
                    message.id = reader.int64().toBigInt();
                    break;
                case /* bilibili.polymer.app.search.v1.SearchInlineData esports_inline */ 9:
                    message.esportsInline = SearchInlineData.internalBinaryRead(reader, reader.uint32(), options, message.esportsInline);
                    break;
                case /* string inline_type */ 10:
                    message.inlineType = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* string bg_cover = 3; */
        if (message.bgCover !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.bgCover);
        /* bilibili.polymer.app.search.v1.MatchItem match_top = 4; */
        if (message.matchTop)
            MatchItem.internalBinaryWrite(message.matchTop, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.MatchItem match_bottom = 5; */
        if (message.matchBottom)
            MatchItem.internalBinaryWrite(message.matchBottom, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* repeated bilibili.polymer.app.search.v1.ExtraLink extra_link = 6; */
        for (let i = 0; i < message.extraLink.length; i++)
            ExtraLink.internalBinaryWrite(message.extraLink[i], writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* repeated bilibili.polymer.app.search.v1.MatchInfoObj items = 7; */
        for (let i = 0; i < message.items.length; i++)
            MatchInfoObj.internalBinaryWrite(message.items[i], writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* int64 id = 8; */
        if (message.id !== 0n)
            writer.tag(8, WireType.Varint).int64(message.id);
        /* bilibili.polymer.app.search.v1.SearchInlineData esports_inline = 9; */
        if (message.esportsInline)
            SearchInlineData.internalBinaryWrite(message.esportsInline, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* string inline_type = 10; */
        if (message.inlineType !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.inlineType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchSportInlineCard
 */
export const SearchSportInlineCard = new SearchSportInlineCard$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchTipsCard$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchTipsCard", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "sub_title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 134, name: "cover_night", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "", subTitle: "", coverNight: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* string sub_title */ 4:
                    message.subTitle = reader.string();
                    break;
                case /* string cover_night */ 134:
                    message.coverNight = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* string sub_title = 4; */
        if (message.subTitle !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.subTitle);
        /* string cover_night = 134; */
        if (message.coverNight !== "")
            writer.tag(134, WireType.LengthDelimited).string(message.coverNight);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchTipsCard
 */
export const SearchTipsCard = new SearchTipsCard$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchTopGameCard$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchTopGameCard", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "array", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "background_image", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "button_type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "game_icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "game_base_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 8, name: "game_status", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 9, name: "inline_type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "top_game_ui", kind: "message", T: () => TopGameUI },
            { no: 11, name: "notice_content", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "notice_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "rating", kind: "scalar", T: 2 /*ScalarType.FLOAT*/ },
            { no: 14, name: "score", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 15, name: "tab_info", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TabInfo },
            { no: 16, name: "tags", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 17, name: "ugc_inline", kind: "message", T: () => SearchInlineData },
            { no: 18, name: "video_cover_image", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 19, name: "inline_live", kind: "message", T: () => SearchInlineData }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "", array: 0, backgroundImage: "", buttonType: 0, gameIcon: "", gameBaseId: 0n, gameStatus: 0, inlineType: "", noticeContent: "", noticeName: "", rating: 0, score: "", tabInfo: [], tags: "", videoCoverImage: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* int32 array */ 3:
                    message.array = reader.int32();
                    break;
                case /* string background_image */ 4:
                    message.backgroundImage = reader.string();
                    break;
                case /* int32 button_type */ 5:
                    message.buttonType = reader.int32();
                    break;
                case /* string game_icon */ 6:
                    message.gameIcon = reader.string();
                    break;
                case /* int64 game_base_id */ 7:
                    message.gameBaseId = reader.int64().toBigInt();
                    break;
                case /* int32 game_status */ 8:
                    message.gameStatus = reader.int32();
                    break;
                case /* string inline_type */ 9:
                    message.inlineType = reader.string();
                    break;
                case /* bilibili.polymer.app.search.v1.TopGameUI top_game_ui */ 10:
                    message.topGameUi = TopGameUI.internalBinaryRead(reader, reader.uint32(), options, message.topGameUi);
                    break;
                case /* string notice_content */ 11:
                    message.noticeContent = reader.string();
                    break;
                case /* string notice_name */ 12:
                    message.noticeName = reader.string();
                    break;
                case /* float rating */ 13:
                    message.rating = reader.float();
                    break;
                case /* string score */ 14:
                    message.score = reader.string();
                    break;
                case /* repeated bilibili.polymer.app.search.v1.TabInfo tab_info */ 15:
                    message.tabInfo.push(TabInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string tags */ 16:
                    message.tags = reader.string();
                    break;
                case /* bilibili.polymer.app.search.v1.SearchInlineData ugc_inline */ 17:
                    message.ugcInline = SearchInlineData.internalBinaryRead(reader, reader.uint32(), options, message.ugcInline);
                    break;
                case /* string video_cover_image */ 18:
                    message.videoCoverImage = reader.string();
                    break;
                case /* bilibili.polymer.app.search.v1.SearchInlineData inline_live */ 19:
                    message.inlineLive = SearchInlineData.internalBinaryRead(reader, reader.uint32(), options, message.inlineLive);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* int32 array = 3; */
        if (message.array !== 0)
            writer.tag(3, WireType.Varint).int32(message.array);
        /* string background_image = 4; */
        if (message.backgroundImage !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.backgroundImage);
        /* int32 button_type = 5; */
        if (message.buttonType !== 0)
            writer.tag(5, WireType.Varint).int32(message.buttonType);
        /* string game_icon = 6; */
        if (message.gameIcon !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.gameIcon);
        /* int64 game_base_id = 7; */
        if (message.gameBaseId !== 0n)
            writer.tag(7, WireType.Varint).int64(message.gameBaseId);
        /* int32 game_status = 8; */
        if (message.gameStatus !== 0)
            writer.tag(8, WireType.Varint).int32(message.gameStatus);
        /* string inline_type = 9; */
        if (message.inlineType !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.inlineType);
        /* bilibili.polymer.app.search.v1.TopGameUI top_game_ui = 10; */
        if (message.topGameUi)
            TopGameUI.internalBinaryWrite(message.topGameUi, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* string notice_content = 11; */
        if (message.noticeContent !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.noticeContent);
        /* string notice_name = 12; */
        if (message.noticeName !== "")
            writer.tag(12, WireType.LengthDelimited).string(message.noticeName);
        /* float rating = 13; */
        if (message.rating !== 0)
            writer.tag(13, WireType.Bit32).float(message.rating);
        /* string score = 14; */
        if (message.score !== "")
            writer.tag(14, WireType.LengthDelimited).string(message.score);
        /* repeated bilibili.polymer.app.search.v1.TabInfo tab_info = 15; */
        for (let i = 0; i < message.tabInfo.length; i++)
            TabInfo.internalBinaryWrite(message.tabInfo[i], writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        /* string tags = 16; */
        if (message.tags !== "")
            writer.tag(16, WireType.LengthDelimited).string(message.tags);
        /* bilibili.polymer.app.search.v1.SearchInlineData ugc_inline = 17; */
        if (message.ugcInline)
            SearchInlineData.internalBinaryWrite(message.ugcInline, writer.tag(17, WireType.LengthDelimited).fork(), options).join();
        /* string video_cover_image = 18; */
        if (message.videoCoverImage !== "")
            writer.tag(18, WireType.LengthDelimited).string(message.videoCoverImage);
        /* bilibili.polymer.app.search.v1.SearchInlineData inline_live = 19; */
        if (message.inlineLive)
            SearchInlineData.internalBinaryWrite(message.inlineLive, writer.tag(19, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchTopGameCard
 */
export const SearchTopGameCard = new SearchTopGameCard$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchUgcInlineCard$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchUgcInlineCard", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "author", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "danmaku", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "inline_type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "mid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 8, name: "play", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 9, name: "ugc_inline", kind: "message", T: () => SearchInlineData },
            { no: 10, name: "full_text", kind: "message", T: () => FullTextResult }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "", author: "", danmaku: 0, desc: "", inlineType: "", mid: 0n, play: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* string author */ 3:
                    message.author = reader.string();
                    break;
                case /* int32 danmaku */ 4:
                    message.danmaku = reader.int32();
                    break;
                case /* string desc */ 5:
                    message.desc = reader.string();
                    break;
                case /* string inline_type */ 6:
                    message.inlineType = reader.string();
                    break;
                case /* int64 mid */ 7:
                    message.mid = reader.int64().toBigInt();
                    break;
                case /* int64 play */ 8:
                    message.play = reader.int64().toBigInt();
                    break;
                case /* bilibili.polymer.app.search.v1.SearchInlineData ugc_inline */ 9:
                    message.ugcInline = SearchInlineData.internalBinaryRead(reader, reader.uint32(), options, message.ugcInline);
                    break;
                case /* bilibili.polymer.app.search.v1.FullTextResult full_text */ 10:
                    message.fullText = FullTextResult.internalBinaryRead(reader, reader.uint32(), options, message.fullText);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* string author = 3; */
        if (message.author !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.author);
        /* int32 danmaku = 4; */
        if (message.danmaku !== 0)
            writer.tag(4, WireType.Varint).int32(message.danmaku);
        /* string desc = 5; */
        if (message.desc !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.desc);
        /* string inline_type = 6; */
        if (message.inlineType !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.inlineType);
        /* int64 mid = 7; */
        if (message.mid !== 0n)
            writer.tag(7, WireType.Varint).int64(message.mid);
        /* int64 play = 8; */
        if (message.play !== 0n)
            writer.tag(8, WireType.Varint).int64(message.play);
        /* bilibili.polymer.app.search.v1.SearchInlineData ugc_inline = 9; */
        if (message.ugcInline)
            SearchInlineData.internalBinaryWrite(message.ugcInline, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.FullTextResult full_text = 10; */
        if (message.fullText)
            FullTextResult.internalBinaryWrite(message.fullText, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchUgcInlineCard
 */
export const SearchUgcInlineCard = new SearchUgcInlineCard$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchUpperCard$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchUpperCard", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "sign", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "fans", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "archives", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "live_status", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 7, name: "roomid", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "official_verify", kind: "message", T: () => OfficialVerify },
            { no: 9, name: "face_nft_new", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 10, name: "nft_face_icon", kind: "message", T: () => NftFaceIcon },
            { no: 11, name: "av_items", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => AvItem },
            { no: 12, name: "is_up", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 13, name: "attentions", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 14, name: "level", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 15, name: "is_senior_member", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 16, name: "vip", kind: "message", T: () => VipInfo },
            { no: 17, name: "relation", kind: "message", T: () => Relation },
            { no: 18, name: "live_link", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 19, name: "notice", kind: "message", T: () => Notice }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "", sign: "", fans: 0, archives: 0, liveStatus: 0, roomid: 0, faceNftNew: 0, avItems: [], isUp: false, attentions: 0, level: 0, isSeniorMember: 0, liveLink: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* string sign */ 3:
                    message.sign = reader.string();
                    break;
                case /* int32 fans */ 4:
                    message.fans = reader.int32();
                    break;
                case /* int32 archives */ 5:
                    message.archives = reader.int32();
                    break;
                case /* int32 live_status */ 6:
                    message.liveStatus = reader.int32();
                    break;
                case /* int32 roomid */ 7:
                    message.roomid = reader.int32();
                    break;
                case /* bilibili.polymer.app.search.v1.OfficialVerify official_verify */ 8:
                    message.officialVerify = OfficialVerify.internalBinaryRead(reader, reader.uint32(), options, message.officialVerify);
                    break;
                case /* int32 face_nft_new */ 9:
                    message.faceNftNew = reader.int32();
                    break;
                case /* bilibili.polymer.app.search.v1.NftFaceIcon nft_face_icon */ 10:
                    message.nftFaceIcon = NftFaceIcon.internalBinaryRead(reader, reader.uint32(), options, message.nftFaceIcon);
                    break;
                case /* repeated bilibili.polymer.app.search.v1.AvItem av_items */ 11:
                    message.avItems.push(AvItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bool is_up */ 12:
                    message.isUp = reader.bool();
                    break;
                case /* int32 attentions */ 13:
                    message.attentions = reader.int32();
                    break;
                case /* int32 level */ 14:
                    message.level = reader.int32();
                    break;
                case /* int32 is_senior_member */ 15:
                    message.isSeniorMember = reader.int32();
                    break;
                case /* bilibili.polymer.app.search.v1.VipInfo vip */ 16:
                    message.vip = VipInfo.internalBinaryRead(reader, reader.uint32(), options, message.vip);
                    break;
                case /* bilibili.polymer.app.search.v1.Relation relation */ 17:
                    message.relation = Relation.internalBinaryRead(reader, reader.uint32(), options, message.relation);
                    break;
                case /* string live_link */ 18:
                    message.liveLink = reader.string();
                    break;
                case /* bilibili.polymer.app.search.v1.Notice notice */ 19:
                    message.notice = Notice.internalBinaryRead(reader, reader.uint32(), options, message.notice);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* string sign = 3; */
        if (message.sign !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.sign);
        /* int32 fans = 4; */
        if (message.fans !== 0)
            writer.tag(4, WireType.Varint).int32(message.fans);
        /* int32 archives = 5; */
        if (message.archives !== 0)
            writer.tag(5, WireType.Varint).int32(message.archives);
        /* int32 live_status = 6; */
        if (message.liveStatus !== 0)
            writer.tag(6, WireType.Varint).int32(message.liveStatus);
        /* int32 roomid = 7; */
        if (message.roomid !== 0)
            writer.tag(7, WireType.Varint).int32(message.roomid);
        /* bilibili.polymer.app.search.v1.OfficialVerify official_verify = 8; */
        if (message.officialVerify)
            OfficialVerify.internalBinaryWrite(message.officialVerify, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* int32 face_nft_new = 9; */
        if (message.faceNftNew !== 0)
            writer.tag(9, WireType.Varint).int32(message.faceNftNew);
        /* bilibili.polymer.app.search.v1.NftFaceIcon nft_face_icon = 10; */
        if (message.nftFaceIcon)
            NftFaceIcon.internalBinaryWrite(message.nftFaceIcon, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* repeated bilibili.polymer.app.search.v1.AvItem av_items = 11; */
        for (let i = 0; i < message.avItems.length; i++)
            AvItem.internalBinaryWrite(message.avItems[i], writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* bool is_up = 12; */
        if (message.isUp !== false)
            writer.tag(12, WireType.Varint).bool(message.isUp);
        /* int32 attentions = 13; */
        if (message.attentions !== 0)
            writer.tag(13, WireType.Varint).int32(message.attentions);
        /* int32 level = 14; */
        if (message.level !== 0)
            writer.tag(14, WireType.Varint).int32(message.level);
        /* int32 is_senior_member = 15; */
        if (message.isSeniorMember !== 0)
            writer.tag(15, WireType.Varint).int32(message.isSeniorMember);
        /* bilibili.polymer.app.search.v1.VipInfo vip = 16; */
        if (message.vip)
            VipInfo.internalBinaryWrite(message.vip, writer.tag(16, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.Relation relation = 17; */
        if (message.relation)
            Relation.internalBinaryWrite(message.relation, writer.tag(17, WireType.LengthDelimited).fork(), options).join();
        /* string live_link = 18; */
        if (message.liveLink !== "")
            writer.tag(18, WireType.LengthDelimited).string(message.liveLink);
        /* bilibili.polymer.app.search.v1.Notice notice = 19; */
        if (message.notice)
            Notice.internalBinaryWrite(message.notice, writer.tag(19, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchUpperCard
 */
export const SearchUpperCard = new SearchUpperCard$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchVideoCard$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SearchVideoCard", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "rcmd_reason", kind: "message", T: () => RcmdReason },
            { no: 4, name: "new_rec_tags", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ReasonStyle },
            { no: 5, name: "three_point", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ThreePoint },
            { no: 6, name: "share", kind: "message", T: () => Share },
            { no: 7, name: "card_business_badge", kind: "message", T: () => CardBusinessBadge },
            { no: 8, name: "play", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 9, name: "danmaku", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 10, name: "author", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "duration", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "badges", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ReasonStyle },
            { no: 14, name: "mid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 15, name: "show_card_desc1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 16, name: "show_card_desc2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 17, name: "full_text", kind: "message", T: () => FullTextResult },
            { no: 18, name: "new_rec_tags_v2", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ReasonStyle },
            { no: 19, name: "badges_v2", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ReasonStyle }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "", newRecTags: [], threePoint: [], play: 0, danmaku: 0, author: "", desc: "", duration: "", badges: [], mid: 0n, showCardDesc1: "", showCardDesc2: "", newRecTagsV2: [], badgesV2: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* bilibili.polymer.app.search.v1.RcmdReason rcmd_reason */ 3:
                    message.rcmdReason = RcmdReason.internalBinaryRead(reader, reader.uint32(), options, message.rcmdReason);
                    break;
                case /* repeated bilibili.polymer.app.search.v1.ReasonStyle new_rec_tags */ 4:
                    message.newRecTags.push(ReasonStyle.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated bilibili.polymer.app.search.v1.ThreePoint three_point */ 5:
                    message.threePoint.push(ThreePoint.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bilibili.polymer.app.search.v1.Share share */ 6:
                    message.share = Share.internalBinaryRead(reader, reader.uint32(), options, message.share);
                    break;
                case /* bilibili.polymer.app.search.v1.CardBusinessBadge card_business_badge */ 7:
                    message.cardBusinessBadge = CardBusinessBadge.internalBinaryRead(reader, reader.uint32(), options, message.cardBusinessBadge);
                    break;
                case /* int32 play */ 8:
                    message.play = reader.int32();
                    break;
                case /* int32 danmaku */ 9:
                    message.danmaku = reader.int32();
                    break;
                case /* string author */ 10:
                    message.author = reader.string();
                    break;
                case /* string desc */ 11:
                    message.desc = reader.string();
                    break;
                case /* string duration */ 12:
                    message.duration = reader.string();
                    break;
                case /* repeated bilibili.polymer.app.search.v1.ReasonStyle badges */ 13:
                    message.badges.push(ReasonStyle.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* int64 mid */ 14:
                    message.mid = reader.int64().toBigInt();
                    break;
                case /* string show_card_desc1 */ 15:
                    message.showCardDesc1 = reader.string();
                    break;
                case /* string show_card_desc2 */ 16:
                    message.showCardDesc2 = reader.string();
                    break;
                case /* bilibili.polymer.app.search.v1.FullTextResult full_text */ 17:
                    message.fullText = FullTextResult.internalBinaryRead(reader, reader.uint32(), options, message.fullText);
                    break;
                case /* repeated bilibili.polymer.app.search.v1.ReasonStyle new_rec_tags_v2 */ 18:
                    message.newRecTagsV2.push(ReasonStyle.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated bilibili.polymer.app.search.v1.ReasonStyle badges_v2 */ 19:
                    message.badgesV2.push(ReasonStyle.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* bilibili.polymer.app.search.v1.RcmdReason rcmd_reason = 3; */
        if (message.rcmdReason)
            RcmdReason.internalBinaryWrite(message.rcmdReason, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* repeated bilibili.polymer.app.search.v1.ReasonStyle new_rec_tags = 4; */
        for (let i = 0; i < message.newRecTags.length; i++)
            ReasonStyle.internalBinaryWrite(message.newRecTags[i], writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* repeated bilibili.polymer.app.search.v1.ThreePoint three_point = 5; */
        for (let i = 0; i < message.threePoint.length; i++)
            ThreePoint.internalBinaryWrite(message.threePoint[i], writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.Share share = 6; */
        if (message.share)
            Share.internalBinaryWrite(message.share, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.CardBusinessBadge card_business_badge = 7; */
        if (message.cardBusinessBadge)
            CardBusinessBadge.internalBinaryWrite(message.cardBusinessBadge, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* int32 play = 8; */
        if (message.play !== 0)
            writer.tag(8, WireType.Varint).int32(message.play);
        /* int32 danmaku = 9; */
        if (message.danmaku !== 0)
            writer.tag(9, WireType.Varint).int32(message.danmaku);
        /* string author = 10; */
        if (message.author !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.author);
        /* string desc = 11; */
        if (message.desc !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.desc);
        /* string duration = 12; */
        if (message.duration !== "")
            writer.tag(12, WireType.LengthDelimited).string(message.duration);
        /* repeated bilibili.polymer.app.search.v1.ReasonStyle badges = 13; */
        for (let i = 0; i < message.badges.length; i++)
            ReasonStyle.internalBinaryWrite(message.badges[i], writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        /* int64 mid = 14; */
        if (message.mid !== 0n)
            writer.tag(14, WireType.Varint).int64(message.mid);
        /* string show_card_desc1 = 15; */
        if (message.showCardDesc1 !== "")
            writer.tag(15, WireType.LengthDelimited).string(message.showCardDesc1);
        /* string show_card_desc2 = 16; */
        if (message.showCardDesc2 !== "")
            writer.tag(16, WireType.LengthDelimited).string(message.showCardDesc2);
        /* bilibili.polymer.app.search.v1.FullTextResult full_text = 17; */
        if (message.fullText)
            FullTextResult.internalBinaryWrite(message.fullText, writer.tag(17, WireType.LengthDelimited).fork(), options).join();
        /* repeated bilibili.polymer.app.search.v1.ReasonStyle new_rec_tags_v2 = 18; */
        for (let i = 0; i < message.newRecTagsV2.length; i++)
            ReasonStyle.internalBinaryWrite(message.newRecTagsV2[i], writer.tag(18, WireType.LengthDelimited).fork(), options).join();
        /* repeated bilibili.polymer.app.search.v1.ReasonStyle badges_v2 = 19; */
        for (let i = 0; i < message.badgesV2.length; i++)
            ReasonStyle.internalBinaryWrite(message.badgesV2[i], writer.tag(19, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SearchVideoCard
 */
export const SearchVideoCard = new SearchVideoCard$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Share$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.Share", [
            { no: 1, name: "type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "video", kind: "message", T: () => Video }
        ]);
    }
    create(value) {
        const message = { type: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string type */ 1:
                    message.type = reader.string();
                    break;
                case /* bilibili.polymer.app.search.v1.Video video */ 2:
                    message.video = Video.internalBinaryRead(reader, reader.uint32(), options, message.video);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string type = 1; */
        if (message.type !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.type);
        /* bilibili.polymer.app.search.v1.Video video = 2; */
        if (message.video)
            Video.internalBinaryWrite(message.video, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.Share
 */
export const Share = new Share$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ShareButtonItem$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.ShareButtonItem", [
            { no: 1, name: "type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "button_metas", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ButtonMeta }
        ]);
    }
    create(value) {
        const message = { type: 0, buttonMetas: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 type */ 1:
                    message.type = reader.int32();
                    break;
                case /* repeated bilibili.polymer.app.search.v1.ButtonMeta button_metas */ 2:
                    message.buttonMetas.push(ButtonMeta.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 type = 1; */
        if (message.type !== 0)
            writer.tag(1, WireType.Varint).int32(message.type);
        /* repeated bilibili.polymer.app.search.v1.ButtonMeta button_metas = 2; */
        for (let i = 0; i < message.buttonMetas.length; i++)
            ButtonMeta.internalBinaryWrite(message.buttonMetas[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.ShareButtonItem
 */
export const ShareButtonItem = new ShareButtonItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SharePlane$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SharePlane", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "share_subtitle", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "aid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 6, name: "bvid", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "share_to", kind: "message", T: () => ShareTo },
            { no: 8, name: "author", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "author_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 10, name: "short_link", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "play_number", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "room_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 13, name: "ep_id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 14, name: "area_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 15, name: "author_face", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 16, name: "season_id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 17, name: "share_from", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 18, name: "season_title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 19, name: "from", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", shareSubtitle: "", desc: "", cover: "", aid: 0n, bvid: "", author: "", authorId: 0n, shortLink: "", playNumber: "", roomId: 0n, epId: 0, areaName: "", authorFace: "", seasonId: 0, shareFrom: "", seasonTitle: "", from: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string share_subtitle */ 2:
                    message.shareSubtitle = reader.string();
                    break;
                case /* string desc */ 3:
                    message.desc = reader.string();
                    break;
                case /* string cover */ 4:
                    message.cover = reader.string();
                    break;
                case /* int64 aid */ 5:
                    message.aid = reader.int64().toBigInt();
                    break;
                case /* string bvid */ 6:
                    message.bvid = reader.string();
                    break;
                case /* bilibili.polymer.app.search.v1.ShareTo share_to */ 7:
                    message.shareTo = ShareTo.internalBinaryRead(reader, reader.uint32(), options, message.shareTo);
                    break;
                case /* string author */ 8:
                    message.author = reader.string();
                    break;
                case /* int64 author_id */ 9:
                    message.authorId = reader.int64().toBigInt();
                    break;
                case /* string short_link */ 10:
                    message.shortLink = reader.string();
                    break;
                case /* string play_number */ 11:
                    message.playNumber = reader.string();
                    break;
                case /* int64 room_id */ 12:
                    message.roomId = reader.int64().toBigInt();
                    break;
                case /* int32 ep_id */ 13:
                    message.epId = reader.int32();
                    break;
                case /* string area_name */ 14:
                    message.areaName = reader.string();
                    break;
                case /* string author_face */ 15:
                    message.authorFace = reader.string();
                    break;
                case /* int32 season_id */ 16:
                    message.seasonId = reader.int32();
                    break;
                case /* string share_from */ 17:
                    message.shareFrom = reader.string();
                    break;
                case /* string season_title */ 18:
                    message.seasonTitle = reader.string();
                    break;
                case /* string from */ 19:
                    message.from = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string share_subtitle = 2; */
        if (message.shareSubtitle !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.shareSubtitle);
        /* string desc = 3; */
        if (message.desc !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.desc);
        /* string cover = 4; */
        if (message.cover !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.cover);
        /* int64 aid = 5; */
        if (message.aid !== 0n)
            writer.tag(5, WireType.Varint).int64(message.aid);
        /* string bvid = 6; */
        if (message.bvid !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.bvid);
        /* bilibili.polymer.app.search.v1.ShareTo share_to = 7; */
        if (message.shareTo)
            ShareTo.internalBinaryWrite(message.shareTo, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* string author = 8; */
        if (message.author !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.author);
        /* int64 author_id = 9; */
        if (message.authorId !== 0n)
            writer.tag(9, WireType.Varint).int64(message.authorId);
        /* string short_link = 10; */
        if (message.shortLink !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.shortLink);
        /* string play_number = 11; */
        if (message.playNumber !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.playNumber);
        /* int64 room_id = 12; */
        if (message.roomId !== 0n)
            writer.tag(12, WireType.Varint).int64(message.roomId);
        /* int32 ep_id = 13; */
        if (message.epId !== 0)
            writer.tag(13, WireType.Varint).int32(message.epId);
        /* string area_name = 14; */
        if (message.areaName !== "")
            writer.tag(14, WireType.LengthDelimited).string(message.areaName);
        /* string author_face = 15; */
        if (message.authorFace !== "")
            writer.tag(15, WireType.LengthDelimited).string(message.authorFace);
        /* int32 season_id = 16; */
        if (message.seasonId !== 0)
            writer.tag(16, WireType.Varint).int32(message.seasonId);
        /* string share_from = 17; */
        if (message.shareFrom !== "")
            writer.tag(17, WireType.LengthDelimited).string(message.shareFrom);
        /* string season_title = 18; */
        if (message.seasonTitle !== "")
            writer.tag(18, WireType.LengthDelimited).string(message.seasonTitle);
        /* string from = 19; */
        if (message.from !== "")
            writer.tag(19, WireType.LengthDelimited).string(message.from);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SharePlane
 */
export const SharePlane = new SharePlane$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ShareTo$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.ShareTo", [
            { no: 1, name: "dynamic", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "im", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "copy", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 4, name: "more", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 5, name: "wechat", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 6, name: "weibo", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 7, name: "wechat_monment", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 8, name: "qq", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 9, name: "qzone", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 10, name: "facebook", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 11, name: "line", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 12, name: "messenger", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 13, name: "whats_app", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 14, name: "twitter", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value) {
        const message = { dynamic: false, im: false, copy: false, more: false, wechat: false, weibo: false, wechatMonment: false, qq: false, qzone: false, facebook: false, line: false, messenger: false, whatsApp: false, twitter: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bool dynamic */ 1:
                    message.dynamic = reader.bool();
                    break;
                case /* bool im */ 2:
                    message.im = reader.bool();
                    break;
                case /* bool copy */ 3:
                    message.copy = reader.bool();
                    break;
                case /* bool more */ 4:
                    message.more = reader.bool();
                    break;
                case /* bool wechat */ 5:
                    message.wechat = reader.bool();
                    break;
                case /* bool weibo */ 6:
                    message.weibo = reader.bool();
                    break;
                case /* bool wechat_monment */ 7:
                    message.wechatMonment = reader.bool();
                    break;
                case /* bool qq */ 8:
                    message.qq = reader.bool();
                    break;
                case /* bool qzone */ 9:
                    message.qzone = reader.bool();
                    break;
                case /* bool facebook */ 10:
                    message.facebook = reader.bool();
                    break;
                case /* bool line */ 11:
                    message.line = reader.bool();
                    break;
                case /* bool messenger */ 12:
                    message.messenger = reader.bool();
                    break;
                case /* bool whats_app */ 13:
                    message.whatsApp = reader.bool();
                    break;
                case /* bool twitter */ 14:
                    message.twitter = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bool dynamic = 1; */
        if (message.dynamic !== false)
            writer.tag(1, WireType.Varint).bool(message.dynamic);
        /* bool im = 2; */
        if (message.im !== false)
            writer.tag(2, WireType.Varint).bool(message.im);
        /* bool copy = 3; */
        if (message.copy !== false)
            writer.tag(3, WireType.Varint).bool(message.copy);
        /* bool more = 4; */
        if (message.more !== false)
            writer.tag(4, WireType.Varint).bool(message.more);
        /* bool wechat = 5; */
        if (message.wechat !== false)
            writer.tag(5, WireType.Varint).bool(message.wechat);
        /* bool weibo = 6; */
        if (message.weibo !== false)
            writer.tag(6, WireType.Varint).bool(message.weibo);
        /* bool wechat_monment = 7; */
        if (message.wechatMonment !== false)
            writer.tag(7, WireType.Varint).bool(message.wechatMonment);
        /* bool qq = 8; */
        if (message.qq !== false)
            writer.tag(8, WireType.Varint).bool(message.qq);
        /* bool qzone = 9; */
        if (message.qzone !== false)
            writer.tag(9, WireType.Varint).bool(message.qzone);
        /* bool facebook = 10; */
        if (message.facebook !== false)
            writer.tag(10, WireType.Varint).bool(message.facebook);
        /* bool line = 11; */
        if (message.line !== false)
            writer.tag(11, WireType.Varint).bool(message.line);
        /* bool messenger = 12; */
        if (message.messenger !== false)
            writer.tag(12, WireType.Varint).bool(message.messenger);
        /* bool whats_app = 13; */
        if (message.whatsApp !== false)
            writer.tag(13, WireType.Varint).bool(message.whatsApp);
        /* bool twitter = 14; */
        if (message.twitter !== false)
            writer.tag(14, WireType.Varint).bool(message.twitter);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.ShareTo
 */
export const ShareTo = new ShareTo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Space$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.Space", [
            { no: 1, name: "show", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "text_color", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "text_color_night", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "space_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { show: 0, textColor: "", textColorNight: "", text: "", spaceUrl: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 show */ 1:
                    message.show = reader.int32();
                    break;
                case /* string text_color */ 2:
                    message.textColor = reader.string();
                    break;
                case /* string text_color_night */ 3:
                    message.textColorNight = reader.string();
                    break;
                case /* string text */ 4:
                    message.text = reader.string();
                    break;
                case /* string space_url */ 5:
                    message.spaceUrl = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 show = 1; */
        if (message.show !== 0)
            writer.tag(1, WireType.Varint).int32(message.show);
        /* string text_color = 2; */
        if (message.textColor !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.textColor);
        /* string text_color_night = 3; */
        if (message.textColorNight !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.textColorNight);
        /* string text = 4; */
        if (message.text !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.text);
        /* string space_url = 5; */
        if (message.spaceUrl !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.spaceUrl);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.Space
 */
export const Space = new Space$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SportsMatchItem$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.SportsMatchItem", [
            { no: 1, name: "match_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "season_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "match_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "img", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "begin_time_desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "match_status_desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "sub_content", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "sub_extra_icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { matchId: 0n, seasonId: 0n, matchName: "", img: "", beginTimeDesc: "", matchStatusDesc: "", subContent: "", subExtraIcon: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 match_id */ 1:
                    message.matchId = reader.int64().toBigInt();
                    break;
                case /* int64 season_id */ 2:
                    message.seasonId = reader.int64().toBigInt();
                    break;
                case /* string match_name */ 3:
                    message.matchName = reader.string();
                    break;
                case /* string img */ 4:
                    message.img = reader.string();
                    break;
                case /* string begin_time_desc */ 5:
                    message.beginTimeDesc = reader.string();
                    break;
                case /* string match_status_desc */ 6:
                    message.matchStatusDesc = reader.string();
                    break;
                case /* string sub_content */ 7:
                    message.subContent = reader.string();
                    break;
                case /* string sub_extra_icon */ 8:
                    message.subExtraIcon = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 match_id = 1; */
        if (message.matchId !== 0n)
            writer.tag(1, WireType.Varint).int64(message.matchId);
        /* int64 season_id = 2; */
        if (message.seasonId !== 0n)
            writer.tag(2, WireType.Varint).int64(message.seasonId);
        /* string match_name = 3; */
        if (message.matchName !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.matchName);
        /* string img = 4; */
        if (message.img !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.img);
        /* string begin_time_desc = 5; */
        if (message.beginTimeDesc !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.beginTimeDesc);
        /* string match_status_desc = 6; */
        if (message.matchStatusDesc !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.matchStatusDesc);
        /* string sub_content = 7; */
        if (message.subContent !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.subContent);
        /* string sub_extra_icon = 8; */
        if (message.subExtraIcon !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.subExtraIcon);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.SportsMatchItem
 */
export const SportsMatchItem = new SportsMatchItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Stat$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.Stat", [
            { no: 1, name: "play", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "like", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "reply", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { play: 0, like: 0, reply: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 play */ 1:
                    message.play = reader.int32();
                    break;
                case /* int32 like */ 2:
                    message.like = reader.int32();
                    break;
                case /* int32 reply */ 3:
                    message.reply = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 play = 1; */
        if (message.play !== 0)
            writer.tag(1, WireType.Varint).int32(message.play);
        /* int32 like = 2; */
        if (message.like !== 0)
            writer.tag(2, WireType.Varint).int32(message.like);
        /* int32 reply = 3; */
        if (message.reply !== 0)
            writer.tag(3, WireType.Varint).int32(message.reply);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.Stat
 */
export const Stat = new Stat$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TabInfo$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.TabInfo", [
            { no: 1, name: "tab_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "tab_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "sort", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { tabName: "", tabUrl: "", sort: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string tab_name */ 1:
                    message.tabName = reader.string();
                    break;
                case /* string tab_url */ 2:
                    message.tabUrl = reader.string();
                    break;
                case /* int32 sort */ 3:
                    message.sort = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string tab_name = 1; */
        if (message.tabName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.tabName);
        /* string tab_url = 2; */
        if (message.tabUrl !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.tabUrl);
        /* int32 sort = 3; */
        if (message.sort !== 0)
            writer.tag(3, WireType.Varint).int32(message.sort);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.TabInfo
 */
export const TabInfo = new TabInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TextButton$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.TextButton", [
            { no: 1, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { text: "", uri: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string text */ 1:
                    message.text = reader.string();
                    break;
                case /* string uri */ 2:
                    message.uri = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string text = 1; */
        if (message.text !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.text);
        /* string uri = 2; */
        if (message.uri !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.uri);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.TextButton
 */
export const TextButton = new TextButton$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TextLabel$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.TextLabel", [
            { no: 1, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { text: "", uri: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string text */ 1:
                    message.text = reader.string();
                    break;
                case /* string uri */ 2:
                    message.uri = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string text = 1; */
        if (message.text !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.text);
        /* string uri = 2; */
        if (message.uri !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.uri);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.TextLabel
 */
export const TextLabel = new TextLabel$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Texts$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.Texts", [
            { no: 1, name: "booking_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "unbooking_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { bookingText: "", unbookingText: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string booking_text */ 1:
                    message.bookingText = reader.string();
                    break;
                case /* string unbooking_text */ 2:
                    message.unbookingText = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string booking_text = 1; */
        if (message.bookingText !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.bookingText);
        /* string unbooking_text = 2; */
        if (message.unbookingText !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.unbookingText);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.Texts
 */
export const Texts = new Texts$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ThreePoint$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.ThreePoint", [
            { no: 1, name: "type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { type: "", icon: "", title: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string type */ 1:
                    message.type = reader.string();
                    break;
                case /* string icon */ 2:
                    message.icon = reader.string();
                    break;
                case /* string title */ 3:
                    message.title = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string type = 1; */
        if (message.type !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.type);
        /* string icon = 2; */
        if (message.icon !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.icon);
        /* string title = 3; */
        if (message.title !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.title);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.ThreePoint
 */
export const ThreePoint = new ThreePoint$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ThreePoint2$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.ThreePoint2", [
            { no: 1, name: "dislike_reasons", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DislikeReason },
            { no: 2, name: "feedbacks", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DislikeReason },
            { no: 3, name: "watch_later", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { dislikeReasons: [], feedbacks: [], watchLater: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.polymer.app.search.v1.DislikeReason dislike_reasons */ 1:
                    message.dislikeReasons.push(DislikeReason.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated bilibili.polymer.app.search.v1.DislikeReason feedbacks */ 2:
                    message.feedbacks.push(DislikeReason.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* int32 watch_later */ 3:
                    message.watchLater = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.polymer.app.search.v1.DislikeReason dislike_reasons = 1; */
        for (let i = 0; i < message.dislikeReasons.length; i++)
            DislikeReason.internalBinaryWrite(message.dislikeReasons[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* repeated bilibili.polymer.app.search.v1.DislikeReason feedbacks = 2; */
        for (let i = 0; i < message.feedbacks.length; i++)
            DislikeReason.internalBinaryWrite(message.feedbacks[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* int32 watch_later = 3; */
        if (message.watchLater !== 0)
            writer.tag(3, WireType.Varint).int32(message.watchLater);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.ThreePoint2
 */
export const ThreePoint2 = new ThreePoint2$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ThreePointV2$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.ThreePointV2", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "subtitle", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "reasons", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DislikeReason },
            { no: 4, name: "type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { title: "", subtitle: "", reasons: [], type: "", id: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string subtitle */ 2:
                    message.subtitle = reader.string();
                    break;
                case /* repeated bilibili.polymer.app.search.v1.DislikeReason reasons */ 3:
                    message.reasons.push(DislikeReason.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string type */ 4:
                    message.type = reader.string();
                    break;
                case /* int64 id */ 5:
                    message.id = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string subtitle = 2; */
        if (message.subtitle !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.subtitle);
        /* repeated bilibili.polymer.app.search.v1.DislikeReason reasons = 3; */
        for (let i = 0; i < message.reasons.length; i++)
            DislikeReason.internalBinaryWrite(message.reasons[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* string type = 4; */
        if (message.type !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.type);
        /* int64 id = 5; */
        if (message.id !== 0n)
            writer.tag(5, WireType.Varint).int64(message.id);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.ThreePointV2
 */
export const ThreePointV2 = new ThreePointV2$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ThreePointV3$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.ThreePointV3", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "selected_title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "subtitle", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "reasons", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DislikeReason },
            { no: 5, name: "type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 7, name: "selected", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "selected_icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "default_id", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { title: "", selectedTitle: "", subtitle: "", reasons: [], type: "", id: 0n, selected: 0, icon: "", selectedIcon: "", url: "", defaultId: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string selected_title */ 2:
                    message.selectedTitle = reader.string();
                    break;
                case /* string subtitle */ 3:
                    message.subtitle = reader.string();
                    break;
                case /* repeated bilibili.polymer.app.search.v1.DislikeReason reasons */ 4:
                    message.reasons.push(DislikeReason.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string type */ 5:
                    message.type = reader.string();
                    break;
                case /* int64 id */ 6:
                    message.id = reader.int64().toBigInt();
                    break;
                case /* int32 selected */ 7:
                    message.selected = reader.int32();
                    break;
                case /* string icon */ 8:
                    message.icon = reader.string();
                    break;
                case /* string selected_icon */ 9:
                    message.selectedIcon = reader.string();
                    break;
                case /* string url */ 10:
                    message.url = reader.string();
                    break;
                case /* int32 default_id */ 11:
                    message.defaultId = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string selected_title = 2; */
        if (message.selectedTitle !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.selectedTitle);
        /* string subtitle = 3; */
        if (message.subtitle !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.subtitle);
        /* repeated bilibili.polymer.app.search.v1.DislikeReason reasons = 4; */
        for (let i = 0; i < message.reasons.length; i++)
            DislikeReason.internalBinaryWrite(message.reasons[i], writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* string type = 5; */
        if (message.type !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.type);
        /* int64 id = 6; */
        if (message.id !== 0n)
            writer.tag(6, WireType.Varint).int64(message.id);
        /* int32 selected = 7; */
        if (message.selected !== 0)
            writer.tag(7, WireType.Varint).int32(message.selected);
        /* string icon = 8; */
        if (message.icon !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.icon);
        /* string selected_icon = 9; */
        if (message.selectedIcon !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.selectedIcon);
        /* string url = 10; */
        if (message.url !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.url);
        /* int32 default_id = 11; */
        if (message.defaultId !== 0)
            writer.tag(11, WireType.Varint).int32(message.defaultId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.ThreePointV3
 */
export const ThreePointV3 = new ThreePointV3$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ThreePointV4$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.ThreePointV4", [
            { no: 1, name: "share_plane", kind: "message", T: () => SharePlane },
            { no: 2, name: "watch_later", kind: "message", T: () => WatchLater }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.polymer.app.search.v1.SharePlane share_plane */ 1:
                    message.sharePlane = SharePlane.internalBinaryRead(reader, reader.uint32(), options, message.sharePlane);
                    break;
                case /* bilibili.polymer.app.search.v1.WatchLater watch_later */ 2:
                    message.watchLater = WatchLater.internalBinaryRead(reader, reader.uint32(), options, message.watchLater);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.polymer.app.search.v1.SharePlane share_plane = 1; */
        if (message.sharePlane)
            SharePlane.internalBinaryWrite(message.sharePlane, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.polymer.app.search.v1.WatchLater watch_later = 2; */
        if (message.watchLater)
            WatchLater.internalBinaryWrite(message.watchLater, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.ThreePointV4
 */
export const ThreePointV4 = new ThreePointV4$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TopGameUI$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.TopGameUI", [
            { no: 1, name: "background_image", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover_default_color", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "gaussian_blur_value", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "mask_color_value", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "mask_opacity", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "module_color", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { backgroundImage: "", coverDefaultColor: "", gaussianBlurValue: "", maskColorValue: "", maskOpacity: "", moduleColor: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string background_image */ 1:
                    message.backgroundImage = reader.string();
                    break;
                case /* string cover_default_color */ 2:
                    message.coverDefaultColor = reader.string();
                    break;
                case /* string gaussian_blur_value */ 3:
                    message.gaussianBlurValue = reader.string();
                    break;
                case /* string mask_color_value */ 4:
                    message.maskColorValue = reader.string();
                    break;
                case /* string mask_opacity */ 5:
                    message.maskOpacity = reader.string();
                    break;
                case /* string module_color */ 6:
                    message.moduleColor = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string background_image = 1; */
        if (message.backgroundImage !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.backgroundImage);
        /* string cover_default_color = 2; */
        if (message.coverDefaultColor !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.coverDefaultColor);
        /* string gaussian_blur_value = 3; */
        if (message.gaussianBlurValue !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.gaussianBlurValue);
        /* string mask_color_value = 4; */
        if (message.maskColorValue !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.maskColorValue);
        /* string mask_opacity = 5; */
        if (message.maskOpacity !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.maskOpacity);
        /* string module_color = 6; */
        if (message.moduleColor !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.moduleColor);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.TopGameUI
 */
export const TopGameUI = new TopGameUI$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TrafficConfig$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.TrafficConfig", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "options", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TrafficConfigOption },
            { no: 3, name: "default_option_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { title: "", options: [], defaultOptionId: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* repeated bilibili.polymer.app.search.v1.TrafficConfigOption options */ 2:
                    message.options.push(TrafficConfigOption.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* int64 default_option_id */ 3:
                    message.defaultOptionId = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* repeated bilibili.polymer.app.search.v1.TrafficConfigOption options = 2; */
        for (let i = 0; i < message.options.length; i++)
            TrafficConfigOption.internalBinaryWrite(message.options[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* int64 default_option_id = 3; */
        if (message.defaultOptionId !== 0n)
            writer.tag(3, WireType.Varint).int64(message.defaultOptionId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.TrafficConfig
 */
export const TrafficConfig = new TrafficConfig$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TrafficConfigOption$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.TrafficConfigOption", [
            { no: 1, name: "id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { id: 0, text: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 id */ 1:
                    message.id = reader.int32();
                    break;
                case /* string text */ 2:
                    message.text = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 id = 1; */
        if (message.id !== 0)
            writer.tag(1, WireType.Varint).int32(message.id);
        /* string text = 2; */
        if (message.text !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.text);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.TrafficConfigOption
 */
export const TrafficConfigOption = new TrafficConfigOption$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpArgs$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.UpArgs", [
            { no: 1, name: "up_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "up_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "up_face", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "selected", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { upId: 0n, upName: "", upFace: "", selected: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 up_id */ 1:
                    message.upId = reader.int64().toBigInt();
                    break;
                case /* string up_name */ 2:
                    message.upName = reader.string();
                    break;
                case /* string up_face */ 3:
                    message.upFace = reader.string();
                    break;
                case /* int32 selected */ 4:
                    message.selected = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 up_id = 1; */
        if (message.upId !== 0n)
            writer.tag(1, WireType.Varint).int64(message.upId);
        /* string up_name = 2; */
        if (message.upName !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.upName);
        /* string up_face = 3; */
        if (message.upFace !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.upFace);
        /* int32 selected = 4; */
        if (message.selected !== 0)
            writer.tag(4, WireType.Varint).int32(message.selected);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.UpArgs
 */
export const UpArgs = new UpArgs$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Upper$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.Upper", [
            { no: 1, name: "mid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "ptime_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { mid: 0n, title: "", cover: "", ptimeText: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 mid */ 1:
                    message.mid = reader.int64().toBigInt();
                    break;
                case /* string title */ 2:
                    message.title = reader.string();
                    break;
                case /* string cover */ 3:
                    message.cover = reader.string();
                    break;
                case /* string ptime_text */ 4:
                    message.ptimeText = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 mid = 1; */
        if (message.mid !== 0n)
            writer.tag(1, WireType.Varint).int64(message.mid);
        /* string title = 2; */
        if (message.title !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.title);
        /* string cover = 3; */
        if (message.cover !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.cover);
        /* string ptime_text = 4; */
        if (message.ptimeText !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.ptimeText);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.Upper
 */
export const Upper = new Upper$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Video$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.Video", [
            { no: 1, name: "bvid", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "share_subtitle", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "is_hot_label", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 5, name: "page", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "page_count", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 7, name: "short_link", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { bvid: "", cid: 0n, shareSubtitle: "", isHotLabel: false, page: 0, pageCount: 0, shortLink: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string bvid */ 1:
                    message.bvid = reader.string();
                    break;
                case /* int64 cid */ 2:
                    message.cid = reader.int64().toBigInt();
                    break;
                case /* string share_subtitle */ 3:
                    message.shareSubtitle = reader.string();
                    break;
                case /* bool is_hot_label */ 4:
                    message.isHotLabel = reader.bool();
                    break;
                case /* int32 page */ 5:
                    message.page = reader.int32();
                    break;
                case /* int32 page_count */ 6:
                    message.pageCount = reader.int32();
                    break;
                case /* string short_link */ 7:
                    message.shortLink = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string bvid = 1; */
        if (message.bvid !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.bvid);
        /* int64 cid = 2; */
        if (message.cid !== 0n)
            writer.tag(2, WireType.Varint).int64(message.cid);
        /* string share_subtitle = 3; */
        if (message.shareSubtitle !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.shareSubtitle);
        /* bool is_hot_label = 4; */
        if (message.isHotLabel !== false)
            writer.tag(4, WireType.Varint).bool(message.isHotLabel);
        /* int32 page = 5; */
        if (message.page !== 0)
            writer.tag(5, WireType.Varint).int32(message.page);
        /* int32 page_count = 6; */
        if (message.pageCount !== 0)
            writer.tag(6, WireType.Varint).int32(message.pageCount);
        /* string short_link = 7; */
        if (message.shortLink !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.shortLink);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.Video
 */
export const Video = new Video$Type();
// @generated message type with reflection information, may provide speed optimized methods
class VipInfo$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.VipInfo", [
            { no: 1, name: "type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "status", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "due_date", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "vip_pay_type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "theme_type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "label", kind: "message", T: () => VipLabel },
            { no: 7, name: "avatar_subscript", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "nickname_color", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "role", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 10, name: "avatar_subscript_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "tv_vip_status", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 12, name: "tv_vip_pay_type", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { type: 0, status: 0, dueDate: 0n, vipPayType: 0, themeType: 0, avatarSubscript: 0, nicknameColor: "", role: 0n, avatarSubscriptUrl: "", tvVipStatus: 0, tvVipPayType: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 type */ 1:
                    message.type = reader.int32();
                    break;
                case /* int32 status */ 2:
                    message.status = reader.int32();
                    break;
                case /* int64 due_date */ 3:
                    message.dueDate = reader.int64().toBigInt();
                    break;
                case /* int32 vip_pay_type */ 4:
                    message.vipPayType = reader.int32();
                    break;
                case /* int32 theme_type */ 5:
                    message.themeType = reader.int32();
                    break;
                case /* bilibili.polymer.app.search.v1.VipLabel label */ 6:
                    message.label = VipLabel.internalBinaryRead(reader, reader.uint32(), options, message.label);
                    break;
                case /* int32 avatar_subscript */ 7:
                    message.avatarSubscript = reader.int32();
                    break;
                case /* string nickname_color */ 8:
                    message.nicknameColor = reader.string();
                    break;
                case /* int64 role */ 9:
                    message.role = reader.int64().toBigInt();
                    break;
                case /* string avatar_subscript_url */ 10:
                    message.avatarSubscriptUrl = reader.string();
                    break;
                case /* int32 tv_vip_status */ 11:
                    message.tvVipStatus = reader.int32();
                    break;
                case /* int32 tv_vip_pay_type */ 12:
                    message.tvVipPayType = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 type = 1; */
        if (message.type !== 0)
            writer.tag(1, WireType.Varint).int32(message.type);
        /* int32 status = 2; */
        if (message.status !== 0)
            writer.tag(2, WireType.Varint).int32(message.status);
        /* int64 due_date = 3; */
        if (message.dueDate !== 0n)
            writer.tag(3, WireType.Varint).int64(message.dueDate);
        /* int32 vip_pay_type = 4; */
        if (message.vipPayType !== 0)
            writer.tag(4, WireType.Varint).int32(message.vipPayType);
        /* int32 theme_type = 5; */
        if (message.themeType !== 0)
            writer.tag(5, WireType.Varint).int32(message.themeType);
        /* bilibili.polymer.app.search.v1.VipLabel label = 6; */
        if (message.label)
            VipLabel.internalBinaryWrite(message.label, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* int32 avatar_subscript = 7; */
        if (message.avatarSubscript !== 0)
            writer.tag(7, WireType.Varint).int32(message.avatarSubscript);
        /* string nickname_color = 8; */
        if (message.nicknameColor !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.nicknameColor);
        /* int64 role = 9; */
        if (message.role !== 0n)
            writer.tag(9, WireType.Varint).int64(message.role);
        /* string avatar_subscript_url = 10; */
        if (message.avatarSubscriptUrl !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.avatarSubscriptUrl);
        /* int32 tv_vip_status = 11; */
        if (message.tvVipStatus !== 0)
            writer.tag(11, WireType.Varint).int32(message.tvVipStatus);
        /* int32 tv_vip_pay_type = 12; */
        if (message.tvVipPayType !== 0)
            writer.tag(12, WireType.Varint).int32(message.tvVipPayType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.VipInfo
 */
export const VipInfo = new VipInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class VipLabel$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.VipLabel", [
            { no: 1, name: "path", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "label_theme", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "text_color", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "bg_style", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "bg_color", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "border_color", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "use_img_label", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 9, name: "img_label_uri_hans", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "img_label_uri_hant", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "img_label_uri_hans_static", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "img_label_uri_hant_static", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { path: "", text: "", labelTheme: "", textColor: "", bgStyle: 0, bgColor: "", borderColor: "", useImgLabel: false, imgLabelUriHans: "", imgLabelUriHant: "", imgLabelUriHansStatic: "", imgLabelUriHantStatic: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string path */ 1:
                    message.path = reader.string();
                    break;
                case /* string text */ 2:
                    message.text = reader.string();
                    break;
                case /* string label_theme */ 3:
                    message.labelTheme = reader.string();
                    break;
                case /* string text_color */ 4:
                    message.textColor = reader.string();
                    break;
                case /* int32 bg_style */ 5:
                    message.bgStyle = reader.int32();
                    break;
                case /* string bg_color */ 6:
                    message.bgColor = reader.string();
                    break;
                case /* string border_color */ 7:
                    message.borderColor = reader.string();
                    break;
                case /* bool use_img_label */ 8:
                    message.useImgLabel = reader.bool();
                    break;
                case /* string img_label_uri_hans */ 9:
                    message.imgLabelUriHans = reader.string();
                    break;
                case /* string img_label_uri_hant */ 10:
                    message.imgLabelUriHant = reader.string();
                    break;
                case /* string img_label_uri_hans_static */ 11:
                    message.imgLabelUriHansStatic = reader.string();
                    break;
                case /* string img_label_uri_hant_static */ 12:
                    message.imgLabelUriHantStatic = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string path = 1; */
        if (message.path !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.path);
        /* string text = 2; */
        if (message.text !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.text);
        /* string label_theme = 3; */
        if (message.labelTheme !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.labelTheme);
        /* string text_color = 4; */
        if (message.textColor !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.textColor);
        /* int32 bg_style = 5; */
        if (message.bgStyle !== 0)
            writer.tag(5, WireType.Varint).int32(message.bgStyle);
        /* string bg_color = 6; */
        if (message.bgColor !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.bgColor);
        /* string border_color = 7; */
        if (message.borderColor !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.borderColor);
        /* bool use_img_label = 8; */
        if (message.useImgLabel !== false)
            writer.tag(8, WireType.Varint).bool(message.useImgLabel);
        /* string img_label_uri_hans = 9; */
        if (message.imgLabelUriHans !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.imgLabelUriHans);
        /* string img_label_uri_hant = 10; */
        if (message.imgLabelUriHant !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.imgLabelUriHant);
        /* string img_label_uri_hans_static = 11; */
        if (message.imgLabelUriHansStatic !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.imgLabelUriHansStatic);
        /* string img_label_uri_hant_static = 12; */
        if (message.imgLabelUriHantStatic !== "")
            writer.tag(12, WireType.LengthDelimited).string(message.imgLabelUriHantStatic);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.VipLabel
 */
export const VipLabel = new VipLabel$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WatchButton$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.WatchButton", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "link", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", link: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string link */ 2:
                    message.link = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string link = 2; */
        if (message.link !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.link);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.WatchButton
 */
export const WatchButton = new WatchButton$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WatchedShow$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.WatchedShow", [
            { no: 1, name: "switch", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "num", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "text_small", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "text_large", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "icon_location", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "icon_web", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { switch: false, num: 0n, textSmall: "", textLarge: "", icon: "", iconLocation: "", iconWeb: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bool switch */ 1:
                    message.switch = reader.bool();
                    break;
                case /* int64 num */ 2:
                    message.num = reader.int64().toBigInt();
                    break;
                case /* string text_small */ 3:
                    message.textSmall = reader.string();
                    break;
                case /* string text_large */ 4:
                    message.textLarge = reader.string();
                    break;
                case /* string icon */ 5:
                    message.icon = reader.string();
                    break;
                case /* string icon_location */ 6:
                    message.iconLocation = reader.string();
                    break;
                case /* string icon_web */ 7:
                    message.iconWeb = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bool switch = 1; */
        if (message.switch !== false)
            writer.tag(1, WireType.Varint).bool(message.switch);
        /* int64 num = 2; */
        if (message.num !== 0n)
            writer.tag(2, WireType.Varint).int64(message.num);
        /* string text_small = 3; */
        if (message.textSmall !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.textSmall);
        /* string text_large = 4; */
        if (message.textLarge !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.textLarge);
        /* string icon = 5; */
        if (message.icon !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.icon);
        /* string icon_location = 6; */
        if (message.iconLocation !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.iconLocation);
        /* string icon_web = 7; */
        if (message.iconWeb !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.iconWeb);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.WatchedShow
 */
export const WatchedShow = new WatchedShow$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WatchLater$Type extends MessageType {
    constructor() {
        super("bilibili.polymer.app.search.v1.WatchLater", [
            { no: 1, name: "aid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "bvid", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { aid: 0n, bvid: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 aid */ 1:
                    message.aid = reader.int64().toBigInt();
                    break;
                case /* string bvid */ 2:
                    message.bvid = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 aid = 1; */
        if (message.aid !== 0n)
            writer.tag(1, WireType.Varint).int64(message.aid);
        /* string bvid = 2; */
        if (message.bvid !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.bvid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.polymer.app.search.v1.WatchLater
 */
export const WatchLater = new WatchLater$Type();
/**
 * @generated ServiceType for protobuf service bilibili.polymer.app.search.v1.Search
 */
export const Search = new ServiceType("bilibili.polymer.app.search.v1.Search", [
    { name: "SearchAll", options: {}, I: SearchAllRequest, O: SearchAllResponse },
    { name: "SearchByType", options: {}, I: SearchByTypeRequest, O: SearchByTypeResponse },
    { name: "SearchComic", options: {}, I: SearchComicRequest, O: SearchComicResponse }
]);
